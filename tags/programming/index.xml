<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on My notes and snippets</title><link>https://dev-hugo.justin-p.me/tags/programming/</link><description>Recent content in Programming on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 10 Mar 2020 16:43:50 +0100</lastBuildDate><atom:link href="https://dev-hugo.justin-p.me/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Bash</title><link>https://dev-hugo.justin-p.me/cheatsheets/programming/bash/</link><pubDate>Tue, 10 Mar 2020 16:43:50 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/programming/bash/</guid><description>Bash Getting started Example #!/usr/bin/env bash NAME=&amp;quot;John&amp;quot; echo &amp;quot;Hello $NAME!&amp;quot; Variables NAME=&amp;quot;John&amp;quot; echo $NAME echo &amp;quot;$NAME&amp;quot; echo &amp;quot;${NAME}!&amp;quot; String quotes NAME=&amp;quot;John&amp;quot; echo &amp;quot;Hi $NAME&amp;quot; #=&amp;gt; Hi John echo 'Hi $NAME' #=&amp;gt; Hi $NAME Shell execution echo &amp;quot;I'm in $(pwd)&amp;quot; echo &amp;quot;I'm in `pwd`&amp;quot; # Same See Command substitution
Conditional execution git commit &amp;amp;&amp;amp; git push git commit || echo &amp;quot;Commit failed&amp;quot; Function get_name() { echo &amp;quot;John&amp;quot; } echo &amp;quot;You are $(get_name)&amp;quot; Conditional if [[ -z &amp;quot;$string&amp;quot; ]]; then echo &amp;quot;String is empty&amp;quot; elif [[ -n &amp;quot;$string&amp;quot; ]]; then echo &amp;quot;String is not empty&amp;quot; fi Strict mode set -euo pipefail IFS=$'\n\t' See: Unofficial bash strict mode</description></item><item><title>Markdown</title><link>https://dev-hugo.justin-p.me/cheatsheets/programming/markdown/</link><pubDate>Tue, 10 Mar 2020 16:43:50 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/programming/markdown/</guid><description>Markdown Headers # h1 ## h2 ### h3 Header 1 ======== Header 2 -------- Emphasis *italic* _italic_ **bold** __bold__ `code` Lists * Item 1 * Item 2 - Item 1 - Item 2 Links [link](http://google.com) [link][google] &amp;lt;http://google.com&amp;gt; Images ![Image alt text](/path/to/img.jpg) ![Image alt text](/path/to/img.jpg &amp;quot;title&amp;quot;) ![Image alt text][img] Code 4 space indent makes a code block code fences</description></item><item><title>MySQL</title><link>https://dev-hugo.justin-p.me/cheatsheets/programming/mysql/</link><pubDate>Tue, 10 Mar 2020 16:43:49 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/programming/mysql/</guid><description>MySQL Create / Delete Database CREATE DATABASE dbNameYouWant CREATE DATABASE dbNameYouWant CHARACTER SET utf8 DROP DATABASE dbNameYouWant ALTER DATABASE dbNameYouWant CHARACTER SET utf8 Backup Database to SQL File mysqldump -u Username -p dbNameYouWant &amp;gt; databasename_backup.sql Restore from backup SQL File mysql - u Username -p dbNameYouWant &amp;lt; databasename_backup.sql Repair Tables After Unclean Shutdown mysqlcheck --all-databases mysqlcheck --all-databases --fast Browsing SHOW DATABASES SHOW TABLES SHOW FIELDS FROM table / DESCRIBE table SHOW CREATE TABLE table SHOW PROCESSLIST KILL process_number Insert INSERT INTO table1 (field1, field2, .</description></item><item><title>Docker-Compose</title><link>https://dev-hugo.justin-p.me/cheatsheets/programming/docker-compose/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/programming/docker-compose/</guid><description>Docker compose Basic example # docker-compose.yml version: '2' services: web: build: . # build from Dockerfile context: ./Path dockerfile: Dockerfile ports: - &amp;quot;5000:5000&amp;quot; volumes: - .:/code redis: image: redis Commands docker-compose start docker-compose stop docker-compose pause docker-compose unpause docker-compose ps docker-compose up docker-compose down Reference Building web: # build from Dockerfile build: . # build from custom Dockerfile build: context: ./dir dockerfile: Dockerfile.dev # build from image image: ubuntu image: ubuntu:14.</description></item><item><title>Dockerfile</title><link>https://dev-hugo.justin-p.me/cheatsheets/programming/dockerfile/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/programming/dockerfile/</guid><description>dockerfile Reference Inheritance FROM ruby:2.2.2 Variables ENV APP_HOME /myapp RUN mkdir $APP_HOME Initialization RUN bundle install WORKDIR /myapp VOLUME [&amp;quot;/data&amp;quot;] # Specification for mount point ADD file.xyz /file.xyz COPY --chown=user:group host_file.xyz /path/container_file.xyz Onbuild ONBUILD RUN bundle install # when used with another file Commands EXPOSE 5900 CMD [&amp;quot;bundle&amp;quot;, &amp;quot;exec&amp;quot;, &amp;quot;rails&amp;quot;, &amp;quot;server&amp;quot;] Entrypoint ENTRYPOINT [&amp;quot;executable&amp;quot;, &amp;quot;param1&amp;quot;, &amp;quot;param2&amp;quot;] ENTRYPOINT command param1 param2 Configures a container that will run as an executable.</description></item><item><title>PHP</title><link>https://dev-hugo.justin-p.me/cheatsheets/programming/php/</link><pubDate>Tue, 10 Mar 2020 16:33:40 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/programming/php/</guid><description>PHP See github</description></item><item><title>PowerShell</title><link>https://dev-hugo.justin-p.me/cheatsheets/programming/powershell/</link><pubDate>Tue, 10 Mar 2020 16:33:40 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/programming/powershell/</guid><description>PowerShell See github</description></item><item><title>Python</title><link>https://dev-hugo.justin-p.me/cheatsheets/programming/python/</link><pubDate>Tue, 10 Mar 2020 16:33:40 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/programming/python/</guid><description>Python Oneliners HTTP Start a webserver that hosts the current pwd.
Python2 Python3 Python -m SimpleHTTPServer 8000 Python3 -m http.server 8000 FTP Start a ftp that hosts the current pwd.
Python2 Python3 Python -m pyftpdlib Python3 -m pyftpdlib unicode character Print a unicode character
Python2 Python3 Python -c &amp;quot;print unichr(234)&amp;quot; Python3 -c &amp;quot;print(chr(234))&amp;quot; Handystuff get current function name functionname = inspect.</description></item></channel></rss>