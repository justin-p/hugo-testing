<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on My notes and snippets</title><link>https://notes.justin-p.me/tags/tools/</link><description>Recent content in Tools on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 03 Sep 2021 11:34:00 +0200</lastBuildDate><atom:link href="https://notes.justin-p.me/tags/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>chisel</title><link>https://notes.justin-p.me/cheatsheets/tools/chisel/</link><pubDate>Fri, 03 Sep 2021 11:34:00 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/chisel/</guid><description>chisel Installation https://github.com/jpillora/chisel/releases Docker docker run --rm -it jpillora/chisel --help go get go get -v github.com/jpillora/chisel Usage Server chisel server [options] Client chisel client [options] &amp;lt;server&amp;gt; &amp;lt;remote&amp;gt; [remote] [remote] .. Flags Server --host, Defines the HTTP listening host â€“ the network interface (defaults the environment variable HOST and falls back to 0.0.0.0). --port, -p, Defines the HTTP listening port (defaults to the environment variable PORT and fallsback to port 8080). --key, An optional string to seed the generation of a ECDSA public and private key pair.</description></item><item><title>aria2</title><link>https://notes.justin-p.me/cheatsheets/tools/aria2/</link><pubDate>Thu, 02 Sep 2021 20:40:45 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/aria2/</guid><description>aria2 Installation apt install aria2 Usage aria2c [OPTIONS] [URI | MAGNET | TORRENT_FILE | METALINK_FILE]... Flags -v, --version Print the version number and exit. Tags: #basic -h, --help[=TAG|KEYWORD] Print usage and exit. The help messages are classified with tags. A tag starts with &amp;quot;#&amp;quot;. For example, type &amp;quot;--help=#http&amp;quot; to get the usage for the options tagged with &amp;quot;#http&amp;quot;. If non-tag word is given, print the usage for the options whose name includes that word.</description></item><item><title>hcxtools</title><link>https://notes.justin-p.me/cheatsheets/tools/hcxtools/</link><pubDate>Thu, 02 Sep 2021 20:17:35 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/hcxtools/</guid><description>hcxtools Installation git clone https://github.com/ZerBea/hcxtools cd hcxtools sudo apt install libpcap-dev libcurl4-openssl-dev libssl-dev make sudo make install Usage ./hcxpcapngtool [OPTIONS] Flags short options: -o &amp;lt;file&amp;gt; : output WPA-PBKDF2-PMKID+EAPOL hash file (hashcat -m 22000) get full advantage of reuse of PBKDF2 on PMKID and EAPOL -E &amp;lt;file&amp;gt; : output wordlist (autohex enabled on non ASCII characters) to use as input wordlist for cracker retrieved from every frame that contain an ESSID -R &amp;lt;file&amp;gt; : output wordlist (autohex enabled on non ASCII characters) to use as input wordlist for cracker retrieved from PROBEREQUEST frames only -I &amp;lt;file&amp;gt; : output unsorted identity list to use as input wordlist for cracker -U &amp;lt;file&amp;gt; : output unsorted username list to use as input wordlist for cracker -D &amp;lt;file&amp;gt; : output device information list format MAC MANUFACTURER MODELNAME SERIALNUMBER DEVICENAME -h : show this help -v : show version long options: --all : convert all possible hashes instead of only the best one that can lead to much overhead hashes use hcxhashtool to filter hashes need hashcat --nonce-error-corrections &amp;gt;= 8 --eapoltimeout=&amp;lt;digit&amp;gt; : set EAPOL TIMEOUT (milliseconds) : default: 5000 ms --nonce-error-corrections=&amp;lt;digit&amp;gt; : set nonce error correction warning: values &amp;gt; 0 can lead to uncrackable handshakes : default: 0 --ignore-ie : do not use CIPHER and AKM information this will convert all frames regadless of CIPHER and/OR AKM information, and can lead to uncrackable hashes --max-essids=&amp;lt;digit&amp;gt; : maximum allowed ESSIDs default: 1 ESSID disregard ESSID changes and take ESSID with highest ranking --eapmd5=&amp;lt;file&amp;gt; : output EAP MD5 CHALLENGE (hashcat -m 4800) --eapmd5-john=&amp;lt;file&amp;gt; : output EAP MD5 CHALLENGE (john chap) --eapleap=&amp;lt;file&amp;gt; : output EAP LEAP and MSCHAPV2 CHALLENGE (hashcat -m 5500, john netntlm) --tacacs-plus=&amp;lt;file&amp;gt; : output TACACS PLUS (hashcat -m 16100, john tacacs-plus) --nmea=&amp;lt;file&amp;gt; : output GPS data in NMEA format format: NMEA 0183 $GPGGA, $GPRMC, $GPWPL to convert it to gpx, use GPSBabel: gpsbabel -i nmea -f hcxdumptool.</description></item><item><title>Search-That-Hash</title><link>https://notes.justin-p.me/cheatsheets/tools/search-that-hash/</link><pubDate>Thu, 02 Sep 2021 20:02:34 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/search-that-hash/</guid><description>Search-That-Hash Installation pip3 install search-that-hash Usage sth [OPTIONS] Flags -t, --text TEXT Crack a single hash. -f, --file FILENAME The file of hashes, seperated by newlines. -w, --wordlist TEXT The wordlist you want to use for Hashcat. --timeout INTEGER Choose timeout in seconds. -g, --greppable Prints as JSON, use this to grep. --hashcat_binary TEXT Location of hashcat folder (if using windows). -o, --offline Use offline mode. Does not search for hashes in APIs.</description></item><item><title>Name-That-Hash</title><link>https://notes.justin-p.me/cheatsheets/tools/name-that-hash/</link><pubDate>Thu, 02 Sep 2021 19:51:37 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/name-that-hash/</guid><description>name-that-hash Installation pip3 install name-that-hash Usage nth [OPTIONS] Flags Options: -t, --text TEXT Check one hash, use single quotes ' as inverted commas &amp;quot; messes up on Linux. -f, --file FILENAME Checks every hash in a newline separated file. -g, --greppable Are you going to grep this output? Prints in JSON format. -b64, --base64 Decodes hashes in Base64 before identification. For files with mixed Base64 &amp;amp; non-encoded it attempts base64 first and then falls back to normal hash identification per hash.</description></item><item><title>ciphey</title><link>https://notes.justin-p.me/cheatsheets/tools/ciphey/</link><pubDate>Thu, 02 Sep 2021 19:47:20 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/ciphey/</guid><description>ciphey Installation python3 -m pip install ciphey --upgrade docker run -it --rm remnux/ciphey Usage ciphey [OPTIONS] [TEXT_STDIN] Flags Options: -t, --text TEXT The ciphertext you want to decrypt. -q, --quiet Decrease verbosity -g, --greppable Only print the answer (useful for grep) -v, --verbose -C, --checker TEXT Use the given checker -c, --config TEXT Uses the given config file. Defaults to appdirs.user_config_dir('ciphey', 'ciphey')/'config.yml' -w, --wordlist TEXT Uses the given wordlist -p, --param TEXT Passes a parameter to the language checker -l, --list-params BOOLEAN List the parameters of the selected module --searcher TEXT Select the searching algorithm to use -b, --bytes Forces ciphey to use binary mode for the input --default-dist TEXT Sets the default character/byte distribution -m, --module PATH Adds a module from the given path -A, --appdirs Print the location of where Ciphey wants the settings file to be -f, --file FILENAME --help Show this message and exit.</description></item><item><title>ThreatCheck</title><link>https://notes.justin-p.me/cheatsheets/tools/threatcheck/</link><pubDate>Thu, 02 Sep 2021 17:03:44 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/threatcheck/</guid><description>ThreatCheck Installation git clone https://github.com/rasta-mouse/ThreatCheck # and build using visual studio Usage ThreatCheck.exe [FILE] [OPTIONS] Determine the line(s) of code that are being flagged by Defender.
Obfuscate the detected line(s) of code so it is no longer flagged by Defender.
Flags -e, --engine (Default: Defender) Scanning engine. Options: Defender, AMSI -f, --file Analyze a file on disk -u, --url Analyze a file from a URL --help Display this help screen. --version Display version information.</description></item><item><title>AMSITrigger</title><link>https://notes.justin-p.me/cheatsheets/tools/amsitrigger/</link><pubDate>Thu, 02 Sep 2021 16:35:19 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/amsitrigger/</guid><description>AMSITrigger Installation git clone https://github.com/RythmStick/AMSITrigger # and build using visual studio or download release from https://github.com/RythmStick/AMSITrigger/releases
Place the AMSITrigger.exe and the PS file you want to check in a whitelisted folder.
Usage .\AmsiTrigger_x64.exe [PowerShell File] [OPTIONS] Flags -i, --inputfile=VALUE Powershell filename -u, --url=VALUE URL eg. https://10.1.1.1/Invoke-NinjaCopy.ps1 -f, --format=VALUE Output Format: 1 - Only show Triggers 2 - Show Triggers with Line numbers 3 - Show Triggers inline with code 4 - Show AMSI calls (xmas tree mode) -d, --debug Show Debug Info -m, --maxsiglength=VALUE Maximum signature Length to cater for, default=2048 -c, --chunksize=VALUE Chunk size to send to AMSIScanBuffer, default=4096 -h, -?</description></item><item><title>docker</title><link>https://notes.justin-p.me/cheatsheets/tools/docker/</link><pubDate>Thu, 02 Sep 2021 14:13:26 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/docker/</guid><description>docker Installation sudo apt-get remove docker docker-engine docker.io containerd runc sudo apt-get update sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo &amp;quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;quot; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io Usage Usage: docker [OPTIONS] COMMAND Flags Options: --config string Location of client config files (default &amp;quot;/home/justin-p/.docker&amp;quot;) -c, --context string Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with &amp;quot;docker context use&amp;quot;) -D, --debug Enable debug mode -H, --host list Daemon socket(s) to connect to -l, --log-level string Set the logging level (&amp;quot;debug&amp;quot;|&amp;quot;info&amp;quot;|&amp;quot;warn&amp;quot;|&amp;quot;error&amp;quot;|&amp;quot;fatal&amp;quot;) (default &amp;quot;info&amp;quot;) --tls Use TLS; implied by --tlsverify --tlscacert string Trust certs signed only by this CA (default &amp;quot;/home/justin-p/.</description></item><item><title>Rdesktop</title><link>https://notes.justin-p.me/cheatsheets/tools/rdesktop/</link><pubDate>Wed, 01 Sep 2021 23:07:10 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/rdesktop/</guid><description>rdesktop Installation apt install rdesktop Usage rdesktop [options] server[:port] Flags -u: user name -d: domain -s: shell / seamless application to start remotely -c: working directory -p: password (- to prompt) -n: client hostname -k: keyboard layout on server (en-us, de, sv, etc.) -g: desktop geometry (WxH[@DPI][+X[+Y]]) -i: enables smartcard authentication, password is used as pin -f: full-screen mode -b: force bitmap updates -L: local codepage -A: path to SeamlessRDP shell, this enables SeamlessRDP mode -V: tls version (1.</description></item><item><title>bettercap</title><link>https://notes.justin-p.me/cheatsheets/tools/bettercap/</link><pubDate>Thu, 04 Feb 2021 15:21:13 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/bettercap/</guid><description>Bettercap Installation sudo apt update sudo apt install golang git build-essential libpcap-dev libusb-1.0-0-dev libnetfilter-queue-dev go get github.com/bettercap/bettercap cd $GOPATH/src/github.com/bettercap/bettercap make build sudo make install Usage Usage of /home/justin-p/go/bin/bettercap: -autostart string Comma separated list of modules to auto start. (default &amp;quot;events.stream&amp;quot;) -caplet string Read commands from this file and execute them in the interactive session. -cpu-profile file Write cpu profile file. -debug Print debug messages. -env-file string Load environment variables from this file if found, set to empty to disable environment persistence.</description></item><item><title>hugo</title><link>https://notes.justin-p.me/cheatsheets/tools/hugo/</link><pubDate>Tue, 26 Jan 2021 17:27:07 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/hugo/</guid><description>hugo Installation snap install hugo --channel=extended Usage hugo [command] [flags] Flags Usage: hugo [flags] hugo [command] Available Commands: config Print the site configuration convert Convert your content to different formats deploy Deploy your site to a Cloud provider. env Print Hugo version and environment info gen A collection of several useful generators. help Help about any command import Import your site from others. list Listing out various types of content mod Various Hugo Modules helpers.</description></item><item><title>Empire</title><link>https://notes.justin-p.me/cheatsheets/tools/empire/</link><pubDate>Wed, 11 Mar 2020 10:40:17 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/empire/</guid><description>Empire Install System git clone --recursive https://github.com/BC-SECURITY/Empire.git cd Empire sudo ./setup/install.sh sudo poetry install Docker # Pull the latest image docker pull bcsecurity/empire:latest â€‹ # Run the server with the rest api and socket ports open docker run -it -p 1337:1337 -p 5000:5000 bcsecurity/empire:latest â€‹ # Run the client docker run -it -p 1337:1337 -p 5000:5000 bcsecurity/empire:latest client â€‹ # To run the client against the already running server container docker container ls docker exec -it {container-id} .</description></item><item><title>hashcat</title><link>https://notes.justin-p.me/cheatsheets/tools/hashcat/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/hashcat/</guid><description>hashcat Installation git clone https://github.com/hashcat/hashcat.git cd hashcat make sudo make install nvidea drivers
apt install nvidia-cuda-toolkit Usage hashcat [options]... hash|hashfile|hccapxfile [dictionary|mask|directory]... Flags Options Short / Long | Type | Description | Example ================================+======+======================================================+======================= -m, --hash-type | Num | Hash-type, see references below | -m 1000 -a, --attack-mode | Num | Attack-mode, see references below | -a 3 -V, --version | | Print version | -h, --help | | Print help | --quiet | | Suppress output | --hex-charset | | Assume charset is given in hex | --hex-salt | | Assume salt is given in hex | --hex-wordlist | | Assume words in wordlist are given in hex | --force | | Ignore warnings | --status | | Enable automatic update of the status screen | --status-json | | Enable JSON format for status ouput | --status-timer | Num | Sets seconds between status screen updates to X | --status-timer=1 --stdin-timeout-abort | Num | Abort if there is no input from stdin for X seconds | --stdin-timeout-abort=300 --machine-readable | | Display the status view in a machine-readable format | --keep-guessing | | Keep guessing the hash after it has been cracked | --self-test-disable | | Disable self-test functionality on startup | --loopback | | Add new plains to induct directory | --markov-hcstat2 | File | Specify hcstat2 file to use | --markov-hcstat2=my.</description></item><item><title>msfvenom</title><link>https://notes.justin-p.me/cheatsheets/tools/msfvenom/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/msfvenom/</guid><description>msfvenom Installation Install metasploit.
Usage msfvenom [options] &amp;lt;var=val&amp;gt; Flags -l, --list &amp;lt;type&amp;gt; List all modules for [type]. Types are: payloads, encoders, nops, platforms, archs, encrypt, formats, all -p, --payload &amp;lt;payload&amp;gt; Payload to use (--list payloads to list, --list-options for arguments). Specify '-' or STDIN for custom --list-options List --payload &amp;lt;value&amp;gt;'s standard, advanced and evasion options -f, --format &amp;lt;format&amp;gt; Output format (use --list formats to list) -e, --encoder &amp;lt;encoder&amp;gt; The encoder to use (use --list encoders to list) --service-name &amp;lt;value&amp;gt; The service name to use when generating a service binary --sec-name &amp;lt;value&amp;gt; The new section name to use when generating large Windows binaries.</description></item><item><title>ntlmrelayx</title><link>https://notes.justin-p.me/cheatsheets/tools/ntlmrelayx/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/ntlmrelayx/</guid><description>ntlmrelayx Relay to Workstations other Clients dump SAM ntlmrelayx.py -tf targets.txt -smb2support
interactive session ntlmrelayx.py -tf targets.txt -smb2support -i
Execute a file ntlmrelayx.py -tf targets.txt -smb2support -e malware.exe
Execute a command ntlmrelayx.py -tf targets.txt -smb2support -c &amp;quot;whoami&amp;quot;
Relay to AD with LDAP Basic command This command will:
dump LDAP information if credentials allow it add a Domain Admin account (user is added to Enterprise Admins group) setup a &amp;lsquo;domain user&amp;rsquo; account with ACL rights to preform a DCsync.</description></item><item><title>psexec</title><link>https://notes.justin-p.me/cheatsheets/tools/psexec/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/psexec/</guid><description>psexec MSFConsole exploit/windows/smb/psexec
PSExec.py psexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
alternatives smbexec smbexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
wmiexec Example 1 wmiexec.py lab.justin-p.me/dwalker:StrongPass1@10.11.12.101
Example 2 wmiexec.py lab.justin-p.me/dwalker@10.11.12.101 'powershell -exec bypass -Noninteractive -windowstyle hidden -e 'PAYLOAD' -hashes a:hash</description></item><item><title>responder</title><link>https://notes.justin-p.me/cheatsheets/tools/responder/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/responder/</guid><description>responder Basic usage run responder on eth0
responder -I eth0
Anaylise mode responder -I eth1 -A
Set and forget (silent for users) !!! likely break stuff on the network !!!
Verbose Enable answers for netbios wredir suffix queries. Enable answers for netbios domain suffix queries. Start the WPAD rogue proxy server. Fingerprint a host that issued an NBT-NS or LLMNR query. responder -I eth1 -rdwfv
Set and forget (interactive) !!! likely break stuff on the network !</description></item><item><title>Hydra</title><link>https://notes.justin-p.me/cheatsheets/tools/hydra/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/hydra/</guid><description>Hydra Installation apt install apt-get install libssl-dev libssh-dev libidn11-dev libpcre3-dev libgtk2.0-dev libmysqlclient-dev libpq-dev libsvn-dev firebird-dev libmemcached-dev libgpg-error-dev libgcrypt11-dev libgcrypt20-dev git clone https://github.com/vanhauser-thc/thc-hydra cd thc-hydra ./configure make make install Usage hydra [[[-l LOGIN|-L FILE] [-p PASS|-P FILE]] | [-C FILE]] [-e nsr] [-o FILE] [-t TASKS] [-M FILE [-T TASKS]] [-w TIME] [-W TIME] [-f] [-s PORT] [-x MIN:MAX:CHARSET] [-c TIME] [-ISOuvVd46] [-m MODULE_OPT] [service://server[:PORT][/OPT]] Flags Flags
-R restore a previous aborted/crashed session -I ignore an existing restore file (don't wait 10 seconds) -S perform an SSL connect -s PORT if the service is on a different default port, define it here -l LOGIN or -L FILE login with LOGIN name, or load several logins from FILE -p PASS or -P FILE try password PASS, or load several passwords from FILE -x MIN:MAX:CHARSET password bruteforce generation, type &amp;quot;-x -h&amp;quot; to get help -y disable use of symbols in bruteforce, see above -r use a non-random shuffling method for option -x -e nsr try &amp;quot;n&amp;quot; null password, &amp;quot;s&amp;quot; login as pass and/or &amp;quot;r&amp;quot; reversed login -u loop around users, not passwords (effective!</description></item><item><title>mitm6</title><link>https://notes.justin-p.me/cheatsheets/tools/mitm6/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/mitm6/</guid><description>mitm6 Installation sudo pip3 install mitm6 Usage mitm6 [-h] [-i INTERFACE] [-l LOCALDOMAIN] [-4 ADDRESS] [-6 ADDRESS] [-m ADDRESS] [-a] [-v] [--debug] [-d DOMAIN] [-b DOMAIN] [-hw DOMAIN] [-hb DOMAIN] [--ignore-nofqdn] Flags optional arguments: -h, --help show this help message and exit -i INTERFACE, --interface INTERFACE Interface to use (default: autodetect) -l LOCALDOMAIN, --localdomain LOCALDOMAIN Domain name to use as DNS search domain (default: use first DNS domain) -4 ADDRESS, --ipv4 ADDRESS IPv4 address to send packets from (default: autodetect) -6 ADDRESS, --ipv6 ADDRESS IPv6 link-local address to send packets from (default: autodetect) -m ADDRESS, --mac ADDRESS Custom mac address - probably breaks stuff (default: mac of selected interface) -a, --no-ra Do not advertise ourselves (useful for networks which detect rogue Router Advertisements) -v, --verbose Show verbose information --debug Show debug information Filtering options: -d DOMAIN, --domain DOMAIN Domain name to filter DNS queries on (Whitelist principle, multiple can be specified.</description></item><item><title>searchsploit</title><link>https://notes.justin-p.me/cheatsheets/tools/searchsploit/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/searchsploit/</guid><description>searchsploit Search searchsploit &amp;quot;Samba &amp;lt; 2.&amp;quot; show web url instead of local searchsploit -w &amp;quot;Samba &amp;lt; 2.&amp;quot; open exploit in editor searchsploit -x exploits/linux/remote/16321.rb copy exploit to current folder searchsploit -m exploits/linux/remote/16321.rb</description></item><item><title>Credential Gathering</title><link>https://notes.justin-p.me/notes/methodology/external/recon/credential-gathering/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://notes.justin-p.me/notes/methodology/external/recon/credential-gathering/</guid><description>Credential Gathering When you want to infiltrate an organization gaining some form of credentials will be key. One of the ways to gain these credentials is to search database and other form of leaks. A user might reuse his password on multiple accounts or use a specific pattern in their passwords.
External services Service info weleakinfo Data Breach Search Engine scylla.sh db dumps and more (Search Engine) hashes.org lookup hashes, leaks etc OnlineHashCrack free online hash crack Breaches/Leaks Name Description Download URL BreachCompilation 1.</description></item><item><title>smb</title><link>https://notes.justin-p.me/cheatsheets/tools/smbclient/</link><pubDate>Tue, 10 Mar 2020 16:43:44 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/smbclient/</guid><description>smbclient Examples list smbclient -L \\\\10.10.10.10\\ download all files smbclient \\\\10.10.10.10\\share mask &amp;quot;&amp;quot; recurse ON prompt OFF cd &amp;quot;path\to\remote\dir&amp;quot; lcd &amp;quot;~/path/to/download/to/&amp;quot; mget * protocol negotiation failed: NT_STATUS_IO_TIMEOUT Resolution: On Kali, edit /etc/samba/smb.conf Add the following under global: client min protocol = CORE client max protocol = SMB3</description></item><item><title>binwalk</title><link>https://notes.justin-p.me/cheatsheets/tools/binwalk/</link><pubDate>Tue, 10 Mar 2020 16:36:31 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/binwalk/</guid><description>binwalk Installation apt install binwalk Usage binwalk [OPTIONS] [FILE1] [FILE2] [FILE3] ... Flags Disassembly Scan Options: -Y, --disasm Identify the CPU architecture of a file using the capstone disassembler -T, --minsn=&amp;lt;int&amp;gt; Minimum number of consecutive instructions to be considered valid (default: 500) -k, --continue Don't stop at the first match Signature Scan Options: -B, --signature Scan target file(s) for common file signatures -R, --raw=&amp;lt;str&amp;gt; Scan target file(s) for the specified sequence of bytes -A, --opcodes Scan target file(s) for common executable opcode signatures -m, --magic=&amp;lt;file&amp;gt; Specify a custom magic file to use -b, --dumb Disable smart signature keywords -I, --invalid Show results marked as invalid -x, --exclude=&amp;lt;str&amp;gt; Exclude results that match &amp;lt;str&amp;gt; -y, --include=&amp;lt;str&amp;gt; Only show results that match &amp;lt;str&amp;gt; Extraction Options: -e, --extract Automatically extract known file types -D, --dd=&amp;lt;type[:ext[:cmd]]&amp;gt; Extract &amp;lt;type&amp;gt; signatures (regular expression), give the files an extension of &amp;lt;ext&amp;gt;, and execute &amp;lt;cmd&amp;gt; -M, --matryoshka Recursively scan extracted files -d, --depth=&amp;lt;int&amp;gt; Limit matryoshka recursion depth (default: 8 levels deep) -C, --directory=&amp;lt;str&amp;gt; Extract files/folders to a custom directory (default: current working directory) -j, --size=&amp;lt;int&amp;gt; Limit the size of each extracted file -n, --count=&amp;lt;int&amp;gt; Limit the number of extracted files -r, --rm Delete carved files after extraction -z, --carve Carve data from files, but don't execute extraction utilities -V, --subdirs Extract into sub-directories named by the offset Entropy Options: -E, --entropy Calculate file entropy -F, --fast Use faster, but less detailed, entropy analysis -J, --save Save plot as a PNG -Q, --nlegend Omit the legend from the entropy plot graph -N, --nplot Do not generate an entropy plot graph -H, --high=&amp;lt;float&amp;gt; Set the rising edge entropy trigger threshold (default: 0.</description></item><item><title>exiftool</title><link>https://notes.justin-p.me/cheatsheets/tools/exiftool/</link><pubDate>Tue, 10 Mar 2020 16:36:31 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/exiftool/</guid><description>exiftool Installation apt install exiftool Usage exiftool OPTIONS FILE Flags Tag operations -TAG or --TAG Extract or exclude specified tag -TAG[+-]=[VALUE] Write new value for tag -TAG[+-]&amp;lt;=DATFILE Write tag value from contents of file -TAG[+-]&amp;lt;SRCTAG Copy tag value (see -tagsFromFile) -tagsFromFile SRCFILE Copy tag values from file -x TAG (-exclude) Exclude specified tag Input-output text formatting -args (-argFormat) Output data as exiftool arguments -b (-binary) Output data in binary format -c FMT (-coordFormat) Set format for GPS coordinates -charset [[TYPE=]CHARSET] Specify encoding for special characters -d FMT (-dateFormat) Set format for date/time values -D (-decimal) Show tag ID numbers in decimal -E, -ex (-escape(HTML|XML)) Escape values for HTML (-E) or XML (-ex) -f (-forcePrint) Force printing of all specified tags -g[NUM.</description></item><item><title>steghide</title><link>https://notes.justin-p.me/cheatsheets/tools/steghide/</link><pubDate>Tue, 10 Mar 2020 16:36:31 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/steghide/</guid><description>steghide Installation apt install steghide Usage steghide [OPTIONS] Flags the first argument must be one of the following: embed, --embed embed data extract, --extract extract data info, --info display information about a cover- or stego-file info &amp;lt;filename&amp;gt; display information about &amp;lt;filename&amp;gt; encinfo, --encinfo display a list of supported encryption algorithms version, --version display version information license, --license display steghide's license help, --help display this usage information embedding options: -ef, --embedfile select file to be embedded -ef &amp;lt;filename&amp;gt; embed the file &amp;lt;filename&amp;gt; -cf, --coverfile select cover-file -cf &amp;lt;filename&amp;gt; embed into the file &amp;lt;filename&amp;gt; -p, --passphrase specify passphrase -p &amp;lt;passphrase&amp;gt; use &amp;lt;passphrase&amp;gt; to embed data -sf, --stegofile select stego file -sf &amp;lt;filename&amp;gt; write result to &amp;lt;filename&amp;gt; instead of cover-file -e, --encryption select encryption parameters -e &amp;lt;a&amp;gt;[&amp;lt;m&amp;gt;]|&amp;lt;m&amp;gt;[&amp;lt;a&amp;gt;] specify an encryption algorithm and/or mode -e none do not encrypt data before embedding -z, --compress compress data before embedding (default) -z &amp;lt;l&amp;gt; using level &amp;lt;l&amp;gt; (1 best speed.</description></item><item><title>usbrip</title><link>https://notes.justin-p.me/cheatsheets/tools/usbrip/</link><pubDate>Tue, 10 Mar 2020 16:36:31 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/usbrip/</guid><description>usbrip usbrip is a small piece of software which analyzes Linux log data for constructing USB event history tables.
Install pip3 install --upgrade usbrip Usage usbrip [-h] {banner,events,storage,ids} ... Flags positional arguments: {banner,events,storage,ids} banner show tool banner events work with USB events storage work with USB event storage ids work with USB IDs Examples show history root@kali:/mnt/hgfs/_shared_folder/# usbrip events history _ {{4}} {v2.1.4-7} _ _ ___| |_ ___[e]___ | | |_ -| .</description></item><item><title>foremost</title><link>https://notes.justin-p.me/cheatsheets/tools/foremost/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/foremost/</guid><description>foremost Installation apt install foremost Usage foremost [-v|-V|-h|-T|-Q|-q|-a|-w-d] [-t &amp;lt;type&amp;gt;] [-s &amp;lt;blocks&amp;gt;] [-k &amp;lt;size&amp;gt;] [-b &amp;lt;size&amp;gt;] [-c &amp;lt;file&amp;gt;] [-o &amp;lt;dir&amp;gt;] [-i &amp;lt;file] Flags -V - display copyright information and exit -t - specify file type. (-t jpeg,pdf ...) -d - turn on indirect block detection (for UNIX file-systems) -i - specify input file (default is stdin) -a - Write all headers, perform no error detection (corrupted files) -w - Only write the audit file, do not write any detected files to the disk -o - set output directory (defaults to output) -c - set configuration file to use (defaults to foremost.</description></item><item><title>ncat</title><link>https://notes.justin-p.me/cheatsheets/tools/ncat/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/ncat/</guid><description>ncat Installation apt install ncat Usage Connect mode ncat --listen [&amp;lt;host&amp;gt;] [&amp;lt;port&amp;gt;] ncat -l [&amp;lt;host&amp;gt;] [&amp;lt;port&amp;gt;] Server mode Flags -4 Forces nc to use IPv4 addresses only. -6 Forces nc to use IPv6 addresses only. -b Allow broadcast. -C Send CRLF as line-ending. -D Enable debugging on the socket. -d Do not attempt to read from stdin. -h Prints out nc help. -I length Specifies the size of the TCP receive buffer.</description></item><item><title>Metasploit</title><link>https://notes.justin-p.me/cheatsheets/tools/metasploit/</link><pubDate>Tue, 10 Mar 2020 16:33:38 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/metasploit/</guid><description>Metasploit Install Easiest way is to use Kali/Parrot and install from repo
apt install metasploit-framework
otherwise download from
https://github.com/rapid7/metasploit-framework/releases
Usage msfconsole [options]
Flags Common options:
-E, --environment ENVIRONMENT Set Rails environment, defaults to RAIL_ENV environment variable or 'production'
Database options:
-M, --migration-path DIRECTORY Specify a directory containing additional DB migrations
-n, --no-database Disable database support
-y, --yaml PATH Specify a YAML file containing database settings
Framework options:
-c FILE Load the specified configuration file
-v, -V, --version Show version
Module options:
--defer-module-loads Defer module loading unless explicitly asked.</description></item></channel></rss>