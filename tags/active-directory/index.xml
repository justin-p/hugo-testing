<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Active Directory on My notes and snippets</title><link>https://dev-hugo.justin-p.me/tags/active-directory/</link><description>Recent content in Active Directory on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 10 Mar 2020 16:43:47 +0100</lastBuildDate><atom:link href="https://dev-hugo.justin-p.me/tags/active-directory/index.xml" rel="self" type="application/rss+xml"/><item><title>credentialaccess</title><link>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/credential-access/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/credential-access/</guid><description>Dumping Delegated Default Kerberos and NTLM Credentials w/o Touching LSASS This is possible due to Active Directory feature called Credentials Delegation.
Credential Delegation Credential Delegation is a feature that allows domain administartors to authorize certain machines or to be more precise - certain SPNs, to accept delegated passwords. In other words, this means that certain services on certain machines can be set to allow users to authenticate without the need to supply their credentials interactively - almost like a Single Sign On.</description></item><item><title>powerview</title><link>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/powerview/</link><pubDate>Tue, 10 Mar 2020 16:43:47 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/powerview/</guid><description>powerview</description></item><item><title>IPv6 DNS Takeover</title><link>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/ipv6-dns-takeover/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/ipv6-dns-takeover/</guid><description>IPv6 DNS Takeover Windows prefers IPv6 over IPv4. This enables us to perform a DNS takeover using mitm6 if IPv6 is not already in use in the network. When this attack is performed, it is also possible to make computer accounts and users authenticate to us over HTTP by spoofing the WPAD location and requesting authentication to use our rogue proxy.
Attacking Combine with mitm6 + ntlmrelayx + (getSP.py + ) secretsdump.</description></item><item><title>SMB Relay</title><link>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/smb-relay/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/smb-relay/</guid><description>SMB Relay Use a captures hash to authenticated against a PC.
SMB signing has to be disabled. (nmap &amp;ndash;script smb2-security-mode.nse -p 445 CIDR/HOST) User credentials must have remote login access Attacking Setup responder to not start a SMB and HTTP server. (vim /usr/share/responder/Responder.conf)
responder + ntlmrelayx
Defences Enable SMB signing pro: fixes attack con: may cause slow down with file copies Disable NTLM auth. pro: fixes attack con: if kerberos goes down windows falls back to NTLM Account tiering.</description></item><item><title>WPAD</title><link>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/wpad/</link><pubDate>Tue, 10 Mar 2020 16:43:46 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/wpad/</guid><description>WPAD Windows can use a upstream proxy. To make configuring this proxy easier WPAD can be used. Web Proxy Auto-Discovery Protocol (WPAD) is a method used by clients to locate the URL of a configuration file using DHCP and/or DNS.
A attacker can serve a fake WPAD server and respond to client WPAD name resolutions. The client then requests the wpad.dat file from this fake WPAD Server. Responder creates an authentication screen and asks clients to enter the username and password they use in the domain.</description></item><item><title>LLMNR and NBT-NS</title><link>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/llmnr-and-nbt-ns/</link><pubDate>Tue, 10 Mar 2020 16:43:45 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/llmnr-and-nbt-ns/</guid><description>LLMNR and NBT-NS By default when a DNS lookup fails windows tries to use 2 other components as a fallback. Link-Local Multicast Name Resolution (LLMNR) and Netbios Name Service (NBT-NS). LLLMNR was introduced in Windows Vista and is the successor to NBT-NS.
These protocols help machines on the network identify hosts when DNS fails. So if one machine tries to resolve a particular host, but DNS resolution fails, the machine will then attempt to ask all other machines on the local network for the correct address via LLMNR or NBT-NS.</description></item><item><title>Active Directory</title><link>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/</link><pubDate>Tue, 10 Mar 2020 16:33:39 +0100</pubDate><guid>https://dev-hugo.justin-p.me/notes/hacking/internal/active-directory/</guid><description>Active Directory credentialaccess
credentialaccess description.
IPv6 DNS Takeover
IPv6 DNS Takeover.
LLMNR and NBT-NS
LLMNR and NBT-NS.
powerview
powerview description.
SMB Relay
SMB Relay.
WPAD
WPAD description.</description></item></channel></rss>