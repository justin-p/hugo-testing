<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on My notes and snippets</title><link>https://notes.justin-p.me/tags/docker/</link><description>Recent content in docker on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 02 Sep 2021 14:13:26 +0200</lastBuildDate><atom:link href="https://notes.justin-p.me/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>docker</title><link>https://notes.justin-p.me/cheatsheets/tools/docker/</link><pubDate>Thu, 02 Sep 2021 14:13:26 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/docker/</guid><description>docker Installation sudo apt-get remove docker docker-engine docker.io containerd runc sudo apt-get update sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo &amp;quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;quot; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io Usage Usage: docker [OPTIONS] COMMAND Flags Options: --config string Location of client config files (default &amp;quot;/home/justin-p/.</description></item><item><title>docker-compose</title><link>https://notes.justin-p.me/cheatsheets/tools/docker-compose/</link><pubDate>Thu, 02 Sep 2021 13:54:35 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/docker-compose/</guid><description>docker-compose Installation sudo curl -L &amp;quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&amp;quot; -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose Usage docker-compose [-f &amp;lt;arg&amp;gt;...] [options] [COMMAND] [ARGS...] Flags Options: -f, --file FILE Specify an alternate compose file (default: docker-compose.yml) -p, --project-name NAME Specify an alternate project name (default: directory name) -c, --context NAME Specify a context name --verbose Show more output --log-level LEVEL Set log level (DEBUG, INFO, WARNING, ERROR, CRITICAL) --no-ansi Do not print ANSI control characters -v, --version Print version and exit -H, --host HOST Daemon socket to connect to --tls Use TLS; implied by --tlsverify --tlscacert CA_PATH Trust certs signed only by this CA --tlscert CLIENT_CERT_PATH Path to TLS certificate file --tlskey TLS_KEY_PATH Path to TLS key file --tlsverify Use TLS and verify the remote --skip-hostname-check Don't check the daemon's hostname against the name specified in the client certificate --project-directory PATH Specify an alternate working directory (default: the path of the Compose file) --compatibility If set, Compose will attempt to convert keys in v3 files to their non-Swarm equivalent --env-file PATH Specify an alternate environment file Commands: build Build or rebuild services config Validate and view the Compose file create Create services down Stop and remove containers, networks, images, and volumes events Receive real time events from containers exec Execute a command in a running container help Get help on a command images List images kill Kill containers logs View output from containers pause Pause services port Print the public port for a port binding ps List containers pull Pull service images push Push service images restart Restart services rm Remove stopped containers run Run a one-off command scale Set number of containers for a service start Start services stop Stop services top Display the running processes unpause Unpause services up Create and start containers version Show the Docker-Compose version information Examples Build docker images docker-compose build .</description></item><item><title>docker-compose</title><link>https://notes.justin-p.me/cheatsheets/programming/docker-compose/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/programming/docker-compose/</guid><description>Docker compose Basic example # docker-compose.yml version: '2' services: web: build: . # build from Dockerfile context: ./Path dockerfile: Dockerfile ports: - &amp;quot;5000:5000&amp;quot; volumes: - .:/code redis: image: redis Reference Building web: # build from Dockerfile build: . # build from custom Dockerfile build: context: ./dir dockerfile: Dockerfile.dev # build from image image: ubuntu image: ubuntu:14.04 image: tutum/influxdb image: example-registry:4000/postgresql image: a4bc65fd Ports ports: - &amp;quot;3000&amp;quot; - &amp;quot;8000:80&amp;quot; # guest:host # expose ports to linked services (not to host) expose: [&amp;quot;3000&amp;quot;] Commands # command to execute command: bundle exec thin -p 3000 command: [bundle, exec, thin, -p, 3000] # override the entrypoint entrypoint: /app/start.</description></item><item><title>Dockerfile</title><link>https://notes.justin-p.me/cheatsheets/programming/dockerfile/</link><pubDate>Tue, 10 Mar 2020 16:36:30 +0100</pubDate><guid>https://notes.justin-p.me/cheatsheets/programming/dockerfile/</guid><description>dockerfile Reference Inheritance FROM ruby:2.2.2 Variables ENV APP_HOME /myapp RUN mkdir $APP_HOME Initialization RUN bundle install WORKDIR /myapp VOLUME [&amp;quot;/data&amp;quot;] # Specification for mount point ADD file.xyz /file.xyz COPY --chown=user:group host_file.xyz /path/container_file.xyz Onbuild ONBUILD RUN bundle install # when used with another file Commands EXPOSE 5900 CMD [&amp;quot;bundle&amp;quot;, &amp;quot;exec&amp;quot;, &amp;quot;rails&amp;quot;, &amp;quot;server&amp;quot;] Entrypoint ENTRYPOINT [&amp;quot;executable&amp;quot;, &amp;quot;param1&amp;quot;, &amp;quot;param2&amp;quot;] ENTRYPOINT command param1 param2 Configures a container that will run as an executable.</description></item></channel></rss>