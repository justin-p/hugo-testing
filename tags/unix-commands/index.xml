<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unix Commands on My notes and snippets</title><link>https://hugo-dev.justin-p.me/tags/unix-commands/</link><description>Recent content in Unix Commands on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 10 Mar 2020 16:38:53 +0100</lastBuildDate><atom:link href="https://hugo-dev.justin-p.me/tags/unix-commands/index.xml" rel="self" type="application/rss+xml"/><item><title>base64</title><link>https://hugo-dev.justin-p.me/commands/unix/base64/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/base64/</guid><description>base64 Usage base64 OPTION FILE Flags -w, --wrap=COLS Wrap encoded lines after COLS character (default 76). Use 0 to disable line wrapping. -d, --decode Decode data. -i, --ignore-garbage When decoding, ignore non-alphabet characters. --help display this help and exit --version output version information and exit Examples Encode echo EncodeMe | base64 -e Decode echo RW5jb2RlTWU= | base64 -d Encode file base64 file1 &amp;gt; encodedfile1 Decode file base64 -d encodedfile1 &amp;gt; file1 Also see N/A</description></item><item><title>bzip2</title><link>https://hugo-dev.justin-p.me/commands/unix/bzip2/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/bzip2/</guid><description>bzip2 Usage bzip2 OPTIONS FILE Flags -c --stdout Compress or decompress to standard output. -d --decompress Force decompression. bzip2, bunzip2 and bzcat are really the same program, and the decision about what actions to take is done on the basis of which name is used. This flag overrides that mechanism, and forces bzip2 to decompress. -z --compress The complement to -d: forces compression, regardless of the invocation name. -t --test Check integrity of the specified file(s), but dont decompress them.</description></item><item><title>cron</title><link>https://hugo-dev.justin-p.me/commands/unix/cron/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/cron/</guid><description>cron Usage Min Hour Day Mon Weekday Command * * * * * command to be executed ┬ ┬ ┬ ┬ ┬ │ │ │ │ └─ Weekday (0=Sun .. 6=Sat) │ │ │ └────── Month (1..12) │ │ └─────────── Day (1..31) │ └──────────────── Hour (0..23) └───────────────────── Minute (0..59) Examples Example Description 0 * * * * every hour */15 * * * * every 15 mins 0 */2 * * * every 2 hours 0 0 * * 0 every Sunday midnight @reboot every reboot Crontab Adding tasks easily echo &amp;quot;@reboot echo hi&amp;quot; | crontab Open in editor crontab -e List tasks crontab -l [-u user] Also see N/A</description></item><item><title>md5sum</title><link>https://hugo-dev.justin-p.me/commands/unix/md5sum/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/md5sum/</guid><description>md5sum Usage md5sum OPTIONS FILE Flags -b, --binary read in binary mode -c, --check read MD5 sums from the FILEs and check them --tag create a BSD-style checksum -t, --text read in text mode (default) -z, --zero end each output line with NUL, not newline, and disable file name escaping The following five options are useful only when verifying checksums: --ignore-missing dont fail or report status for missing files --quiet dont print OK for each successfully verified file --status dont output anything, status code shows success --strict exit non-zero for improperly formatted checksum lines -w, --warn warn about improperly formatted checksum lines --help display this help and exit --version output version information and exit Examples display the hash value md5sum file1 validate multiple files md5sum file1 file2 file3 &amp;gt; hashes md5sum --check hashes display only modified files md5sum --quiet --check hashes identify invalid hash values md5sum --warn --check hashes Also see N/A</description></item><item><title>random</title><link>https://hugo-dev.justin-p.me/commands/unix/random/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/random/</guid><description>random Usage of dash (-) in place of a filename Using - as a filename to mean stdin/stdout is a convention that a lot of programs use. It is not a special property of the filename. The kernel does not recognize - as special so any system calls referring to - as a filename will use - literally as the filename.
With bash redirection, - is not recognized as a special filename, so bash will use that as the literal filename.</description></item><item><title>scp</title><link>https://hugo-dev.justin-p.me/commands/unix/scp/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/scp/</guid><description>scp Usage scp OPTIONS SOURCE_PATH DESTINATION_PATH Flags transfer directory -r see the transfer details (verbose) -v copy files with compression -C limit bandwidth -l 800 keep the original attributes -p quite -q Examples push a file to a remote system scp file user@host:/path/to/file pull a file from a remote system scp user@host:/path/to/file /local/path/to/file push multiple files to a remote system scp file1 file2 user@host:/path/to/directory push an entire directory to a remote system scp -r /path/to/directory user@host:/path/to/directory See Also SCP Cheatsheets</description></item><item><title>tar</title><link>https://hugo-dev.justin-p.me/commands/unix/tar/</link><pubDate>Tue, 10 Mar 2020 16:38:53 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/tar/</guid><description>tar Usage tar FLAGS FILE.tar.gz Flags -z : Work on gzip compression automatically when reading archives. -x : Extract tar.gz archive. -v : Produce verbose output i.e. display progress and extracted file list on screen. -f : Read the archive from the archive to the specified file. In this example, read backups.tar.gz archive. -t : List the files in the archive. -r : Append files to the end of the tarball.</description></item><item><title>awk</title><link>https://hugo-dev.justin-p.me/commands/unix/awk/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/awk/</guid><description>awk Usage awk OPTIONS PROGRAM FILE Flags -F fs --field-separator fs Use fs for the input field separator (the value of the FS predefined variable). -v var=val --assign var=val Assign the value val to the variable var, before execution of the program begins. Such variable values are available to the BEGIN block of an AWK program. -f program-file --file program-file Read the AWK program source from the file program-file, instead of from the first command line argument.</description></item><item><title>curl</title><link>https://hugo-dev.justin-p.me/commands/unix/curl/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/curl/</guid><description>curl Usage curl OPTIONS URL Flags write to file -o &amp;lt;file&amp;gt; --output &amp;lt;file&amp;gt; Authentication https://devhints.io/curl -u &amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt; --user &amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt; Verbose -v --verbose Very Verbose -vv Silent -s --silent Headers only -I --head Request -X POST --request POST follow link if page redirects -L Data HTTP post data, URL encoded (eg, status=&amp;quot;Hello&amp;rdquo;)
-d 'data' --data 'data' data via file -d @file --data @file send data via GET -G --get Headers user-agent -A &amp;lt;str&amp;gt; --user-agent &amp;lt;str&amp;gt; cookie -b name=val --cookie name=val cookie via file -b FILE --cookie FILE Custom header -H &amp;quot;X-Foo: y&amp;quot; --header &amp;quot;X-Foo: y&amp;quot; Use deflate/gzip --compressed SSL/TLS --cacert &amp;lt;file&amp;gt; --capath &amp;lt;dir&amp;gt; Client cert file -E &amp;lt;cert&amp;gt; --cert &amp;lt;cert&amp;gt; Cert type --cert-type &amp;lt;der/pem/eng&amp;gt; Ignore SSL -k --insecure Examples Post data curl -d password=x http://x.</description></item><item><title>cut</title><link>https://hugo-dev.justin-p.me/commands/unix/cut/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/cut/</guid><description>cut Usage cut OPTION FILE Flags -b, --bytes=LIST select only these bytes -c, --characters=LIST select only these characters -d, --delimiter=DELIM use DELIM instead of TAB for field delimiter -f, --fields=LIST select only these fields; also print any line that contains no delimiter character, unless the -s option is specified -n with -b: dont split multibyte characters --complement complement the set of selected bytes, characters or fields -s, --only-delimited do not print lines not containing delimiters --output-delimiter=STRING use STRING as the output delimiter the default is to use the input delimiter --help display this help and exit --version output version information and exit Use one, and only one of -b, -c or -f.</description></item><item><title>file</title><link>https://hugo-dev.justin-p.me/commands/unix/file/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/file/</guid><description>file Usage FILE OPTIONS file Flags -b, --brief Do not prepend filenames to output lines (brief mode). -C, --compile Write a magic.mgc output file that contains a pre-parsed version of the magic file or directory. -c, --checking-printout Cause a checking printout of the parsed form of the magic file. This is usually used in conjunction with the -m flag to debug a new magic file before installing it. -e, --exclude testname Exclude the test named in testname from the list of tests made to determine the file type.</description></item><item><title>find</title><link>https://hugo-dev.justin-p.me/commands/unix/find/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/find/</guid><description>find Usage find PATH CONDITIONS ACTIONS Conditions search for things that contain &amp;lsquo;.c&amp;rsquo; -name &amp;quot;*.c&amp;quot; search for things owned by user &amp;lsquo;jonathan&amp;rsquo; -user jonathan search for things with no user that corresponds to file&amp;rsquo;s numeric user ID -nouser Search for specific type search for things that are files
-type f search for things that are directories
-type d search for things that are symlinks</description></item><item><title>grep</title><link>https://hugo-dev.justin-p.me/commands/unix/grep/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/grep/</guid><description>grep Usage grep OPTIONS PATTERN FILE Flags Generic Program Information --help Print a usage message briefly summarizing these command-line options and the bug-reporting address, then exit. -V, --version Print the version number of grep to the standard output stream. This version number should be included in all bug reports (see below). Matcher Selection -E, --extended-regexp Interpret PATTERN as an extended regular expression (ERE, see below). (-E is specified by POSIX .</description></item><item><title>gzip gunzip zcat</title><link>https://hugo-dev.justin-p.me/commands/unix/gzip-gunzip-zcat/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/gzip-gunzip-zcat/</guid><description>gzip gunzip zcat Usage gzip OPTIONS FILE gunzip OPTIONS FILE Flags -a --ascii Ascii text mode: convert end-of-lines using local conventions. This option is supported only on some non-Unix systems. For MSDOS, CR LF is converted to LF when compressing, and LF is converted to CR LF when decompressing -c --stdout --to-stdout Write output on standard output; keep original files unchanged. If there are several input files, the output consists of a sequence of independently compressed members.</description></item><item><title>rev</title><link>https://hugo-dev.justin-p.me/commands/unix/rev/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/rev/</guid><description>rev Usage rev OPTIONS FILE Flags -V, --version Display version information and exit. -h, --help Display help text and exit. Examples reverse a string echo 'string' | rev reverse a file rev file1 Also see N/A</description></item><item><title>sed</title><link>https://hugo-dev.justin-p.me/commands/unix/sed/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/sed/</guid><description>sed Usage sed OPTIONS FILE Flags -n, --quiet, --silent suppress automatic printing of pattern space --debug annotate program execution -e script, --expression=script add the script to the commands to be executed -f script-file, --file=script-file add the contents of script-file to the commands to be executed --follow-symlinks follow symlinks when processing in place -i[SUFFIX], --in-place[=SUFFIX] edit files in place (makes backup if SUFFIX supplied) -l N, --line-length=N specify the desired line-wrap length for the 'l' command --posix disable all GNU extensions.</description></item><item><title>sort</title><link>https://hugo-dev.justin-p.me/commands/unix/sort/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/sort/</guid><description>sort Usage sort OPTIONS FILE Flags -b, --ignore-leading-blanks ignore leading blanks -d, --dictionary-order consider only blanks and alphanumeric characters -f, --ignore-case fold lower case to upper case characters -g, --general-numeric-sort compare according to general numerical value -i, --ignore-nonprinting consider only printable characters -M, --month-sort compare (unknown) &amp;lt; 'JAN' &amp;lt; ... &amp;lt; 'DEC' -h, --human-numeric-sort compare human readable numbers (e.g., 2K 1G) -n, --numeric-sort compare according to string numerical value -R, --random-sort shuffle, but group identical keys.</description></item><item><title>strings</title><link>https://hugo-dev.justin-p.me/commands/unix/strings/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/strings/</guid><description>strings Usage strings OPTIONS FILE Flags -a --all - Do not scan only the initialized and loaded sections of object files; scan the whole files. -f --print-file-name Print the name of the file before each string. --help Print a summary of the program usage on the standard output and exit. -min-len -n min-len --bytes=min-len Print sequences of characters that are at least min-len characters long, instead of the default 4.</description></item><item><title>touch</title><link>https://hugo-dev.justin-p.me/commands/unix/touch/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/touch/</guid><description>touch Usage touch OPTION FILE Flags -a change only the access time -c, --no-create do not create any files -d, --date=STRING parse STRING and use it instead of current time -f (ignored) -h, --no-dereference affect each symbolic link instead of any referenced file (useful only on systems that can change the timestamps of a symlink) -m change only the modification time -r, --reference=FILE use this files times instead of current time -t STAMP use [[CC]YY]MMDDhhmm[.</description></item><item><title>tr</title><link>https://hugo-dev.justin-p.me/commands/unix/tr/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/tr/</guid><description>tr Usage Flags Examples replace lowercase letters with uppercase cat file1 | tr &amp;quot;[a-z]&amp;quot; &amp;quot;[A-Z]&amp;quot; cat file1 | tr &amp;quot;[:lower:]&amp;quot; &amp;quot;[:upper:]&amp;quot; replace spaces with tabs echo &amp;quot;file1 file2 file3&amp;quot; | tr [:space:] '\t' remove specified characters echo 'abcdefg' | tr -d 'a' remove all the digits from the string echo &amp;quot;123a467b890c&amp;quot; | tr -d [:digit:] remove all characters except digest echo &amp;quot;123a467b890c&amp;quot; | tr -cd [:digit:] Also see N/A</description></item><item><title>uniq</title><link>https://hugo-dev.justin-p.me/commands/unix/uniq/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/uniq/</guid><description>uniq Usage uniq OPTIONS INPUT OUTPUT Flags -c, --count prefix lines by the number of occurrences -d, --repeated only print duplicate lines, one for each group -D print all duplicate lines --all-repeated[=METHOD] like -D, but allow separating groups with an empty line; METHOD={none(default),prepend,separate} -f, --skip-fields=N avoid comparing the first N fields --group[=METHOD] show all items, separating groups with an empty line; METHOD={separate(default),prepend,append,both} -i, --ignore-case ignore differences in case when comparing -s, --skip-chars=N avoid comparing the first N characters -u, --unique only print unique lines -z, --zero-terminated line delimiter is NUL, not newline -w, --check-chars=N compare no more than N characters in lines --help display this help and exit --version output version information and exit Examples show each unique line uniq file1 show how many times a line accurse uniq -c file1 only print duplicate lines uniq -D file1 only print non-repetitive lines uniq -u file1 avoid comparing set number of initial characters uniq -s 4 file1 limit comparison to set number of chars uniq -w 3 file1 uniq comparison case insensitive uniq -i file1 uniq output NUL-terminated uniq -z file1 Also see N/A</description></item><item><title>xxd</title><link>https://hugo-dev.justin-p.me/commands/unix/xxd/</link><pubDate>Tue, 10 Mar 2020 16:38:52 +0100</pubDate><guid>https://hugo-dev.justin-p.me/commands/unix/xxd/</guid><description>xxd Usage xxd OPTIONS INFILE OUTFILE Flags -a -autoskip toggle autoskip: A single '*' replaces nul-lines. Default off. -b -bits Switch to bits (binary digits) dump, rather than hexdump. This option writes octets as eight digits &amp;quot;1&amp;quot;s and &amp;quot;0&amp;quot;s instead of a normal hexadecimal dump. Each line is preceded by a line number in hexadecimal and followed by an ascii (or ebcdic) representation. The command line switches -r, -p, -i do not work with this mode.</description></item></channel></rss>