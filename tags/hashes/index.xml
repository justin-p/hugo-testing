<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hashes on My notes and snippets</title><link>https://notes.justin-p.me/tags/hashes/</link><description>Recent content in hashes on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 02 Sep 2021 20:02:34 +0200</lastBuildDate><atom:link href="https://notes.justin-p.me/tags/hashes/index.xml" rel="self" type="application/rss+xml"/><item><title>Search-That-Hash</title><link>https://notes.justin-p.me/cheatsheets/tools/search-that-hash/</link><pubDate>Thu, 02 Sep 2021 20:02:34 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/search-that-hash/</guid><description>Search-That-Hash Installation pip3 install search-that-hash Usage sth [OPTIONS] Flags -t, --text TEXT Crack a single hash. -f, --file FILENAME The file of hashes, seperated by newlines. -w, --wordlist TEXT The wordlist you want to use for Hashcat. --timeout INTEGER Choose timeout in seconds. -g, --greppable Prints as JSON, use this to grep. --hashcat_binary TEXT Location of hashcat folder (if using windows). -o, --offline Use offline mode. Does not search for hashes in APIs.</description></item><item><title>Name-That-Hash</title><link>https://notes.justin-p.me/cheatsheets/tools/name-that-hash/</link><pubDate>Thu, 02 Sep 2021 19:51:37 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/name-that-hash/</guid><description>name-that-hash Installation pip3 install name-that-hash Usage nth [OPTIONS] Flags Options: -t, --text TEXT Check one hash, use single quotes ' as inverted commas &amp;quot; messes up on Linux. -f, --file FILENAME Checks every hash in a newline separated file. -g, --greppable Are you going to grep this output? Prints in JSON format. -b64, --base64 Decodes hashes in Base64 before identification. For files with mixed Base64 &amp;amp; non-encoded it attempts base64 first and then falls back to normal hash identification per hash.</description></item><item><title>ciphey</title><link>https://notes.justin-p.me/cheatsheets/tools/ciphey/</link><pubDate>Thu, 02 Sep 2021 19:47:20 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/ciphey/</guid><description>ciphey Installation python3 -m pip install ciphey --upgrade docker run -it --rm remnux/ciphey Usage ciphey [OPTIONS] [TEXT_STDIN] Flags Options: -t, --text TEXT The ciphertext you want to decrypt. -q, --quiet Decrease verbosity -g, --greppable Only print the answer (useful for grep) -v, --verbose -C, --checker TEXT Use the given checker -c, --config TEXT Uses the given config file. Defaults to appdirs.user_config_dir('ciphey', 'ciphey')/'config.yml' -w, --wordlist TEXT Uses the given wordlist -p, --param TEXT Passes a parameter to the language checker -l, --list-params BOOLEAN List the parameters of the selected module --searcher TEXT Select the searching algorithm to use -b, --bytes Forces ciphey to use binary mode for the input --default-dist TEXT Sets the default character/byte distribution -m, --module PATH Adds a module from the given path -A, --appdirs Print the location of where Ciphey wants the settings file to be -f, --file FILENAME --help Show this message and exit.</description></item></channel></rss>