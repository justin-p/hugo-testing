<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AV bypass on My notes and snippets</title><link>https://notes.justin-p.me/tags/av-bypass/</link><description>Recent content in AV bypass on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 02 Sep 2021 17:11:54 +0200</lastBuildDate><atom:link href="https://notes.justin-p.me/tags/av-bypass/index.xml" rel="self" type="application/rss+xml"/><item><title>Malware Test VM</title><link>https://notes.justin-p.me/notes/methodology/general/avbypass/malwaretestvm/</link><pubDate>Thu, 02 Sep 2021 17:11:54 +0200</pubDate><guid>https://notes.justin-p.me/notes/methodology/general/avbypass/malwaretestvm/</guid><description>Malware Test VM Setup Install Windows VM Fully update VM Install WFC Attachments wfc6.7.0.0.setup.exe (2737 kb) Configure WFC to block all inbound and outbound connections (high filtering) (optional) add additional tooling Create snapshot How to use Create clone of V Disable WFC and fully update VM Install any additional AV if you are not testing against defender Activate WFC Create rule in WFC that allows outbound traffic to C2 infra Test malware Remove VM clone Related pages Name Description ThreatCheck Modified version of Matterpreter&amp;#39;s DefenderCheck.</description></item><item><title>ThreatCheck</title><link>https://notes.justin-p.me/cheatsheets/tools/threatcheck/</link><pubDate>Thu, 02 Sep 2021 17:03:44 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/threatcheck/</guid><description>ThreatCheck Installation git clone https://github.com/rasta-mouse/ThreatCheck # and build using visual studio Usage ThreatCheck.exe [FILE] [OPTIONS] Determine the line(s) of code that are being flagged by Defender.
Obfuscate the detected line(s) of code so it is no longer flagged by Defender.
Flags -e, --engine (Default: Defender) Scanning engine. Options: Defender, AMSI -f, --file Analyze a file on disk -u, --url Analyze a file from a URL --help Display this help screen. --version Display version information.</description></item><item><title>AMSITrigger</title><link>https://notes.justin-p.me/cheatsheets/tools/amsitrigger/</link><pubDate>Thu, 02 Sep 2021 16:35:19 +0200</pubDate><guid>https://notes.justin-p.me/cheatsheets/tools/amsitrigger/</guid><description>AMSITrigger Installation git clone https://github.com/RythmStick/AMSITrigger # and build using visual studio or download release from https://github.com/RythmStick/AMSITrigger/releases
Place the AMSITrigger.exe and the PS file you want to check in a whitelisted folder.
Usage .\AmsiTrigger_x64.exe [PowerShell File] [OPTIONS] Flags -i, --inputfile=VALUE Powershell filename -u, --url=VALUE URL eg. https://10.1.1.1/Invoke-NinjaCopy.ps1 -f, --format=VALUE Output Format: 1 - Only show Triggers 2 - Show Triggers with Line numbers 3 - Show Triggers inline with code 4 - Show AMSI calls (xmas tree mode) -d, --debug Show Debug Info -m, --maxsiglength=VALUE Maximum signature Length to cater for, default=2048 -c, --chunksize=VALUE Chunk size to send to AMSIScanBuffer, default=4096 -h, -?</description></item></channel></rss>