<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>E-Mail Gathering on My notes and snippets</title><link>https://dev-hugo.justin-p.me/tags/e-mail-gathering/</link><description>Recent content in E-Mail Gathering on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 11 Mar 2020 15:28:04 +0100</lastBuildDate><atom:link href="https://dev-hugo.justin-p.me/tags/e-mail-gathering/index.xml" rel="self" type="application/rss+xml"/><item><title>theHarvester</title><link>https://dev-hugo.justin-p.me/cheat-cheets/tools/theharvester/</link><pubDate>Wed, 11 Mar 2020 15:28:04 +0100</pubDate><guid>https://dev-hugo.justin-p.me/cheat-cheets/tools/theharvester/</guid><description>theHarvester Installation git clone https://github.com/laramies/theHarvester cd theHarvester python3 -m pip install -r requirements/base.txt python3 theHarvester.py -h Usage theHarvester -d [domain] -l [depth] -b [search engine name] Flags -d: Domain to search or company name -b: data source: baidu, bing, bingapi, dogpile, google, googleCSE, googleplus, google-profiles, linkedin, pgp, twitter, vhost, virustotal, threatcrowd, crtsh, netcraft, yahoo, all -s: start in result number X (default: 0) -v: verify host name via dns resolution and search for virtual hosts -f: save the results into an HTML and XML file (both) -n: perform a DNS reverse query on all ranges discovered -c: perform a DNS brute force for the domain name -t: perform a DNS TLD expansion discovery -e: use this DNS server -p: port scan the detected hosts and check for Takeovers (80,443,22,21,8080) -l: limit the number of results to work with(bing goes from 50 to 50 results, google 100 to 100, and pgp doesn't use this option) -h: use SHODAN database to query discovered hosts Examples Scan domain on google theHarvester -d justin-p.</description></item></channel></rss>