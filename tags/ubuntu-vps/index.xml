<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ubuntu VPS on My notes and snippets</title><link>https://notes.justin-p.me/tags/ubuntu-vps/</link><description>Recent content in Ubuntu VPS on My notes and snippets</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 10 Mar 2020 16:37:55 +0100</lastBuildDate><atom:link href="https://notes.justin-p.me/tags/ubuntu-vps/index.xml" rel="self" type="application/rss+xml"/><item><title>00. Introduction</title><link>https://notes.justin-p.me/guides/ubuntu-vps/00-intro/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/00-intro/</guid><description>Introduction This guide helps first timers to setup a Ubuntu server through the command-line interface (CLI). This was initially written by a old friend of mine to help me setup my first &amp;lsquo;publicly accessible&amp;rsquo; server. Over the years I build/updated his work and still use it as a reference for a basic baseline when ever I need to setup a VPS. There is a bunch of things you can do yourself to improve, finetune and further secure your VPS, but this should get you at least setup with the (imo) bare minimums.</description></item><item><title>01. Adding users</title><link>https://notes.justin-p.me/guides/ubuntu-vps/01-users/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/01-users/</guid><description>Adding users Most likely if you are setting up a VPS with a cloud provider they gave you access to the machine with the root account. Using the root account for daily tasks is against best practices, so first things first, lets create a additional account for daily administrator tasks. If you are installing in VM you most likely already setup a additional account during the installation, if so you can skip to the next page.</description></item><item><title>02. Managing of packages</title><link>https://notes.justin-p.me/guides/ubuntu-vps/02-packges/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/02-packges/</guid><description>Managing of packages Nearly all Linux distributions come preinstalled with a packet manager. A packet manager is an application that pulls software packages from a software library and installs them on the system.
Why a package manager is awesome If you want to install a web server on Windows, you will first need to manually perform several steps to download the installer and install it on your system.
On Linux (Ubuntu in this example), only a simple command is required: apt install nginx.</description></item><item><title>03. File editor: vim</title><link>https://notes.justin-p.me/guides/ubuntu-vps/03-vim/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/03-vim/</guid><description>File editor: vim Vim is a command-line text editor. Vim is entirely controlled with keyboard input, so it requires some time to get used to, but doing so will give you some hair on your chest.
Vim knows two important modes, the command-mode and the input-mode. The first one is used to enter commands. The second one is used to edit the opened file. To get you started some basic vim actions have been described below.</description></item><item><title>04. UFW</title><link>https://notes.justin-p.me/guides/ubuntu-vps/04-ufw/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/04-ufw/</guid><description>UFW UFW stands for uncomplicated firewall. UFW actually is not a firewall itself, instead it is a configuration program for iptables.
First of all, make sure that UFW is installed on the server with the following command: sudo apt install ufw
Default settings In the most cases firewalls are configured to block all incoming traffic and allow all outgoing traffic by default. If this is your first time i&amp;rsquo;d recommend configuring it like just like that.</description></item><item><title>05. SSH Keys</title><link>https://notes.justin-p.me/guides/ubuntu-vps/05-ssh-keys/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/05-ssh-keys/</guid><description>SSH Keys SSH keys allow you to connect to servers with a secret key AND password. If configured correctly, without the key a person would not be able to authenticate itself through SSH, even if it somehow got possession of your a user accounts password.
Generating and using SSH keys As a example in this guide we will use PuTTY for generating and using SSH keys. If you do not have PuTTY installed on your own system and want to follow along, click here to download it.</description></item><item><title>06. Setup sshd</title><link>https://notes.justin-p.me/guides/ubuntu-vps/06-setup-sshd/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/06-setup-sshd/</guid><description>Setup sshd Only give access to specific users and groups You can tell your server which users are allowed to connect to your server through SSH and who are not. You can do this with the the AllowUsers keyword in the SSHD configuration file.Todo so, edit the configuration file (/etc/ssh/sshd_config). The same can be done for groups using the AllowGroups keyword.
In the example below we tell our system that only the user beheer is allowed to authenticate using SSH.</description></item><item><title>07. Unattended Upgrades</title><link>https://notes.justin-p.me/guides/ubuntu-vps/07-unattended-upgrades/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/07-unattended-upgrades/</guid><description>Unattended Upgrades Updates are important. But where all lazy, so we want to automate some of this process. To ensure our server is always using the latest important security updates we are going to configure Unattended upgrades.
Normally this is installed by default, but some hosting providers might use custom images which strip some packages from the default installation.
Install unattended-upgrades sudo apt-get install unattended-upgrades sudo dpkg-reconfigure -plow unattended-upgrades Configure unattended-upgrades sudo vim /etc/apt/apt.</description></item><item><title>08. Fail2ban</title><link>https://notes.justin-p.me/guides/ubuntu-vps/08-fail2ban/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/08-fail2ban/</guid><description>Fail2Ban If you ever connected something to the public internet you might have noticed that within seconds people are knocking on your ports. To avoid people bruteforcing them self into your server you can setup Fail2Ban. Fail2Ban watches logfiles for incorrect logins and automatically bans IP&amp;rsquo;s.
Installing Fail2Ban sudo apt update &amp;amp;&amp;amp; sudo apt upgrade sudo apt install fail2ban Make sure you copy the default Fail2Ban configuration file to jail.local. Never edit the file jail.</description></item><item><title>09. Logwatch</title><link>https://notes.justin-p.me/guides/ubuntu-vps/09-logwatch/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/09-logwatch/</guid><description>Logwatch Logwatch is a package that parses logs files on your system and sends over a report. This is a useful way to monitor whats going on and ensure you can spot issues more timely and easily.
Update and upgrade your packges sudo apt update &amp;amp;&amp;amp; sudo apt upgrade
Installing Logwatch sudo apt install logwatch
Configuring Logwatch default.conf/logwatch.conf sudo vim /usr/share/logwatch/default.conf/logwatch.conf
I&amp;rsquo;d recommend setting following parameters as below:
Output = mail Format = html MailTo = support@domain.</description></item><item><title>10. Sysctl Optimization</title><link>https://notes.justin-p.me/guides/ubuntu-vps/10-sysctl-optimization/</link><pubDate>Tue, 10 Mar 2020 16:37:55 +0100</pubDate><guid>https://notes.justin-p.me/guides/ubuntu-vps/10-sysctl-optimization/</guid><description>Sysctl Optimization Linux sysctl.conf parameter tweaking to improve memory management, network security, network performance.
Configuration Open /etc/sysctl.conf in an editor
sudo vim /etc/sysctl.conf
Add the following lines to the end of the file:
# Do not accept ICMP redirects (prevent MITM attacks) net.ipv4.conf.all.accept_redirects = 0 net.ipv6.conf.all.accept_redirects = 0 # Do not send ICMP redirects (we are not a router) net.ipv4.conf.all.send_redirects = 0 # Log Martian Packets net.ipv4.conf.all.log_martians = 1 # Controls IP packet forwarding net.</description></item></channel></rss>